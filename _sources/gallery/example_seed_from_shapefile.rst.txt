.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_seed_from_shapefile.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_seed_from_shapefile.py:


Seeding from shapefile
==================================


.. code-block:: default


    from datetime import datetime
    from opendrift.models.oceandrift import OceanDrift


    o = OceanDrift(loglevel=20)  # Set loglevel to 0 for debug information





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    19:37:25 INFO: OpenDriftSimulation initialised (version 1.2.1)




Seed oil particles within contours from shapefile


.. code-block:: default

    o.seed_from_shapefile(o.test_data_folder() +
                          'shapefile_spawning_areas/Torsk.shp',
                          number=2000, layername=None,
                          featurenum=[2, 4], time=datetime.now())

    o.fallback_values['x_wind'] = -4  # Constant wind drift
    o.fallback_values['y_wind'] = 8
    o.set_config('drift:wind_uncertainty', 4) # Adding some diffusion





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    19:37:25 INFO: Seeding for layer: Torsk (8 features)
    19:37:25 INFO: Total area of all polygons: 87279214797.0045 m2
    19:37:25 INFO:  Seeding 1721 elements within polygon number 2
    19:37:26 INFO:  Seeding 279 elements within polygon number 4




Running model


.. code-block:: default

    o.run(steps=50, time_step=3600)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    19:37:26 INFO: Config validation OK
    19:37:26 INFO: Setting SRS to latlong, since not defined before.
    19:37:26 INFO: Fallback values will be used for the following variables which have no readers: 
    19:37:26 INFO:  x_sea_water_velocity: 0.000000
    19:37:26 INFO:  y_sea_water_velocity: 0.000000
    19:37:26 INFO:  x_wind: -4.000000
    19:37:26 INFO:  y_wind: 8.000000
    19:37:26 INFO: Adding a dynamical landmask with max. priority based on assumed maximum speed of 1 m/s. Adding a customised landmask may be faster...
    19:37:29 INFO: Using existing reader for land_binary_mask
    19:37:29 INFO: All points are in ocean
    19:37:29 INFO: 2020-05-27 19:37:25.187738 - step 1 of 50 - 2000 active elements (0 deactivated)
    19:37:29 INFO: 2020-05-27 20:37:25.187738 - step 2 of 50 - 2000 active elements (0 deactivated)
    19:37:29 INFO: 2020-05-27 21:37:25.187738 - step 3 of 50 - 2000 active elements (0 deactivated)
    19:37:29 INFO: 2020-05-27 22:37:25.187738 - step 4 of 50 - 2000 active elements (0 deactivated)
    19:37:29 INFO: 2020-05-27 23:37:25.187738 - step 5 of 50 - 2000 active elements (0 deactivated)
    19:37:29 INFO: 2020-05-28 00:37:25.187738 - step 6 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 01:37:25.187738 - step 7 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 02:37:25.187738 - step 8 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 03:37:25.187738 - step 9 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 04:37:25.187738 - step 10 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 05:37:25.187738 - step 11 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 06:37:25.187738 - step 12 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 07:37:25.187738 - step 13 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 08:37:25.187738 - step 14 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 09:37:25.187738 - step 15 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 10:37:25.187738 - step 16 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 11:37:25.187738 - step 17 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 12:37:25.187738 - step 18 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 13:37:25.187738 - step 19 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 14:37:25.187738 - step 20 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 15:37:25.187738 - step 21 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 16:37:25.187738 - step 22 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 17:37:25.187738 - step 23 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 18:37:25.187738 - step 24 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 19:37:25.187738 - step 25 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 20:37:25.187738 - step 26 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 21:37:25.187738 - step 27 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 22:37:25.187738 - step 28 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-28 23:37:25.187738 - step 29 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 00:37:25.187738 - step 30 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 01:37:25.187738 - step 31 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 02:37:25.187738 - step 32 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 03:37:25.187738 - step 33 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 04:37:25.187738 - step 34 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 05:37:25.187738 - step 35 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 06:37:25.187738 - step 36 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 07:37:25.187738 - step 37 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 08:37:25.187738 - step 38 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 09:37:25.187738 - step 39 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 10:37:25.187738 - step 40 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 11:37:25.187738 - step 41 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 12:37:25.187738 - step 42 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 13:37:25.187738 - step 43 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 14:37:25.187738 - step 44 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 15:37:25.187738 - step 45 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 16:37:25.187738 - step 46 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 17:37:25.187738 - step 47 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 18:37:25.187738 - step 48 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 19:37:25.187738 - step 49 of 50 - 2000 active elements (0 deactivated)
    19:37:30 INFO: 2020-05-29 20:37:25.187738 - step 50 of 50 - 2000 active elements (0 deactivated)




Print and plot results


.. code-block:: default

    print(o)
    o.plot(fast=True)
    o.animation(fast=True)




.. image:: /gallery/images/sphx_glr_example_seed_from_shapefile_001.png
    :alt: OceanDrift  2020-05-27 19:37 to 2020-05-29 21:37 UTC (51 steps)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    global_landmask
     0:00:00.5  total
     0:00:00.0  preparing
     0:00:00.5  reading
     0:00:00.0  interpolation_time
     0:00:00.0  masking
    --------------------
    Performance:
        5.4 total time
        0.9 configuration
        3.3 preparing main loop
          3.2 making dynamical landmask
          0.0 moving elements to ocean
          0.6 readers
            0.5 global_landmask
            0.0 postprocessing
        1.0 main loop
          0.1 updating elements
        0.0 cleaning up
    --------------------
    ===========================
    Model:  OceanDrift     (OpenDrift version 1.2.1)
            2000 active PassiveTracer particles  (0 deactivated, 0 scheduled)
    Projection: +proj=latlong
    -------------------
    Environment variables:
      -----
      land_binary_mask
         1) global_landmask
      -----
    Readers not added for the following variables:
      x_sea_water_velocity
      x_wind
      y_sea_water_velocity
      y_wind

    Time:
            Start: 2020-05-27 19:37:25.187738
            Present: 2020-05-29 21:37:25.187738
            Calculation steps: 50 * 1:00:00 - total time: 2 days, 2:00:00
            Output steps: 51 * 1:00:00
    ===========================

    19:37:30 WARNING: plotting fast. this will make your plots less accurate.
    /opt/conda/envs/opendrift/lib/python3.8/site-packages/cartopy/mpl/gridliner.py:307: UserWarning: The .xlabels_top attribute is deprecated. Please use .top_labels to toggle visibility instead.
      warnings.warn('The .xlabels_top attribute is deprecated. Please '
    /root/project/opendrift/models/basemodel.py:3277: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()
    19:37:40 WARNING: plotting fast. this will make your plots less accurate.
    /opt/conda/envs/opendrift/lib/python3.8/site-packages/cartopy/mpl/gridliner.py:307: UserWarning: The .xlabels_top attribute is deprecated. Please use .top_labels to toggle visibility instead.
      warnings.warn('The .xlabels_top attribute is deprecated. Please '
    /opt/conda/envs/opendrift/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:1546: MatplotlibDeprecationWarning: Using a string of single character colors as a color sequence is deprecated. Use an explicit list instead.
      result = matplotlib.axes.Axes.scatter(self, *args, **kwargs)
    19:37:44 INFO: Saving animation to /root/project/docs/source/gallery/animations/example_seed_from_shapefile_0.gif...
    19:37:44 INFO: Making animated gif...




.. image:: /gallery/animations/example_seed_from_shapefile_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  51.915 seconds)


.. _sphx_glr_download_gallery_example_seed_from_shapefile.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_seed_from_shapefile.py <example_seed_from_shapefile.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_seed_from_shapefile.ipynb <example_seed_from_shapefile.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
