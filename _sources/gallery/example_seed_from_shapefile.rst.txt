.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_example_seed_from_shapefile.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_seed_from_shapefile.py:


Seeding from shapefile
==================================


.. code-block:: default


    from datetime import datetime
    from opendrift.models.oceandrift import OceanDrift


    o = OceanDrift(loglevel=20)  # Set loglevel to 0 for debug information





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    12:33:04 INFO: OpenDriftSimulation initialised (version 1.2.0)




Seed oil particles within contours from shapefile


.. code-block:: default

    o.seed_from_shapefile(o.test_data_folder() +
                          'shapefile_spawning_areas/Torsk.shp',
                          number=2000, layername=None,
                          featurenum=[2, 4], time=datetime.now())

    o.fallback_values['x_wind'] = -4  # Constant wind drift
    o.fallback_values['y_wind'] = 8
    o.set_config('drift:wind_uncertainty', 4) # Adding some diffusion








Running model


.. code-block:: default

    o.run(steps=50, time_step=3600)








Print and plot results


.. code-block:: default

    print(o)
    o.plot(fast=True)
    o.animation(fast=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    global_landmask
     0:00:00.0  total
     0:00:00.0  preparing
     0:00:00.0  reading
     0:00:00.0  interpolation_time
     0:00:00.0  masking
    --------------------
    Performance:
        4.0 total time
        0.7 configuration
        2.7 preparing main loop
          2.7 making dynamical landmask
          0.0 moving elements to ocean
          0.1 readers
            0.0 global_landmask
            0.0 postprocessing
        0.5 main loop
          0.1 updating elements
        0.0 cleaning up
    --------------------
    ===========================
    Model:  OceanDrift     (OpenDrift version 1.2.0)
            2000 active PassiveTracer particles  (0 deactivated, 0 scheduled)
    Projection: +proj=latlong
    -------------------
    Environment variables:
      -----
      land_binary_mask
         1) global_landmask
      -----
    Readers not added for the following variables:
      x_sea_water_velocity
      x_wind
      y_sea_water_velocity
      y_wind

    Time:
            Start: 2020-02-07 12:33:04.026471
            Present: 2020-02-09 14:33:04.026471
            Calculation steps: 50 * 1:00:00 - total time: 2 days, 2:00:00
            Output steps: 51 * 1:00:00
    ===========================

    /root/project/opendrift/models/basemodel.py:3260: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()
    /root/project/opendrift/models/basemodel.py:2841: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()
    /root/project/opendrift/models/basemodel.py:3797: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      anim.save(filename, fps=fps, writer='imagemagick')




.. image:: /gallery/animations/example_seed_from_shapefile_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  18.862 seconds)


.. _sphx_glr_download_gallery_example_seed_from_shapefile.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_seed_from_shapefile.py <example_seed_from_shapefile.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_seed_from_shapefile.ipynb <example_seed_from_shapefile.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
