.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_example_oil_budget_noaa.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_oil_budget_noaa.py:


Oil budget (NOAA)
==================================


.. code-block:: default


    from datetime import datetime
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.models.openoil3D import OpenOil3D

    o = OpenOil3D(loglevel=20, weathering_model='noaa')

    # Using constand wind and current
    #o.fallback_values['x_wind'] = 7
    #o.fallback_values['x_sea_water_velocity'] = .7
    #o.fallback_values['y_sea_water_velocity'] = .3
    #o.fallback_values['land_binary_mask'] = 0

    # Arome atmospheric model
    reader_arome = reader_netCDF_CF_generic.Reader(o.test_data_folder() + '16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc')
    # Norkyst ocean model
    reader_norkyst = reader_netCDF_CF_generic.Reader(o.test_data_folder() + '16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc')

    o.add_reader([reader_arome, reader_norkyst])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    13:55:15 INFO: OpenDriftSimulation initialised (version 1.2.0)
    13:55:15 INFO: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
    13:55:15 INFO: Opening file with Dataset
    13:55:15 INFO: Could not parse CF grid_mapping
    13:55:15 INFO: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
    13:55:15 INFO: Opening file with Dataset




Seeding some particles
oiltype='GULLFAKS, EXXON'
oiltype='ALGERIAN CONDENSATE'


.. code-block:: default

    oiltype='MARTIN LINGE CRUDE 2016'
    o.seed_elements(lon=4.88, lat=60.1, z=0, radius=3000, number=500,
                    time=reader_norkyst.start_time, oiltype=oiltype)








Adjusting some configuration


.. code-block:: default

    o.set_config('processes:dispersion', False)
    o.set_config('processes:evaporation', True)
    o.set_config('processes:emulsification', True)
    o.set_config('processes:turbulentmixing', True)
    o.set_config('turbulentmixing:timestep', 2)








Running model (until end of driver data)


.. code-block:: default

    o.run(steps=4*24, time_step=900, time_step_output=3600)








Print and plot results
o.plot_oil_budget('oil_budget_MartinLingeCrude.png')


.. code-block:: default

    o.plot_oil_budget()
    o.plot(fast=True)
    o.animation(fast=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /root/project/opendrift/models/basemodel.py:3260: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()
    /root/project/opendrift/models/basemodel.py:2841: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()




.. image:: /gallery/animations/example_oil_budget_noaa_0.gif


.. code-block:: default


    o.plot_property('fraction_evaporated')
    o.plot_property('density')
    o.plot_property('water_fraction')
    o.plot_property('viscosity')
    o.plot_property('interfacial_area')
    o.plot_property('z')




.. image:: /gallery/images/sphx_glr_example_oil_budget_noaa_001.png
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  6.520 seconds)


.. _sphx_glr_download_gallery_example_oil_budget_noaa.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_oil_budget_noaa.py <example_oil_budget_noaa.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_oil_budget_noaa.ipynb <example_oil_budget_noaa.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
