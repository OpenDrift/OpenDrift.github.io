.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_example_checkerboard.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_checkerboard.py:


Checkerboard
============


.. code-block:: default


    import numpy as np
    from opendrift.readers import reader_global_landmask
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.models.oceandrift import OceanDrift

    o = OceanDrift(loglevel=20)  # Set loglevel to 0 for debug information

    # Norkyst
    #reader_norkyst = reader_netCDF_CF_generic.Reader('http://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be')
    reader_norkyst = reader_netCDF_CF_generic.Reader(o.test_data_folder() + '16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc')

    o.add_reader([reader_norkyst])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    14:16:59 INFO: OpenDriftSimulation initialised (version 1.2.0)
    14:16:59 INFO: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
    14:16:59 INFO: Opening file with Dataset




Seeding particles in a checkerboard pattern


.. code-block:: default

    di = 5 # Horizontal number of particles per square
    dj = 5 # Vertical number of particles per square
    lons = np.linspace(3.5, 5.0, 100)
    lats = np.linspace(60, 61, 100)

    ii = np.arange(len(lons))//di
    jj = np.arange(len(lats))//dj
    ii, jj = np.meshgrid(ii, jj)
    board = (ii+jj)%2 > 0

    lons, lats = np.meshgrid(lons, lats)

    lons = lons[board].ravel()
    lats = lats[board].ravel()








Seed oil elements at defined position and time


.. code-block:: default

    o.seed_elements(lons, lats, radius=0, number=10000,
                    time=reader_norkyst.start_time)








Running model (until end of driver data)


.. code-block:: default

    o.run(steps=66*2, time_step=1800)








Print and plot results


.. code-block:: default

    print(o)
    o.animation(fast=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
     0:00:09.1  total
     0:00:00.1  preparing
     0:00:00.3  reading
     0:00:00.4  interpolation
     0:00:00.0  interpolation_time
     0:00:08.0  rotating vectors
     0:00:00.0  masking
    --------------------
    global_landmask
     0:00:00.5  total
     0:00:00.0  preparing
     0:00:00.4  reading
     0:00:00.0  interpolation_time
     0:00:00.0  masking
    --------------------
    Performance:
       19.9 total time
        1.9 configuration
        3.5 preparing main loop
          2.8 making dynamical landmask
          0.3 moving elements to ocean
         10.3 readers
            0.5 global_landmask
            0.2 postprocessing
       14.3 main loop
            9.2 /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
          2.4 updating elements
        0.0 cleaning up
    --------------------
    ===========================
    Model:  OceanDrift     (OpenDrift version 1.2.0)
            7618 active PassiveTracer particles  (2382 deactivated, 0 scheduled)
    Projection: +proj=stere +lat_0=90 +lon_0=70 +lat_ts=60 +units=m +a=6.371e+06 +e=0 +no_defs
    -------------------
    Environment variables:
      -----
      x_sea_water_velocity
      y_sea_water_velocity
         1) /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
      -----
      land_binary_mask
         1) global_landmask
      -----
    Readers not added for the following variables:
      x_wind
      y_wind

    Time:
            Start: 2015-11-16 00:00:00
            Present: 2015-11-18 18:00:00
            Calculation steps: 132 * 0:30:00 - total time: 2 days, 18:00:00
            Output steps: 133 * 0:30:00
    ===========================

    /root/project/opendrift/models/basemodel.py:2828: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()




.. image:: /gallery/animations/example_checkerboard_0.gif


.. code-block:: default


    o.plot()



.. image:: /gallery/images/sphx_glr_example_checkerboard_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /root/project/opendrift/models/basemodel.py:3244: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()

    (<cartopy.mpl.geoaxes.GeoAxesSubplot object at 0x7f3db1020220>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/pyplot.py'>)




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  38.152 seconds)


.. _sphx_glr_download_gallery_example_checkerboard.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_checkerboard.py <example_checkerboard.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_checkerboard.ipynb <example_checkerboard.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
