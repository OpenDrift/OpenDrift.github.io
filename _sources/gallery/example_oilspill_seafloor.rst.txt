.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_oilspill_seafloor.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_oilspill_seafloor.py:


Seafloor oil spill
===================


.. code-block:: default


    from datetime import timedelta
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.models.openoil import OpenOil

    o = OpenOil(loglevel=20)  # Set loglevel to 0 for debug information

    # Norkyst
    reader_norkyst = reader_netCDF_CF_generic.Reader(o.test_data_folder() + '14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc')
    #reader_norkyst = reader_netCDF_CF_generic.Reader('https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be')

    o.add_reader([reader_norkyst])
    o.set_config('environment:fallback:x_wind', 3)
    o.set_config('environment:fallback:y_wind', 7)
    o.set_config('drift:vertical_mixing', True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    09:20:01 INFO    opendrift: OpenDriftSimulation initialised (version 1.4.2)
    09:20:01 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening dataset: /root/project/tests/test_data/14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc
    09:20:01 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening file with Dataset




Seeding some particles


.. code-block:: default

    time = [reader_norkyst.start_time,
            reader_norkyst.start_time + timedelta(hours=1)]
    o.seed_elements(lon=4.5, lat=62.0, z='seafloor', radius=0, number=3000,
                    time=time, oiltype='*GENERIC DIESEL')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    09:20:01 INFO    opendrift: Using particle diameters between 0.0005 and 0.005 m for elements seeded below sea surface.
    /opt/conda/envs/opendrift/lib/python3.8/site-packages/scipy/optimize/minpack.py:828: OptimizeWarning: Covariance of the parameters could not be estimated
      warnings.warn('Covariance of the parameters could not be estimated',
    09:20:01 INFO    opendrift: Using density 841.2901723334885 and viscosity 6.3404392151148305e-06 of oiltype *GENERIC DIESEL




Setting the range of droplet sizes for the seafloor release


.. code-block:: default

    o.set_config('seed:droplet_diameter_min_subsea', 0.0001)
    o.set_config('seed:droplet_diameter_max_subsea', 0.0005)








Running model with a small timestep to resolve the boyant rising


.. code-block:: default

    o.run(duration=timedelta(hours=2), time_step=60, time_step_output=60)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    09:20:01 INFO    opendrift: Setting SRS to latlong, since non-zero value used for fallback vectors (x_wind)
    09:20:01 INFO    opendrift: Setting SRS to latlong, since non-zero value used for fallback vectors (y_wind)
    09:20:01 INFO    opendrift: Fallback values will be used for the following variables which have no readers: 
    09:20:01 INFO    opendrift:     x_wind: 3.000000
    09:20:01 INFO    opendrift:     y_wind: 7.000000
    09:20:01 INFO    opendrift:     upward_sea_water_velocity: 0.000000
    09:20:01 INFO    opendrift:     sea_surface_wave_significant_height: 0.000000
    09:20:01 INFO    opendrift:     sea_surface_wave_stokes_drift_x_velocity: 0.000000
    09:20:01 INFO    opendrift:     sea_surface_wave_stokes_drift_y_velocity: 0.000000
    09:20:01 INFO    opendrift:     sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    09:20:01 INFO    opendrift:     sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    09:20:01 INFO    opendrift:     sea_ice_area_fraction: 0.000000
    09:20:01 INFO    opendrift:     sea_ice_x_velocity: 0.000000
    09:20:01 INFO    opendrift:     sea_ice_y_velocity: 0.000000
    09:20:01 INFO    opendrift:     ocean_vertical_diffusivity: 0.020000
    09:20:01 DEBUG   root: Nothing to prepare for /root/project/tests/test_data/14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc
    09:20:01 INFO    opendrift: Adding a dynamical landmask with max. priority based on assumed maximum speed of 1.3 m/s. Adding a customised landmask may be faster...
    09:20:04 INFO    opendrift: Using existing reader for land_binary_mask
    09:20:04 INFO    opendrift: All points are in ocean
    09:20:04 INFO    opendrift: Oil-water surface tension is 0.029436 Nm
    09:20:04 INFO    opendrift: 2016-01-14 00:00:00 - step 1 of 120 - 50 active elements (0 deactivated)
    09:20:04 INFO    opendrift: 2016-01-14 00:01:00 - step 2 of 120 - 100 active elements (0 deactivated)
    09:20:04 INFO    opendrift: 2016-01-14 00:02:00 - step 3 of 120 - 150 active elements (0 deactivated)
    09:20:04 INFO    opendrift: 2016-01-14 00:03:00 - step 4 of 120 - 200 active elements (0 deactivated)
    09:20:04 INFO    opendrift: 2016-01-14 00:04:00 - step 5 of 120 - 250 active elements (0 deactivated)
    09:20:05 INFO    opendrift: 2016-01-14 00:05:00 - step 6 of 120 - 300 active elements (0 deactivated)
    09:20:05 INFO    opendrift: 2016-01-14 00:06:00 - step 7 of 120 - 350 active elements (0 deactivated)
    09:20:05 INFO    opendrift: 2016-01-14 00:07:00 - step 8 of 120 - 400 active elements (0 deactivated)
    09:20:05 INFO    opendrift: 2016-01-14 00:08:00 - step 9 of 120 - 450 active elements (0 deactivated)
    09:20:05 INFO    opendrift: 2016-01-14 00:09:00 - step 10 of 120 - 500 active elements (0 deactivated)
    09:20:05 INFO    opendrift: 2016-01-14 00:10:00 - step 11 of 120 - 550 active elements (0 deactivated)
    09:20:05 INFO    opendrift: 2016-01-14 00:11:00 - step 12 of 120 - 600 active elements (0 deactivated)
    09:20:05 INFO    opendrift: 2016-01-14 00:12:00 - step 13 of 120 - 650 active elements (0 deactivated)
    09:20:06 INFO    opendrift: 2016-01-14 00:13:00 - step 14 of 120 - 700 active elements (0 deactivated)
    09:20:06 INFO    opendrift: 2016-01-14 00:14:00 - step 15 of 120 - 750 active elements (0 deactivated)
    09:20:06 INFO    opendrift: 2016-01-14 00:15:00 - step 16 of 120 - 800 active elements (0 deactivated)
    09:20:06 INFO    opendrift: 2016-01-14 00:16:00 - step 17 of 120 - 850 active elements (0 deactivated)
    09:20:06 INFO    opendrift: 2016-01-14 00:17:00 - step 18 of 120 - 900 active elements (0 deactivated)
    09:20:06 INFO    opendrift: 2016-01-14 00:18:00 - step 19 of 120 - 950 active elements (0 deactivated)
    09:20:06 INFO    opendrift: 2016-01-14 00:19:00 - step 20 of 120 - 1000 active elements (0 deactivated)
    09:20:06 INFO    opendrift: 2016-01-14 00:20:00 - step 21 of 120 - 1050 active elements (0 deactivated)
    09:20:07 INFO    opendrift: 2016-01-14 00:21:00 - step 22 of 120 - 1100 active elements (0 deactivated)
    09:20:07 INFO    opendrift: 2016-01-14 00:22:00 - step 23 of 120 - 1150 active elements (0 deactivated)
    09:20:07 INFO    opendrift: 2016-01-14 00:23:00 - step 24 of 120 - 1200 active elements (0 deactivated)
    09:20:07 INFO    opendrift: 2016-01-14 00:24:00 - step 25 of 120 - 1250 active elements (0 deactivated)
    09:20:07 INFO    opendrift: 2016-01-14 00:25:00 - step 26 of 120 - 1300 active elements (0 deactivated)
    09:20:07 INFO    opendrift: 2016-01-14 00:26:00 - step 27 of 120 - 1350 active elements (0 deactivated)
    09:20:07 INFO    opendrift: 2016-01-14 00:27:00 - step 28 of 120 - 1400 active elements (0 deactivated)
    09:20:08 INFO    opendrift: 2016-01-14 00:28:00 - step 29 of 120 - 1450 active elements (0 deactivated)
    09:20:08 INFO    opendrift: 2016-01-14 00:29:00 - step 30 of 120 - 1500 active elements (0 deactivated)
    09:20:08 INFO    opendrift: 2016-01-14 00:30:00 - step 31 of 120 - 1550 active elements (0 deactivated)
    09:20:08 INFO    opendrift: 2016-01-14 00:31:00 - step 32 of 120 - 1600 active elements (0 deactivated)
    09:20:08 INFO    opendrift: 2016-01-14 00:32:00 - step 33 of 120 - 1650 active elements (0 deactivated)
    09:20:08 INFO    opendrift: 2016-01-14 00:33:00 - step 34 of 120 - 1700 active elements (0 deactivated)
    09:20:09 INFO    opendrift: 2016-01-14 00:34:00 - step 35 of 120 - 1750 active elements (0 deactivated)
    09:20:09 INFO    opendrift: 2016-01-14 00:35:00 - step 36 of 120 - 1800 active elements (0 deactivated)
    09:20:09 INFO    opendrift: 2016-01-14 00:36:00 - step 37 of 120 - 1850 active elements (0 deactivated)
    09:20:09 INFO    opendrift: 2016-01-14 00:37:00 - step 38 of 120 - 1900 active elements (0 deactivated)
    09:20:09 INFO    opendrift: 2016-01-14 00:38:00 - step 39 of 120 - 1950 active elements (0 deactivated)
    09:20:10 INFO    opendrift: 2016-01-14 00:39:00 - step 40 of 120 - 2000 active elements (0 deactivated)
    09:20:10 INFO    opendrift: 2016-01-14 00:40:00 - step 41 of 120 - 2050 active elements (0 deactivated)
    09:20:10 INFO    opendrift: 2016-01-14 00:41:00 - step 42 of 120 - 2100 active elements (0 deactivated)
    09:20:10 INFO    opendrift: 2016-01-14 00:42:00 - step 43 of 120 - 2150 active elements (0 deactivated)
    09:20:10 INFO    opendrift: 2016-01-14 00:43:00 - step 44 of 120 - 2200 active elements (0 deactivated)
    09:20:11 INFO    opendrift: 2016-01-14 00:44:00 - step 45 of 120 - 2250 active elements (0 deactivated)
    09:20:11 INFO    opendrift: 2016-01-14 00:45:00 - step 46 of 120 - 2300 active elements (0 deactivated)
    09:20:11 INFO    opendrift: 2016-01-14 00:46:00 - step 47 of 120 - 2350 active elements (0 deactivated)
    09:20:11 INFO    opendrift: 2016-01-14 00:47:00 - step 48 of 120 - 2400 active elements (0 deactivated)
    09:20:11 INFO    opendrift: 2016-01-14 00:48:00 - step 49 of 120 - 2450 active elements (0 deactivated)
    09:20:12 INFO    opendrift: 2016-01-14 00:49:00 - step 50 of 120 - 2500 active elements (0 deactivated)
    09:20:12 INFO    opendrift: 2016-01-14 00:50:00 - step 51 of 120 - 2550 active elements (0 deactivated)
    09:20:12 INFO    opendrift: 2016-01-14 00:51:00 - step 52 of 120 - 2600 active elements (0 deactivated)
    09:20:12 INFO    opendrift: 2016-01-14 00:52:00 - step 53 of 120 - 2650 active elements (0 deactivated)
    09:20:12 INFO    opendrift: 2016-01-14 00:53:00 - step 54 of 120 - 2700 active elements (0 deactivated)
    09:20:13 INFO    opendrift: 2016-01-14 00:54:00 - step 55 of 120 - 2750 active elements (0 deactivated)
    09:20:13 INFO    opendrift: 2016-01-14 00:55:00 - step 56 of 120 - 2800 active elements (0 deactivated)
    09:20:13 INFO    opendrift: 2016-01-14 00:56:00 - step 57 of 120 - 2850 active elements (0 deactivated)
    09:20:13 INFO    opendrift: 2016-01-14 00:57:00 - step 58 of 120 - 2900 active elements (0 deactivated)
    09:20:13 INFO    opendrift: 2016-01-14 00:58:00 - step 59 of 120 - 2950 active elements (0 deactivated)
    09:20:14 INFO    opendrift: 2016-01-14 00:59:00 - step 60 of 120 - 3000 active elements (0 deactivated)
    09:20:14 INFO    opendrift: 2016-01-14 01:00:00 - step 61 of 120 - 3000 active elements (0 deactivated)
    09:20:14 INFO    opendrift: 2016-01-14 01:01:00 - step 62 of 120 - 3000 active elements (0 deactivated)
    09:20:14 INFO    opendrift: 2016-01-14 01:02:00 - step 63 of 120 - 3000 active elements (0 deactivated)
    09:20:14 INFO    opendrift: 2016-01-14 01:03:00 - step 64 of 120 - 3000 active elements (0 deactivated)
    09:20:15 INFO    opendrift: 2016-01-14 01:04:00 - step 65 of 120 - 3000 active elements (0 deactivated)
    09:20:15 INFO    opendrift: 2016-01-14 01:05:00 - step 66 of 120 - 3000 active elements (0 deactivated)
    09:20:15 INFO    opendrift: 2016-01-14 01:06:00 - step 67 of 120 - 3000 active elements (0 deactivated)
    09:20:15 INFO    opendrift: 2016-01-14 01:07:00 - step 68 of 120 - 3000 active elements (0 deactivated)
    09:20:16 INFO    opendrift: 2016-01-14 01:08:00 - step 69 of 120 - 3000 active elements (0 deactivated)
    09:20:16 INFO    opendrift: 2016-01-14 01:09:00 - step 70 of 120 - 3000 active elements (0 deactivated)
    09:20:16 INFO    opendrift: 2016-01-14 01:10:00 - step 71 of 120 - 3000 active elements (0 deactivated)
    09:20:16 INFO    opendrift: 2016-01-14 01:11:00 - step 72 of 120 - 3000 active elements (0 deactivated)
    09:20:16 INFO    opendrift: 2016-01-14 01:12:00 - step 73 of 120 - 3000 active elements (0 deactivated)
    09:20:17 INFO    opendrift: 2016-01-14 01:13:00 - step 74 of 120 - 3000 active elements (0 deactivated)
    09:20:17 INFO    opendrift: 2016-01-14 01:14:00 - step 75 of 120 - 3000 active elements (0 deactivated)
    09:20:17 INFO    opendrift: 2016-01-14 01:15:00 - step 76 of 120 - 3000 active elements (0 deactivated)
    09:20:17 INFO    opendrift: 2016-01-14 01:16:00 - step 77 of 120 - 3000 active elements (0 deactivated)
    09:20:17 INFO    opendrift: 2016-01-14 01:17:00 - step 78 of 120 - 3000 active elements (0 deactivated)
    09:20:18 INFO    opendrift: 2016-01-14 01:18:00 - step 79 of 120 - 3000 active elements (0 deactivated)
    09:20:18 INFO    opendrift: 2016-01-14 01:19:00 - step 80 of 120 - 3000 active elements (0 deactivated)
    09:20:18 INFO    opendrift: 2016-01-14 01:20:00 - step 81 of 120 - 3000 active elements (0 deactivated)
    09:20:18 INFO    opendrift: 2016-01-14 01:21:00 - step 82 of 120 - 3000 active elements (0 deactivated)
    09:20:19 INFO    opendrift: 2016-01-14 01:22:00 - step 83 of 120 - 3000 active elements (0 deactivated)
    09:20:19 INFO    opendrift: 2016-01-14 01:23:00 - step 84 of 120 - 3000 active elements (0 deactivated)
    09:20:19 INFO    opendrift: 2016-01-14 01:24:00 - step 85 of 120 - 3000 active elements (0 deactivated)
    09:20:19 INFO    opendrift: 2016-01-14 01:25:00 - step 86 of 120 - 3000 active elements (0 deactivated)
    09:20:19 INFO    opendrift: 2016-01-14 01:26:00 - step 87 of 120 - 3000 active elements (0 deactivated)
    09:20:20 INFO    opendrift: 2016-01-14 01:27:00 - step 88 of 120 - 3000 active elements (0 deactivated)
    09:20:20 INFO    opendrift: 2016-01-14 01:28:00 - step 89 of 120 - 3000 active elements (0 deactivated)
    09:20:20 INFO    opendrift: 2016-01-14 01:29:00 - step 90 of 120 - 3000 active elements (0 deactivated)
    09:20:20 INFO    opendrift: 2016-01-14 01:30:00 - step 91 of 120 - 3000 active elements (0 deactivated)
    09:20:20 INFO    opendrift: 2016-01-14 01:31:00 - step 92 of 120 - 3000 active elements (0 deactivated)
    09:20:21 INFO    opendrift: 2016-01-14 01:32:00 - step 93 of 120 - 3000 active elements (0 deactivated)
    09:20:21 INFO    opendrift: 2016-01-14 01:33:00 - step 94 of 120 - 3000 active elements (0 deactivated)
    09:20:21 INFO    opendrift: 2016-01-14 01:34:00 - step 95 of 120 - 3000 active elements (0 deactivated)
    09:20:21 INFO    opendrift: 2016-01-14 01:35:00 - step 96 of 120 - 3000 active elements (0 deactivated)
    09:20:23 INFO    opendrift: 2016-01-14 01:36:00 - step 97 of 120 - 3000 active elements (0 deactivated)
    09:20:23 INFO    opendrift: 2016-01-14 01:37:00 - step 98 of 120 - 3000 active elements (0 deactivated)
    09:20:23 INFO    opendrift: 2016-01-14 01:38:00 - step 99 of 120 - 3000 active elements (0 deactivated)
    09:20:23 INFO    opendrift: 2016-01-14 01:39:00 - step 100 of 120 - 3000 active elements (0 deactivated)
    09:20:23 INFO    opendrift: 2016-01-14 01:40:00 - step 101 of 120 - 3000 active elements (0 deactivated)
    09:20:24 INFO    opendrift: 2016-01-14 01:41:00 - step 102 of 120 - 3000 active elements (0 deactivated)
    09:20:24 INFO    opendrift: 2016-01-14 01:42:00 - step 103 of 120 - 3000 active elements (0 deactivated)
    09:20:24 INFO    opendrift: 2016-01-14 01:43:00 - step 104 of 120 - 3000 active elements (0 deactivated)
    09:20:24 INFO    opendrift: 2016-01-14 01:44:00 - step 105 of 120 - 3000 active elements (0 deactivated)
    09:20:24 INFO    opendrift: 2016-01-14 01:45:00 - step 106 of 120 - 3000 active elements (0 deactivated)
    09:20:25 INFO    opendrift: 2016-01-14 01:46:00 - step 107 of 120 - 3000 active elements (0 deactivated)
    09:20:25 INFO    opendrift: 2016-01-14 01:47:00 - step 108 of 120 - 3000 active elements (0 deactivated)
    09:20:25 INFO    opendrift: 2016-01-14 01:48:00 - step 109 of 120 - 3000 active elements (0 deactivated)
    09:20:25 INFO    opendrift: 2016-01-14 01:49:00 - step 110 of 120 - 3000 active elements (0 deactivated)
    09:20:26 INFO    opendrift: 2016-01-14 01:50:00 - step 111 of 120 - 3000 active elements (0 deactivated)
    09:20:26 INFO    opendrift: 2016-01-14 01:51:00 - step 112 of 120 - 3000 active elements (0 deactivated)
    09:20:26 INFO    opendrift: 2016-01-14 01:52:00 - step 113 of 120 - 3000 active elements (0 deactivated)
    09:20:26 INFO    opendrift: 2016-01-14 01:53:00 - step 114 of 120 - 3000 active elements (0 deactivated)
    09:20:26 INFO    opendrift: 2016-01-14 01:54:00 - step 115 of 120 - 3000 active elements (0 deactivated)
    09:20:27 INFO    opendrift: 2016-01-14 01:55:00 - step 116 of 120 - 3000 active elements (0 deactivated)
    09:20:27 INFO    opendrift: 2016-01-14 01:56:00 - step 117 of 120 - 3000 active elements (0 deactivated)
    09:20:27 INFO    opendrift: 2016-01-14 01:57:00 - step 118 of 120 - 3000 active elements (0 deactivated)
    09:20:27 INFO    opendrift: 2016-01-14 01:58:00 - step 119 of 120 - 3000 active elements (0 deactivated)
    09:20:27 INFO    opendrift: 2016-01-14 01:59:00 - step 120 of 120 - 3000 active elements (0 deactivated)




Print and plot results


.. code-block:: default

    print(o)

    o.animation_profile()




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    /root/project/tests/test_data/14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc
     0:15:26.1  total time
     0:00:32.1  configuration
     0:01:10.9  preparing main loop
     0:01:05.4  preparing main loop:making dynamical landmask
     0:00:02.7  preparing main loop:moving elements to ocean
     0:12:23.9  main loop:readers
     0:00:09.0  main loop:readers:global_landmask
     0:10:57.4  total
     0:00:00.6  preparing
     0:08:42.7  reading
     0:00:00.1  masking
     0:00:21.4  main loop:readers:postprocessing
     0:13:45.2  main loop
     0:02:29.3  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
     0:00:54.4  interpolation
     0:00:00.6  interpolation_time
     0:01:17.1  rotating vectors
     0:01:25.7  main loop:updating elements
     0:00:01.5  cleaning up
     0:00:01.3  main loop:readers:roms native
     0:00:46.8  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:00:53.6  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
     0:00:17.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
     0:00:00.6  main loop:readers:/root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
     0:00:02.6  main loop:readers:double_gyre
     0:00:00.0  main loop:readers:oscillating_reader
     0:00:01.6  main loop:readers:reader_constant_2d
     0:03:44.5  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/barents25km_agg
     0:00:21.9  main loop:updating elements:oil weathering
     0:00:05.1  main loop:updating elements:oil weathering:updating viscosities
     0:00:15.9  main loop:updating elements:oil weathering:updating densities
     0:00:15.6  main loop:updating elements:vertical mixing
     0:00:28.8  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
     0:00:37.3  main loop:readers:ArtificialOceanEddy
     0:00:03.1  open dataset
     0:00:00.1  build index
     0:01:06.7  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/metusers/knutfd/thredds/netcdf_unstructured_samples/AkvaplanNiva_sample_lonlat_fixed.nc
     0:00:13.3  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
     0:00:00.0  main loop:updating elements:oil weathering:emulsification
     0:00:00.1  main loop:updating elements:oil weathering:dispersion
     0:00:00.8  main loop:readers:reader_current_from_observation
     0:00:01.3  main loop:readers:WIND
     0:00:00.4  main loop:readers:constant_reader
     0:00:00.5  main loop:updating elements:oil weathering:evaporation
     0:00:07.6  main loop:readers:/root/project/tests/test_data/14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc
    --------------------
    global_landmask
     0:15:26.1  total time
     0:00:32.1  configuration
     0:01:10.9  preparing main loop
     0:01:05.4  preparing main loop:making dynamical landmask
     0:00:02.7  preparing main loop:moving elements to ocean
     0:12:23.9  main loop:readers
     0:00:09.0  main loop:readers:global_landmask
     0:10:57.4  total
     0:00:00.6  preparing
     0:08:42.7  reading
     0:00:00.1  masking
     0:00:21.4  main loop:readers:postprocessing
     0:13:45.2  main loop
     0:02:29.3  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
     0:00:54.4  interpolation
     0:00:00.6  interpolation_time
     0:01:17.1  rotating vectors
     0:01:25.7  main loop:updating elements
     0:00:01.5  cleaning up
     0:00:01.3  main loop:readers:roms native
     0:00:46.8  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:00:53.6  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
     0:00:17.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
     0:00:00.6  main loop:readers:/root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
     0:00:02.6  main loop:readers:double_gyre
     0:00:00.0  main loop:readers:oscillating_reader
     0:00:01.6  main loop:readers:reader_constant_2d
     0:03:44.5  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/barents25km_agg
     0:00:21.9  main loop:updating elements:oil weathering
     0:00:05.1  main loop:updating elements:oil weathering:updating viscosities
     0:00:15.9  main loop:updating elements:oil weathering:updating densities
     0:00:15.6  main loop:updating elements:vertical mixing
     0:00:28.8  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
     0:00:37.3  main loop:readers:ArtificialOceanEddy
     0:00:03.1  open dataset
     0:00:00.1  build index
     0:01:06.7  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/metusers/knutfd/thredds/netcdf_unstructured_samples/AkvaplanNiva_sample_lonlat_fixed.nc
     0:00:13.3  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
     0:00:00.0  main loop:updating elements:oil weathering:emulsification
     0:00:00.1  main loop:updating elements:oil weathering:dispersion
     0:00:00.8  main loop:readers:reader_current_from_observation
     0:00:01.3  main loop:readers:WIND
     0:00:00.4  main loop:readers:constant_reader
     0:00:00.5  main loop:updating elements:oil weathering:evaporation
     0:00:07.6  main loop:readers:/root/project/tests/test_data/14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc
    --------------------
    Performance:
    15:26.1 total time
       32.1 configuration
     1:10.9 preparing main loop
       1:05.4 making dynamical landmask
          2.7 moving elements to ocean
      12:23.9 readers
            9.0 global_landmask
    10:57.4 total
        0.6 preparing
     8:42.7 reading
        0.1 masking
           21.4 postprocessing
    13:45.2 main loop
         2:29.3 https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
       54.4 interpolation
        0.6 interpolation_time
     1:17.1 rotating vectors
       1:25.7 updating elements
        1.5 cleaning up
            1.3 roms native
           46.8 https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
           53.6 https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
           17.0 https://thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
            0.6 /root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
            2.6 double_gyre
            0.0 oscillating_reader
            1.6 reader_constant_2d
         3:44.5 https://thredds.met.no/thredds/dodsC/barents25km_agg
           21.9 oil weathering
              5.1 updating viscosities
             15.9 updating densities
           15.6 vertical mixing
           28.8 /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
           37.3 ArtificialOceanEddy
        3.1 open dataset
        0.1 build index
         1:06.7 https://thredds.met.no/thredds/dodsC/metusers/knutfd/thredds/netcdf_unstructured_samples/AkvaplanNiva_sample_lonlat_fixed.nc
           13.3 /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
              0.0 emulsification
              0.1 dispersion
            0.8 reader_current_from_observation
            1.3 WIND
            0.4 constant_reader
              0.5 evaporation
            7.6 /root/project/tests/test_data/14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc
    --------------------
    ===========================
    Model:  OpenOil     (OpenDrift version 1.4.2)
            3000 active Oil particles  (0 deactivated, 0 scheduled)
    Projection: +proj=latlong
    -------------------
    Environment variables:
      -----
      sea_floor_depth_below_sea_level
      sea_water_salinity
      sea_water_temperature
      x_sea_water_velocity
      y_sea_water_velocity
         1) /root/project/tests/test_data/14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc
      -----
      land_binary_mask
         1) global_landmask
      -----
    Readers not added for the following variables:
      ocean_vertical_diffusivity
      sea_ice_area_fraction
      sea_ice_x_velocity
      sea_ice_y_velocity
      sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment
      sea_surface_wave_period_at_variance_spectral_density_maximum
      sea_surface_wave_significant_height
      sea_surface_wave_stokes_drift_x_velocity
      sea_surface_wave_stokes_drift_y_velocity
      upward_sea_water_velocity
      x_wind
      y_wind

    Time:
            Start: 2016-01-14 00:00:00
            Present: 2016-01-14 02:00:00
            Calculation steps: 120 * 0:01:00 - total time: 2:00:00
            Output steps: 121 * 0:01:00
    ===========================

    09:20:28 INFO    opendrift: Saving animation to /root/project/docs/source/gallery/animations/example_oilspill_seafloor_0.gif...
    09:20:28 INFO    opendrift: Making animated gif...
    09:20:28 INFO    matplotlib.animation: Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
    09:20:28 DEBUG   matplotlib.animation: frame size in pixels is 1000 x 600
    09:20:28 INFO    matplotlib.animation: MovieWriter._run: running command: convert -size 1000x600 -depth 8 -delay 5.0 -loop 0 rgba:- /root/project/docs/source/gallery/animations/example_oilspill_seafloor_0.gif
    09:20:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:20:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.




.. image:: /gallery/animations/example_oilspill_seafloor_0.gif


.. code-block:: default


    o.animate_vertical_distribution(bins=30)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    09:23:55 INFO    opendrift: Saving animation to /root/project/docs/source/gallery/animations/example_oilspill_seafloor_1.gif...
    09:23:55 INFO    opendrift: Making animated gif...
    09:23:55 INFO    matplotlib.animation: Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
    09:23:55 DEBUG   matplotlib.animation: frame size in pixels is 640 x 480
    09:23:55 INFO    matplotlib.animation: MovieWriter._run: running command: convert -size 640x480 -depth 8 -delay 10.0 -loop 0 rgba:- /root/project/docs/source/gallery/animations/example_oilspill_seafloor_1.gif
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXGeneral ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 1.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 1.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXGeneral ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to STIXGeneral ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXNonUnicode ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 1.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 1.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXNonUnicode ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to STIXNonUnicode ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeOneSym ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeTwoSym ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeThreeSym ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeFourSym ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeFiveSym ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmsy10 ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmr10 ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmtt10 ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmmi10 ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmb10 ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmss10 ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmex10 ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 0.43499999999999994
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 0.15000000000000002
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf') with score of 0.150000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to DejaVu Sans ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 1.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans Mono ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf') with score of 0.050000.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 0.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    09:23:56 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    09:23:56 DEBUG   matplotlib.font_manager: findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans Display ('/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf') with score of 0.050000.
    09:23:57 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:23:58 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:23:59 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:01 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:02 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:03 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:05 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:06 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:07 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:09 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:10 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:11 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:13 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:14 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:15 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:17 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:21 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:24 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:25 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:26 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:37 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:38 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:39 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:41 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:42 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:43 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:45 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:46 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:53 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:54 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:56 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:57 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:24:58 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:00 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:01 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:02 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:04 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:05 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:07 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:08 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:09 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:11 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:12 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:14 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:15 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:16 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:23 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:25 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:26 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:27 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:37 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:38 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:39 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:41 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:42 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:44 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:45 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:47 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:54 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:55 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:56 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:58 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:25:59 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:00 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:02 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:03 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:05 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:06 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:07 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:09 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:10 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:12 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:13 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:15 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:16 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:23 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:24 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:26 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:27 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:37 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:38 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:39 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:41 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:26:42 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.




.. image:: /gallery/animations/example_oilspill_seafloor_1.gif


.. code-block:: default


    o.plot_oil_budget()



.. image:: /gallery/images/sphx_glr_example_oilspill_seafloor_001.png
    :alt: *GENERIC DIESEL (841.3 kg/m3) - 2016-01-14 00:00 to 2016-01-14 02:00
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 7 minutes  16.880 seconds)


.. _sphx_glr_download_gallery_example_oilspill_seafloor.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_oilspill_seafloor.py <example_oilspill_seafloor.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_oilspill_seafloor.ipynb <example_oilspill_seafloor.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
