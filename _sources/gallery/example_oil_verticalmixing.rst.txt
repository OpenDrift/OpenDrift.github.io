.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_oil_verticalmixing.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_oil_verticalmixing.py:


Oil vertical mixing
==================================


.. code-block:: default


    from datetime import timedelta
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.models.openoil import OpenOil


    o = OpenOil(loglevel=20)  # Set loglevel to 0 for debug information

    ncfile = 'oilmixing.nc'
    import_file = False  # Set to True to import previous run

    if import_file is True:
        o.io_import_file(ncfile)
    else:
        reader_arome = reader_netCDF_CF_generic.Reader('https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc')
        reader_norkyst = reader_netCDF_CF_generic.Reader('https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be')

        o.add_reader([reader_norkyst, reader_arome])

        # Seed oil elements at defined position and time
        o.seed_elements(lon=4.9, lat=62.1, z=0, radius=1000, number=2000,
                        time=reader_arome.start_time)

        # Adjusting some configuration
        #o.set_config('vertical_mixing:diffusivitymodel', 'windspeed_Sundby1983')

        # Running model
        o.run(end_time=reader_arome.start_time + timedelta(hours=12),
              time_step=900, time_step_output=1800, outfile=ncfile)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    09:31:34 INFO    opendrift: OpenDriftSimulation initialised (version 1.4.2)
    09:31:34 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening dataset: https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
    09:31:34 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening file with Dataset
    09:31:35 INFO    opendrift.readers.reader_netCDF_CF_generic: Could not parse CF grid_mapping
    09:31:37 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening dataset: https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
    09:31:37 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening file with Dataset
    09:31:44 INFO    opendrift: Oil type not specified, using default: *GENERIC BUNKER C
    09:31:44 INFO    opendrift: Using density 971.1244775206442 and viscosity 0.050726946087603336 of oiltype *GENERIC BUNKER C
    09:31:44 INFO    opendrift: Fallback values will be used for the following variables which have no readers: 
    09:31:44 INFO    opendrift:     sea_surface_wave_significant_height: 0.000000
    09:31:44 INFO    opendrift:     sea_surface_wave_stokes_drift_x_velocity: 0.000000
    09:31:44 INFO    opendrift:     sea_surface_wave_stokes_drift_y_velocity: 0.000000
    09:31:44 INFO    opendrift:     sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    09:31:44 INFO    opendrift:     sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    09:31:44 INFO    opendrift:     sea_ice_area_fraction: 0.000000
    09:31:44 INFO    opendrift:     sea_ice_x_velocity: 0.000000
    09:31:44 INFO    opendrift:     sea_ice_y_velocity: 0.000000
    09:31:44 INFO    opendrift:     ocean_vertical_diffusivity: 0.020000
    09:31:44 DEBUG   root: Nothing to prepare for https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
    09:31:44 DEBUG   root: Nothing to prepare for https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
    09:31:44 INFO    opendrift: Adding a dynamical landmask with max. priority based on assumed maximum speed of 1.3 m/s. Adding a customised landmask may be faster...
    09:31:47 INFO    opendrift: Using existing reader for land_binary_mask
    09:31:47 INFO    opendrift: All points are in ocean
    09:31:47 INFO    opendrift: Oil-water surface tension is 0.035375 Nm
    09:31:47 INFO    opendrift: 2020-12-01 07:00:00 - step 1 of 48 - 2000 active elements (0 deactivated)
    09:31:49 INFO    opendrift: 2020-12-01 07:15:00 - step 2 of 48 - 2000 active elements (0 deactivated)
    09:31:50 INFO    opendrift: 2020-12-01 07:30:00 - step 3 of 48 - 2000 active elements (0 deactivated)
    09:31:50 INFO    opendrift: 2020-12-01 07:45:00 - step 4 of 48 - 2000 active elements (0 deactivated)
    09:31:51 INFO    opendrift: 2020-12-01 08:00:00 - step 5 of 48 - 2000 active elements (0 deactivated)
    09:31:51 INFO    opendrift: 2020-12-01 08:15:00 - step 6 of 48 - 2000 active elements (0 deactivated)
    09:31:52 INFO    opendrift: 2020-12-01 08:30:00 - step 7 of 48 - 2000 active elements (0 deactivated)
    09:31:53 INFO    opendrift: 2020-12-01 08:45:00 - step 8 of 48 - 2000 active elements (0 deactivated)
    09:31:53 INFO    opendrift: 2020-12-01 09:00:00 - step 9 of 48 - 2000 active elements (0 deactivated)
    09:31:53 INFO    opendrift: 2020-12-01 09:15:00 - step 10 of 48 - 2000 active elements (0 deactivated)
    09:31:55 INFO    opendrift: 2020-12-01 09:30:00 - step 11 of 48 - 2000 active elements (0 deactivated)
    09:31:55 INFO    opendrift: 2020-12-01 09:45:00 - step 12 of 48 - 2000 active elements (0 deactivated)
    09:31:55 INFO    opendrift: 2020-12-01 10:00:00 - step 13 of 48 - 2000 active elements (0 deactivated)
    09:31:55 INFO    opendrift: 2020-12-01 10:15:00 - step 14 of 48 - 2000 active elements (0 deactivated)
    09:31:57 INFO    opendrift: 2020-12-01 10:30:00 - step 15 of 48 - 2000 active elements (0 deactivated)
    09:31:57 INFO    opendrift: 2020-12-01 10:45:00 - step 16 of 48 - 2000 active elements (0 deactivated)
    09:31:58 INFO    opendrift: 2020-12-01 11:00:00 - step 17 of 48 - 2000 active elements (0 deactivated)
    09:31:58 INFO    opendrift: 2020-12-01 11:15:00 - step 18 of 48 - 2000 active elements (0 deactivated)
    09:31:59 INFO    opendrift: 2020-12-01 11:30:00 - step 19 of 48 - 2000 active elements (0 deactivated)
    09:32:00 INFO    opendrift: 2020-12-01 11:45:00 - step 20 of 48 - 2000 active elements (0 deactivated)
    09:32:00 INFO    opendrift: 2020-12-01 12:00:00 - step 21 of 48 - 2000 active elements (0 deactivated)
    09:32:00 INFO    opendrift: 2020-12-01 12:15:00 - step 22 of 48 - 2000 active elements (0 deactivated)
    09:32:02 INFO    opendrift: 2020-12-01 12:30:00 - step 23 of 48 - 2000 active elements (0 deactivated)
    09:32:02 INFO    opendrift: 2020-12-01 12:45:00 - step 24 of 48 - 2000 active elements (0 deactivated)
    09:32:02 INFO    opendrift: 2020-12-01 13:00:00 - step 25 of 48 - 2000 active elements (0 deactivated)
    09:32:02 INFO    opendrift: 2020-12-01 13:15:00 - step 26 of 48 - 2000 active elements (0 deactivated)
    09:32:04 INFO    opendrift: 2020-12-01 13:30:00 - step 27 of 48 - 2000 active elements (0 deactivated)
    09:32:04 INFO    opendrift: 2020-12-01 13:45:00 - step 28 of 48 - 2000 active elements (0 deactivated)
    09:32:05 INFO    opendrift: 2020-12-01 14:00:00 - step 29 of 48 - 2000 active elements (0 deactivated)
    09:32:05 INFO    opendrift: 2020-12-01 14:15:00 - step 30 of 48 - 2000 active elements (0 deactivated)
    09:32:07 INFO    opendrift: 2020-12-01 14:30:00 - step 31 of 48 - 2000 active elements (0 deactivated)
    09:32:07 INFO    opendrift: 2020-12-01 14:45:00 - step 32 of 48 - 2000 active elements (0 deactivated)
    09:32:07 INFO    opendrift: 2020-12-01 15:00:00 - step 33 of 48 - 2000 active elements (0 deactivated)
    09:32:07 INFO    opendrift: 2020-12-01 15:15:00 - step 34 of 48 - 2000 active elements (0 deactivated)
    09:32:09 INFO    opendrift: 2020-12-01 15:30:00 - step 35 of 48 - 2000 active elements (0 deactivated)
    09:32:09 INFO    opendrift: 2020-12-01 15:45:00 - step 36 of 48 - 2000 active elements (0 deactivated)
    09:32:09 INFO    opendrift: 2020-12-01 16:00:00 - step 37 of 48 - 2000 active elements (0 deactivated)
    09:32:09 INFO    opendrift: 2020-12-01 16:15:00 - step 38 of 48 - 2000 active elements (0 deactivated)
    09:32:11 INFO    opendrift: 2020-12-01 16:30:00 - step 39 of 48 - 2000 active elements (0 deactivated)
    09:32:11 INFO    opendrift: 2020-12-01 16:45:00 - step 40 of 48 - 2000 active elements (0 deactivated)
    09:32:12 INFO    opendrift: 2020-12-01 17:00:00 - step 41 of 48 - 2000 active elements (0 deactivated)
    09:32:12 INFO    opendrift: 2020-12-01 17:15:00 - step 42 of 48 - 2000 active elements (0 deactivated)
    09:32:13 INFO    opendrift: 2020-12-01 17:30:00 - step 43 of 48 - 2000 active elements (0 deactivated)
    09:32:14 INFO    opendrift: 2020-12-01 17:45:00 - step 44 of 48 - 2000 active elements (0 deactivated)
    09:32:14 INFO    opendrift: 2020-12-01 18:00:00 - step 45 of 48 - 2000 active elements (0 deactivated)
    09:32:14 INFO    opendrift: 2020-12-01 18:15:00 - step 46 of 48 - 2000 active elements (0 deactivated)
    09:32:16 INFO    opendrift: 2020-12-01 18:30:00 - step 47 of 48 - 2000 active elements (0 deactivated)
    09:32:16 INFO    opendrift: 2020-12-01 18:45:00 - step 48 of 48 - 2000 active elements (0 deactivated)
    09:32:16 INFO    opendrift: Wrote 25 steps to file oilmixing.nc




Print and plot results


.. code-block:: default

    print(o)

    o.plot(linecolor='z', fast=True)
    o.plot_property('z')
    o.plot_oil_budget()
    o.animation(fast=True)
    o.animate_vertical_distribution()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /gallery/images/sphx_glr_example_oil_verticalmixing_001.png
          :alt: OpenDrift - OpenOil (*GENERIC BUNKER C) 2020-12-01 07:00 to 2020-12-01 19:00 UTC (25 steps)
          :class: sphx-glr-multi-img

    *

      .. image:: /gallery/images/sphx_glr_example_oil_verticalmixing_002.png
          :alt: z
          :class: sphx-glr-multi-img

    *

      .. image:: /gallery/images/sphx_glr_example_oil_verticalmixing_003.png
          :alt: *GENERIC BUNKER C (971.1 kg/m3) - 2020-12-01 07:00 to 2020-12-01 19:00
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
     0:16:52.9  total time
     0:00:46.6  configuration
     0:01:19.0  preparing main loop
     0:01:10.8  preparing main loop:making dynamical landmask
     0:00:03.3  preparing main loop:moving elements to ocean
     0:13:29.1  main loop:readers
     0:00:09.6  main loop:readers:global_landmask
     0:11:49.5  total
     0:00:00.8  preparing
     0:09:26.8  reading
     0:00:00.4  masking
     0:00:27.3  main loop:readers:postprocessing
     0:15:24.7  main loop
     0:02:51.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
     0:00:58.2  interpolation
     0:00:00.6  interpolation_time
     0:01:20.2  rotating vectors
     0:01:51.2  main loop:updating elements
     0:00:02.7  cleaning up
     0:00:01.3  main loop:readers:roms native
     0:01:11.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:00:53.6  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
     0:00:17.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
     0:00:00.6  main loop:readers:/root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
     0:00:07.2  main loop:readers:double_gyre
     0:00:00.0  main loop:readers:oscillating_reader
     0:00:01.6  main loop:readers:reader_constant_2d
     0:03:44.5  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/barents25km_agg
     0:00:25.1  main loop:updating elements:oil weathering
     0:00:05.4  main loop:updating elements:oil weathering:updating viscosities
     0:00:17.1  main loop:updating elements:oil weathering:updating densities
     0:00:18.6  main loop:updating elements:vertical mixing
     0:00:32.6  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
     0:00:37.3  main loop:readers:ArtificialOceanEddy
     0:00:03.1  open dataset
     0:00:00.1  build index
     0:01:06.7  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/metusers/knutfd/thredds/netcdf_unstructured_samples/AkvaplanNiva_sample_lonlat_fixed.nc
     0:00:13.3  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
     0:00:00.0  main loop:updating elements:oil weathering:emulsification
     0:00:00.1  main loop:updating elements:oil weathering:dispersion
     0:00:00.8  main loop:readers:reader_current_from_observation
     0:00:01.3  main loop:readers:WIND
     0:00:00.4  main loop:readers:constant_reader
     0:00:02.3  main loop:updating elements:oil weathering:evaporation
     0:00:07.6  main loop:readers:/root/project/tests/test_data/14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc
     0:00:00.1  main loop:readers:shape
    --------------------
    https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
     0:16:52.9  total time
     0:00:46.6  configuration
     0:01:19.0  preparing main loop
     0:01:10.8  preparing main loop:making dynamical landmask
     0:00:03.3  preparing main loop:moving elements to ocean
     0:13:29.1  main loop:readers
     0:00:09.6  main loop:readers:global_landmask
     0:11:49.5  total
     0:00:00.8  preparing
     0:09:26.8  reading
     0:00:00.4  masking
     0:00:27.3  main loop:readers:postprocessing
     0:15:24.7  main loop
     0:02:51.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
     0:00:58.2  interpolation
     0:00:00.6  interpolation_time
     0:01:20.2  rotating vectors
     0:01:51.2  main loop:updating elements
     0:00:02.7  cleaning up
     0:00:01.3  main loop:readers:roms native
     0:01:11.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:00:53.6  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
     0:00:17.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
     0:00:00.6  main loop:readers:/root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
     0:00:07.2  main loop:readers:double_gyre
     0:00:00.0  main loop:readers:oscillating_reader
     0:00:01.6  main loop:readers:reader_constant_2d
     0:03:44.5  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/barents25km_agg
     0:00:25.1  main loop:updating elements:oil weathering
     0:00:05.4  main loop:updating elements:oil weathering:updating viscosities
     0:00:17.1  main loop:updating elements:oil weathering:updating densities
     0:00:18.6  main loop:updating elements:vertical mixing
     0:00:32.6  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
     0:00:37.3  main loop:readers:ArtificialOceanEddy
     0:00:03.1  open dataset
     0:00:00.1  build index
     0:01:06.7  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/metusers/knutfd/thredds/netcdf_unstructured_samples/AkvaplanNiva_sample_lonlat_fixed.nc
     0:00:13.3  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
     0:00:00.0  main loop:updating elements:oil weathering:emulsification
     0:00:00.1  main loop:updating elements:oil weathering:dispersion
     0:00:00.8  main loop:readers:reader_current_from_observation
     0:00:01.3  main loop:readers:WIND
     0:00:00.4  main loop:readers:constant_reader
     0:00:02.3  main loop:updating elements:oil weathering:evaporation
     0:00:07.6  main loop:readers:/root/project/tests/test_data/14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc
     0:00:00.1  main loop:readers:shape
    --------------------
    global_landmask
     0:16:52.9  total time
     0:00:46.6  configuration
     0:01:19.0  preparing main loop
     0:01:10.8  preparing main loop:making dynamical landmask
     0:00:03.3  preparing main loop:moving elements to ocean
     0:13:29.1  main loop:readers
     0:00:09.6  main loop:readers:global_landmask
     0:11:49.5  total
     0:00:00.8  preparing
     0:09:26.8  reading
     0:00:00.4  masking
     0:00:27.3  main loop:readers:postprocessing
     0:15:24.7  main loop
     0:02:51.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
     0:00:58.2  interpolation
     0:00:00.6  interpolation_time
     0:01:20.2  rotating vectors
     0:01:51.2  main loop:updating elements
     0:00:02.7  cleaning up
     0:00:01.3  main loop:readers:roms native
     0:01:11.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:00:53.6  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
     0:00:17.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
     0:00:00.6  main loop:readers:/root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
     0:00:07.2  main loop:readers:double_gyre
     0:00:00.0  main loop:readers:oscillating_reader
     0:00:01.6  main loop:readers:reader_constant_2d
     0:03:44.5  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/barents25km_agg
     0:00:25.1  main loop:updating elements:oil weathering
     0:00:05.4  main loop:updating elements:oil weathering:updating viscosities
     0:00:17.1  main loop:updating elements:oil weathering:updating densities
     0:00:18.6  main loop:updating elements:vertical mixing
     0:00:32.6  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
     0:00:37.3  main loop:readers:ArtificialOceanEddy
     0:00:03.1  open dataset
     0:00:00.1  build index
     0:01:06.7  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/metusers/knutfd/thredds/netcdf_unstructured_samples/AkvaplanNiva_sample_lonlat_fixed.nc
     0:00:13.3  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
     0:00:00.0  main loop:updating elements:oil weathering:emulsification
     0:00:00.1  main loop:updating elements:oil weathering:dispersion
     0:00:00.8  main loop:readers:reader_current_from_observation
     0:00:01.3  main loop:readers:WIND
     0:00:00.4  main loop:readers:constant_reader
     0:00:02.3  main loop:updating elements:oil weathering:evaporation
     0:00:07.6  main loop:readers:/root/project/tests/test_data/14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc
     0:00:00.1  main loop:readers:shape
    --------------------
    Performance:
    16:52.9 total time
       46.6 configuration
     1:19.0 preparing main loop
       1:10.8 making dynamical landmask
          3.3 moving elements to ocean
      13:29.1 readers
            9.6 global_landmask
    11:49.5 total
        0.8 preparing
     9:26.8 reading
        0.4 masking
           27.3 postprocessing
    15:24.7 main loop
         2:51.0 https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
       58.2 interpolation
        0.6 interpolation_time
     1:20.2 rotating vectors
       1:51.2 updating elements
        2.7 cleaning up
            1.3 roms native
         1:11.0 https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
           53.6 https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
           17.0 https://thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
            0.6 /root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
            7.2 double_gyre
            0.0 oscillating_reader
            1.6 reader_constant_2d
         3:44.5 https://thredds.met.no/thredds/dodsC/barents25km_agg
           25.1 oil weathering
              5.4 updating viscosities
             17.1 updating densities
           18.6 vertical mixing
           32.6 /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
           37.3 ArtificialOceanEddy
        3.1 open dataset
        0.1 build index
         1:06.7 https://thredds.met.no/thredds/dodsC/metusers/knutfd/thredds/netcdf_unstructured_samples/AkvaplanNiva_sample_lonlat_fixed.nc
           13.3 /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
              0.0 emulsification
              0.1 dispersion
            0.8 reader_current_from_observation
            1.3 WIND
            0.4 constant_reader
              2.3 evaporation
            7.6 /root/project/tests/test_data/14Jan2016_NorKyst_z_3d/NorKyst-800m_ZDEPTHS_his_00_3Dsubset.nc
            0.1 shape
    --------------------
    ===========================
    Model:  OpenOil     (OpenDrift version 1.4.2)
            2000 active Oil particles  (0 deactivated, 0 scheduled)
    Projection: +proj=stere +ellps=WGS84 +lat_0=90.0 +lat_ts=60.0 +x_0=3192800 +y_0=1784000 +lon_0=70
    -------------------
    Environment variables:
      -----
      sea_floor_depth_below_sea_level
      sea_water_salinity
      sea_water_temperature
      upward_sea_water_velocity
      x_sea_water_velocity
      y_sea_water_velocity
         1) https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
      -----
      x_wind
      y_wind
         1) https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
         2) https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
      -----
      land_binary_mask
         1) global_landmask
      -----
    Readers not added for the following variables:
      ocean_vertical_diffusivity
      sea_ice_area_fraction
      sea_ice_x_velocity
      sea_ice_y_velocity
      sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment
      sea_surface_wave_period_at_variance_spectral_density_maximum
      sea_surface_wave_significant_height
      sea_surface_wave_stokes_drift_x_velocity
      sea_surface_wave_stokes_drift_y_velocity

    Time:
            Start: 2020-12-01 07:00:00
            Present: 2020-12-01 19:00:00
            Calculation steps: 48 * 0:15:00 - total time: 12:00:00
            Output steps: 25 * 0:30:00
    ===========================

    09:32:17 WARNING opendrift: plotting fast. This will make your plots less accurate.
    09:32:36 DEBUG   matplotlib.colorbar: locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f855f038a00>
    09:32:36 DEBUG   matplotlib.colorbar: Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f855f038a00> on colorbar
    09:32:36 DEBUG   matplotlib.colorbar: Setting pcolormesh
    09:32:37 WARNING opendrift: plotting fast. This will make your plots less accurate.
    09:32:39 INFO    opendrift: Saving animation to /root/project/docs/source/gallery/animations/example_oil_verticalmixing_0.gif...
    09:32:39 INFO    opendrift: Making animated gif...
    09:32:39 INFO    matplotlib.animation: Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
    09:32:39 INFO    matplotlib.animation: figure size in inches has been adjusted from 8.889968380086856 x 11.0 to 8.88 x 11.0
    09:32:39 DEBUG   matplotlib.animation: frame size in pixels is 888 x 1100
    09:32:39 INFO    matplotlib.animation: MovieWriter._run: running command: convert -size 888x1100 -depth 8 -delay 10.0 -loop 0 rgba:- /root/project/docs/source/gallery/animations/example_oil_verticalmixing_0.gif
    09:32:39 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:39 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:39 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:40 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:40 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:40 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:40 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:40 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:41 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:41 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:41 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:41 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:41 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:42 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:42 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:42 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:42 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:43 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:43 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:43 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:43 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:43 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:44 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:44 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:44 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:45 INFO    opendrift: Saving animation to /root/project/docs/source/gallery/animations/example_oil_verticalmixing_1.gif...
    09:32:45 INFO    opendrift: Making animated gif...
    09:32:45 INFO    matplotlib.animation: Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
    09:32:45 DEBUG   matplotlib.animation: frame size in pixels is 640 x 480
    09:32:45 INFO    matplotlib.animation: MovieWriter._run: running command: convert -size 640x480 -depth 8 -delay 10.0 -loop 0 rgba:- /root/project/docs/source/gallery/animations/example_oil_verticalmixing_1.gif
    09:32:46 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:47 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:47 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:53 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:53 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:54 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:55 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:55 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:56 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:57 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:57 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:58 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:59 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:32:59 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:33:00 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:33:00 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:33:01 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.




.. image:: /gallery/animations/example_oil_verticalmixing_0.gif
.. image:: /gallery/animations/example_oil_verticalmixing_1.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  30.764 seconds)


.. _sphx_glr_download_gallery_example_oil_verticalmixing.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_oil_verticalmixing.py <example_oil_verticalmixing.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_oil_verticalmixing.ipynb <example_oil_verticalmixing.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
