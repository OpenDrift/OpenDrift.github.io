.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_example_double_gyre_LCS.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_double_gyre_LCS.py:


Double gyre (propagation schemes)
==================================

Illustrating the difference between Euler and Runge-Kutta propagation
schemes, using an idealised (analytical) eddy current field.


.. code-block:: default


    from datetime import datetime, timedelta
    import matplotlib.pyplot as plt

    from opendrift.readers import reader_double_gyre
    from opendrift.models.oceandrift import OceanDrift

    o = OceanDrift(loglevel=20)  # Set loglevel to 0 for debug information

    o.fallback_values['land_binary_mask'] = 0




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    14:03:44 INFO: OpenDriftSimulation initialised (version 1.2.0)




Note that Runge-Kutta here makes a difference to Euler scheme


.. code-block:: default

    o.set_config('drift:scheme', 'runge-kutta4')

    double_gyre = reader_double_gyre.Reader(epsilon=.25, omega=0.628, A=0.1)
    print(double_gyre)

    o.add_reader(double_gyre)

    lcs = o.calculate_ftle(time=double_gyre.initial_time+timedelta(seconds=3),
                           time_step=timedelta(seconds=.5),
                           duration=timedelta(seconds=15),
                           delta=.02)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    Reader: double_gyre
    Projection: 
      +proj=stere +lat_0=0 +lon_0=0 +lat_ts=0 +units=m +a=6.371e+06 +e=0 +no_defs
    Coverage: [m]
      xmin: 0.000000   xmax: 2.000000
      ymin: 0.000000   ymax: 1.000000
      Corners (lon, lat):
        (  0.00,   0.00)  (  0.00,   0.00)
        (  0.00,   0.00)  (  0.00,   0.00)
    Vertical levels [m]: 
      Not specified
    Available time range:
      start: None   end: None   step: None
    Variables:
      x_sea_water_velocity
      y_sea_water_velocity
    ===========================





These plots should reproduce Mov 12 on this page:
http://shaddenlab.berkeley.edu/uploads/LCS-tutorial/examples.html


.. code-block:: default

    plt.subplot(2,1,1)
    plt.imshow(lcs['RLCS'][0,:,:], interpolation='nearest', cmap='jet', origin='lower')
    plt.colorbar()
    plt.title('Repelling LCS (forwards)')
    plt.subplot(2,1,2)
    plt.imshow(lcs['ALCS'][0,:,:], interpolation='nearest', cmap='jet', origin='lower')
    plt.colorbar()
    plt.title('Attracting LCS (backwards)')
    plt.show()



.. image:: /gallery/images/sphx_glr_example_double_gyre_LCS_001.png
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.257 seconds)


.. _sphx_glr_download_gallery_example_double_gyre_LCS.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_double_gyre_LCS.py <example_double_gyre_LCS.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_double_gyre_LCS.ipynb <example_double_gyre_LCS.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
