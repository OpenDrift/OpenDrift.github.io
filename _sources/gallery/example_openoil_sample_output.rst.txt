
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/example_openoil_sample_output.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_openoil_sample_output.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_openoil_sample_output.py:


Openoil sample output netCDF file
==================================

.. GENERATED FROM PYTHON SOURCE LINES 6-28

.. code-block:: default


    import os
    from datetime import timedelta
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.readers import reader_constant
    from opendrift.models.openoil import OpenOil

    o = OpenOil(loglevel=20, weathering_model='noaa')

    rc = reader_constant.Reader({'x_wind': 5,
                                 'y_wind': 4})

    # Arome
    reader_arome = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc')

    # Norkyst
    reader_norkyst = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc')

    o.add_reader([rc, reader_norkyst, reader_arome])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    12:07:17 INFO    opendrift.models.basemodel: OpenDriftSimulation initialised (version 1.6.0 / v1.6.0-7-g104fa01)
    12:07:17 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
    12:07:17 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc




.. GENERATED FROM PYTHON SOURCE LINES 29-30

Seed oil elements at defined position and time

.. GENERATED FROM PYTHON SOURCE LINES 30-35

.. code-block:: default

    time = [reader_arome.start_time,
            reader_arome.start_time + timedelta(hours=1)]
    o.seed_elements(lon=5.05, lat=59.95, radius=1500, number=100,
                    time=time, z=0, m3_per_hour=2, oil_type='TAU 1999')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    querying DB:
    Oil.name ==  'TAU 1999'
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/scipy/optimize/minpack.py:828: OptimizeWarning: Covariance of the parameters could not be estimated
      warnings.warn('Covariance of the parameters could not be estimated',
    12:07:17 INFO    opendrift.models.openoil: Using density 851.0 and viscosity 0.0012492598295757557 of oiltype TAU 1999




.. GENERATED FROM PYTHON SOURCE LINES 36-37

Running model

.. GENERATED FROM PYTHON SOURCE LINES 37-40

.. code-block:: default

    ncfile = 'openoil_sample_output.nc'
    o.run(steps=4*8, time_step=900, time_step_output=3600, outfile=ncfile)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    12:07:17 INFO    opendrift.models.basemodel: Fallback values will be used for the following variables which have no readers: 
    12:07:17 INFO    opendrift.models.basemodel:    upward_sea_water_velocity: 0.000000
    12:07:17 INFO    opendrift.models.basemodel:    sea_surface_wave_significant_height: 0.000000
    12:07:17 INFO    opendrift.models.basemodel:    sea_surface_wave_stokes_drift_x_velocity: 0.000000
    12:07:17 INFO    opendrift.models.basemodel:    sea_surface_wave_stokes_drift_y_velocity: 0.000000
    12:07:17 INFO    opendrift.models.basemodel:    sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    12:07:17 INFO    opendrift.models.basemodel:    sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    12:07:17 INFO    opendrift.models.basemodel:    sea_ice_area_fraction: 0.000000
    12:07:17 INFO    opendrift.models.basemodel:    sea_ice_x_velocity: 0.000000
    12:07:17 INFO    opendrift.models.basemodel:    sea_ice_y_velocity: 0.000000
    12:07:17 INFO    opendrift.models.basemodel:    sea_water_temperature: 10.000000
    12:07:17 INFO    opendrift.models.basemodel:    sea_water_salinity: 34.000000
    12:07:17 INFO    opendrift.models.basemodel:    sea_floor_depth_below_sea_level: 10000.000000
    12:07:17 INFO    opendrift.models.basemodel:    ocean_vertical_diffusivity: 0.020000
    12:07:17 INFO    opendrift.models.basemodel: Adding a dynamical landmask with max. priority based on assumed maximum speed of 1.3 m/s. Adding a customised landmask may be faster...
    12:07:20 INFO    opendrift.models.basemodel: Using existing reader for land_binary_mask
    12:07:20 INFO    opendrift.models.basemodel: Moving 1 out of 100 points from land to water
    12:07:20 INFO    opendrift.models.openoil: Oil-water surface tension is 0.030059 Nm
    12:07:20 INFO    opendrift.models.basemodel: 2015-11-16 00:00:00 - step 1 of 32 - 25 active elements (0 deactivated)
    12:07:20 INFO    opendrift.models.basemodel: 2015-11-16 00:15:00 - step 2 of 32 - 50 active elements (0 deactivated)
    12:07:20 INFO    opendrift.models.basemodel: 2015-11-16 00:30:00 - step 3 of 32 - 75 active elements (0 deactivated)
    12:07:20 INFO    opendrift.models.basemodel: 2015-11-16 00:45:00 - step 4 of 32 - 100 active elements (0 deactivated)
    12:07:20 INFO    opendrift.models.basemodel: 2015-11-16 01:00:00 - step 5 of 32 - 100 active elements (0 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 01:15:00 - step 6 of 32 - 100 active elements (0 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 01:30:00 - step 7 of 32 - 96 active elements (4 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 01:45:00 - step 8 of 32 - 92 active elements (8 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 02:00:00 - step 9 of 32 - 90 active elements (10 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 02:15:00 - step 10 of 32 - 88 active elements (12 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 02:30:00 - step 11 of 32 - 85 active elements (15 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 02:45:00 - step 12 of 32 - 80 active elements (20 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 03:00:00 - step 13 of 32 - 77 active elements (23 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 03:15:00 - step 14 of 32 - 77 active elements (23 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 03:30:00 - step 15 of 32 - 73 active elements (27 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 03:45:00 - step 16 of 32 - 68 active elements (32 deactivated)
    12:07:21 INFO    opendrift.models.basemodel: 2015-11-16 04:00:00 - step 17 of 32 - 61 active elements (39 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 04:15:00 - step 18 of 32 - 56 active elements (44 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 04:30:00 - step 19 of 32 - 50 active elements (50 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 04:45:00 - step 20 of 32 - 48 active elements (52 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 05:00:00 - step 21 of 32 - 37 active elements (63 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 05:15:00 - step 22 of 32 - 31 active elements (69 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 05:30:00 - step 23 of 32 - 26 active elements (74 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 05:45:00 - step 24 of 32 - 24 active elements (76 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 06:00:00 - step 25 of 32 - 21 active elements (79 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 06:15:00 - step 26 of 32 - 17 active elements (83 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 06:30:00 - step 27 of 32 - 14 active elements (86 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 06:45:00 - step 28 of 32 - 13 active elements (87 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 07:00:00 - step 29 of 32 - 9 active elements (91 deactivated)
    12:07:22 INFO    opendrift.models.basemodel: 2015-11-16 07:15:00 - step 30 of 32 - 8 active elements (92 deactivated)
    12:07:23 INFO    opendrift.models.basemodel: 2015-11-16 07:30:00 - step 31 of 32 - 7 active elements (93 deactivated)
    12:07:23 INFO    opendrift.models.basemodel: 2015-11-16 07:45:00 - step 32 of 32 - 5 active elements (95 deactivated)
    12:07:23 INFO    opendrift.export.io_netcdf: Wrote 9 steps to file openoil_sample_output.nc




.. GENERATED FROM PYTHON SOURCE LINES 41-42

Print and plot results

.. GENERATED FROM PYTHON SOURCE LINES 42-45

.. code-block:: default

    o.plot_oil_budget()
    o.plot()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /gallery/images/sphx_glr_example_openoil_sample_output_001.png
          :alt: TAU 1999 (851.0 kg/m3) - 2015-11-16 00:00 to 2015-11-16 08:00
          :class: sphx-glr-multi-img

    *

      .. image:: /gallery/images/sphx_glr_example_openoil_sample_output_002.png
          :alt: OpenDrift - OpenOil (TAU 1999) 2015-11-16 00:00 to 2015-11-16 08:00 UTC (9 steps)
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/conda/envs/opendrift/lib/python3.9/site-packages/numpy/ma/core.py:1015: RuntimeWarning: overflow encountered in multiply
      result = self.f(da, db, *args, **kwargs)
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/numpy/ma/core.py:6846: RuntimeWarning: overflow encountered in power
      result = np.where(m, fa, umath.power(fa, fb)).view(basetype)

    (<GeoAxesSubplot:title={'center':'OpenDrift - OpenOil (TAU 1999)\n2015-11-16 00:00 to 2015-11-16 08:00 UTC (9 steps)'}>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.9/site-packages/matplotlib/pyplot.py'>)



.. GENERATED FROM PYTHON SOURCE LINES 46-47

ncdump of the output file

.. GENERATED FROM PYTHON SOURCE LINES 47-51

.. code-block:: default

    from subprocess import check_output
    args = [ "ncdump", "-h", ncfile ]
    ncdump = check_output(args).decode().strip()
    print(ncdump)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    netcdf openoil_sample_output {
    dimensions:
            trajectory = 100 ;
            time = 9 ;
    variables:
            int trajectory(trajectory) ;
                    trajectory:cf_role = "trajectory_id" ;
                    trajectory:units = "1" ;
            double time(time) ;
                    time:units = "seconds since 1970-01-01 00:00:00" ;
                    time:standard_name = "time" ;
                    time:long_name = "time" ;
            int status(trajectory, time) ;
                    status:coordinates = "lat lon time" ;
                    status:valid_range = 0, 1 ;
                    status:flag_values = 0, 1 ;
                    status:flag_meanings = "active stranded" ;
            int moving(trajectory, time) ;
                    moving:coordinates = "lat lon time" ;
            float age_seconds(trajectory, time) ;
                    age_seconds:coordinates = "lat lon time" ;
                    age_seconds:units = "s" ;
            short origin_marker(trajectory, time) ;
                    origin_marker:coordinates = "lat lon time" ;
                    origin_marker:unit = "" ;
                    origin_marker:description = "An integer kept constant during the simulation. Different values may be used for different seedings, to separate elements during analysis. With GUI, only a single seeding is possible." ;
            float lon(trajectory, time) ;
                    lon:coordinates = "lat lon time" ;
                    lon:units = "degrees_east" ;
                    lon:standard_name = "longitude" ;
                    lon:long_name = "longitude" ;
            float lat(trajectory, time) ;
                    lat:coordinates = "lat lon time" ;
                    lat:units = "degrees_north" ;
                    lat:standard_name = "latitude" ;
                    lat:long_name = "latitude" ;
            float z(trajectory, time) ;
                    z:coordinates = "lat lon time" ;
                    z:units = "m" ;
                    z:standard_name = "z" ;
                    z:long_name = "vertical position" ;
                    z:axis = "Z" ;
                    z:positive = "up" ;
            float mass_oil(trajectory, time) ;
                    mass_oil:coordinates = "lat lon time" ;
                    mass_oil:units = "kg" ;
            float viscosity(trajectory, time) ;
                    viscosity:coordinates = "lat lon time" ;
                    viscosity:units = "N s/m2 (Pa s)" ;
            float density(trajectory, time) ;
                    density:coordinates = "lat lon time" ;
                    density:units = "kg/m^3" ;
            float wind_drift_factor(trajectory, time) ;
                    wind_drift_factor:coordinates = "lat lon time" ;
                    wind_drift_factor:units = "%" ;
                    wind_drift_factor:description = "Elements at the ocean surface are moved by this fraction of the wind vector, in addition to currents and Stokes drift" ;
            float bulltime(trajectory, time) ;
                    bulltime:coordinates = "lat lon time" ;
                    bulltime:units = "s" ;
            float interfacial_area(trajectory, time) ;
                    interfacial_area:coordinates = "lat lon time" ;
                    interfacial_area:units = "m2" ;
            float mass_dispersed(trajectory, time) ;
                    mass_dispersed:coordinates = "lat lon time" ;
                    mass_dispersed:units = "kg" ;
            float mass_evaporated(trajectory, time) ;
                    mass_evaporated:coordinates = "lat lon time" ;
                    mass_evaporated:units = "kg" ;
            float mass_biodegraded(trajectory, time) ;
                    mass_biodegraded:coordinates = "lat lon time" ;
                    mass_biodegraded:units = "kg" ;
            float fraction_evaporated(trajectory, time) ;
                    fraction_evaporated:coordinates = "lat lon time" ;
                    fraction_evaporated:units = "%" ;
            float water_fraction(trajectory, time) ;
                    water_fraction:coordinates = "lat lon time" ;
                    water_fraction:units = "%" ;
            float oil_film_thickness(trajectory, time) ;
                    oil_film_thickness:coordinates = "lat lon time" ;
                    oil_film_thickness:units = "m" ;
            float diameter(trajectory, time) ;
                    diameter:coordinates = "lat lon time" ;
                    diameter:units = "m" ;
            float x_sea_water_velocity(trajectory, time) ;
                    x_sea_water_velocity:coordinates = "lat lon time" ;
            float y_sea_water_velocity(trajectory, time) ;
                    y_sea_water_velocity:coordinates = "lat lon time" ;
            float x_wind(trajectory, time) ;
                    x_wind:coordinates = "lat lon time" ;
            float y_wind(trajectory, time) ;
                    y_wind:coordinates = "lat lon time" ;
            float upward_sea_water_velocity(trajectory, time) ;
                    upward_sea_water_velocity:coordinates = "lat lon time" ;
            float sea_surface_wave_significant_height(trajectory, time) ;
                    sea_surface_wave_significant_height:coordinates = "lat lon time" ;
            float sea_surface_wave_stokes_drift_x_velocity(trajectory, time) ;
                    sea_surface_wave_stokes_drift_x_velocity:coordinates = "lat lon time" ;
            float sea_surface_wave_stokes_drift_y_velocity(trajectory, time) ;
                    sea_surface_wave_stokes_drift_y_velocity:coordinates = "lat lon time" ;
            float sea_surface_wave_period_at_variance_spectral_density_maximum(trajectory, time) ;
                    sea_surface_wave_period_at_variance_spectral_density_maximum:coordinates = "lat lon time" ;
            float sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment(trajectory, time) ;
                    sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment:coordinates = "lat lon time" ;
            float sea_ice_area_fraction(trajectory, time) ;
                    sea_ice_area_fraction:coordinates = "lat lon time" ;
            float sea_ice_x_velocity(trajectory, time) ;
                    sea_ice_x_velocity:coordinates = "lat lon time" ;
            float sea_ice_y_velocity(trajectory, time) ;
                    sea_ice_y_velocity:coordinates = "lat lon time" ;
            float sea_water_temperature(trajectory, time) ;
                    sea_water_temperature:coordinates = "lat lon time" ;
            float sea_water_salinity(trajectory, time) ;
                    sea_water_salinity:coordinates = "lat lon time" ;
            float sea_floor_depth_below_sea_level(trajectory, time) ;
                    sea_floor_depth_below_sea_level:coordinates = "lat lon time" ;
            float ocean_vertical_diffusivity(trajectory, time) ;
                    ocean_vertical_diffusivity:coordinates = "lat lon time" ;
            float land_binary_mask(trajectory, time) ;
                    land_binary_mask:coordinates = "lat lon time" ;

    // global attributes:
                    :Conventions = "CF-1.6" ;
                    :standard_name_vocabulary = "CF-1.6" ;
                    :featureType = "trajectory" ;
                    :history = "Created 2021-05-11 12:07:20.661854" ;
                    :source = "Output from simulation with OpenDrift" ;
                    :model_url = "https://github.com/OpenDrift/opendrift" ;
                    :opendrift_class = "OpenOil" ;
                    :opendrift_module = "opendrift.models.openoil" ;
                    :readers = "odict_keys([\'constant_reader\', \'/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc\', \'/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc\', \'global_landmask\'])" ;
                    :time_coverage_start = "2015-11-16 00:00:00" ;
                    :time_step_calculation = "0:15:00" ;
                    :time_step_output = "1:00:00" ;
                    :config_general\:use_auto_landmask = "True" ;
                    :config_general\:coastline_action = "stranding" ;
                    :config_general\:time_step_minutes = 60LL ;
                    :config_general\:time_step_output_minutes = "None" ;
                    :config_seed\:ocean_only = "True" ;
                    :config_seed\:number = 1LL ;
                    :config_drift\:max_age_seconds = "None" ;
                    :config_drift\:advection_scheme = "euler" ;
                    :config_drift\:current_uncertainty = 0.05 ;
                    :config_drift\:current_uncertainty_uniform = 0LL ;
                    :config_drift\:horizontal_diffusivity = 0LL ;
                    :config_drift\:wind_uncertainty = 0.5 ;
                    :config_drift\:relative_wind = "False" ;
                    :config_drift\:deactivate_north_of = "None" ;
                    :config_drift\:deactivate_south_of = "None" ;
                    :config_drift\:deactivate_east_of = "None" ;
                    :config_drift\:deactivate_west_of = "None" ;
                    :config_seed\:origin_marker = 0LL ;
                    :config_seed\:z = 0LL ;
                    :config_seed\:wind_drift_factor = 0.03 ;
                    :config_seed\:oil_film_thickness = 0.001 ;
                    :config_environment\:constant\:x_sea_water_velocity = "None" ;
                    :config_environment\:fallback\:x_sea_water_velocity = "None" ;
                    :config_environment\:constant\:y_sea_water_velocity = "None" ;
                    :config_environment\:fallback\:y_sea_water_velocity = "None" ;
                    :config_environment\:constant\:x_wind = "None" ;
                    :config_environment\:fallback\:x_wind = "None" ;
                    :config_environment\:constant\:y_wind = "None" ;
                    :config_environment\:fallback\:y_wind = "None" ;
                    :config_environment\:constant\:upward_sea_water_velocity = "None" ;
                    :config_environment\:fallback\:upward_sea_water_velocity = 0LL ;
                    :config_environment\:constant\:sea_surface_wave_significant_height = "None" ;
                    :config_environment\:fallback\:sea_surface_wave_significant_height = 0LL ;
                    :config_environment\:constant\:sea_surface_wave_stokes_drift_x_velocity = "None" ;
                    :config_environment\:fallback\:sea_surface_wave_stokes_drift_x_velocity = 0LL ;
                    :config_environment\:constant\:sea_surface_wave_stokes_drift_y_velocity = "None" ;
                    :config_environment\:fallback\:sea_surface_wave_stokes_drift_y_velocity = 0LL ;
                    :config_environment\:constant\:sea_surface_wave_period_at_variance_spectral_density_maximum = "None" ;
                    :config_environment\:fallback\:sea_surface_wave_period_at_variance_spectral_density_maximum = 0LL ;
                    :config_environment\:constant\:sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment = "None" ;
                    :config_environment\:fallback\:sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment = 0LL ;
                    :config_environment\:constant\:sea_ice_area_fraction = "None" ;
                    :config_environment\:fallback\:sea_ice_area_fraction = 0LL ;
                    :config_environment\:constant\:sea_ice_x_velocity = "None" ;
                    :config_environment\:fallback\:sea_ice_x_velocity = 0LL ;
                    :config_environment\:constant\:sea_ice_y_velocity = "None" ;
                    :config_environment\:fallback\:sea_ice_y_velocity = 0LL ;
                    :config_environment\:constant\:sea_water_temperature = "None" ;
                    :config_environment\:fallback\:sea_water_temperature = 10LL ;
                    :config_environment\:constant\:sea_water_salinity = "None" ;
                    :config_environment\:fallback\:sea_water_salinity = 34LL ;
                    :config_environment\:constant\:sea_floor_depth_below_sea_level = "None" ;
                    :config_environment\:fallback\:sea_floor_depth_below_sea_level = 10000LL ;
                    :config_environment\:constant\:ocean_vertical_diffusivity = "None" ;
                    :config_environment\:fallback\:ocean_vertical_diffusivity = 0.02 ;
                    :config_environment\:constant\:land_binary_mask = "None" ;
                    :config_environment\:fallback\:land_binary_mask = "None" ;
                    :config_drift\:vertical_advection = "False" ;
                    :config_drift\:vertical_mixing = "True" ;
                    :config_vertical_mixing\:timestep = 60LL ;
                    :config_vertical_mixing\:diffusivitymodel = "environment" ;
                    :config_vertical_mixing\:TSprofiles = "False" ;
                    :config_drift\:wind_drift_depth = 0.1 ;
                    :config_drift\:stokes_drift = "True" ;
                    :config_drift\:use_tabularised_stokes_drift = "False" ;
                    :config_drift\:tabularised_stokes_drift_fetch = "25000" ;
                    :config_general\:seafloor_action = "lift_to_seafloor" ;
                    :config_drift\:truncate_ocean_model_below_m = "None" ;
                    :config_seed\:seafloor = "False" ;
                    :config_seed\:m3_per_hour = 1LL ;
                    :config_seed\:droplet_diameter_min_subsea = 0.0005 ;
                    :config_seed\:droplet_diameter_max_subsea = 0.005 ;
                    :config_processes\:dispersion = "True" ;
                    :config_processes\:evaporation = "True" ;
                    :config_processes\:emulsification = "True" ;
                    :config_processes\:biodegradation = "False" ;
                    :config_processes\:update_oilfilm_thickness = "False" ;
                    :config_wave_entrainment\:droplet_size_distribution = "Johansen et al. (2015)" ;
                    :config_wave_entrainment\:entrainment_rate = "Li et al. (2017)" ;
                    :config_seed\:oil_type = "TAU 1999" ;
                    :opendrift_version = "1.6.0" ;
                    :seed_lon = "5.05" ;
                    :seed_lat = "59.95" ;
                    :seed_radius = "1500.0" ;
                    :seed_time = "2015-11-16 00:00:00" ;
                    :seed_number = "100.0" ;
                    :seed_z = "0.0" ;
                    :seed_m3_per_hour = "2.0" ;
                    :seed_oiltype = "TAU 1999" ;
                    :seed_geojson = "{\"features\": [], \"type\": \"FeatureCollection\"}" ;
                    :steps_exported = 9LL ;
                    :time_coverage_end = "2015-11-16 08:00:00" ;
                    :performance = "--------------------\nReader performance:\n--------------------\nconstant_reader\n 0:00:00.0  total\n 0:00:00.0  preparing\n 0:00:00.0  reading\n 0:00:00.0  masking\n--------------------\n/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc\n 0:00:00.6  total\n 0:00:00.0  preparing\n 0:00:00.0  reading\n 0:00:00.0  interpolation\n 0:00:00.0  interpolation_time\n 0:00:00.5  rotating vectors\n 0:00:00.0  masking\n--------------------\n/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc\n--------------------\nglobal_landmask\n 0:00:00.2  total\n 0:00:00.0  preparing\n 0:00:00.2  reading\n 0:00:00.0  masking\n--------------------\nPerformance:\n      0 total time\n    0.3 configuration\n    3.1 preparing main loop\n      2.8 making dynamical landmask\n      0.2 moving elements to ocean\n      1.2 readers\n        0.2 global_landmask\n        0.2 postprocessing\n    2.4 main loop\n        0.0 constant_reader\n        0.6 /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc\n      1.3 updating elements\n        0.1 oil weathering\n          0.0 updating viscosities\n          0.0 updating densities\n          0.0 evaporation\n          0.0 emulsification\n          0.0 dispersion\n        1.1 vertical mixing\n      0 cleaning up\n--------------------\n" ;
                    :simulation_time = "2021-05-11 12:07:20.664901" ;
                    :reader_x_sea_water_velocity = "[\'/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc\']" ;
                    :reader_y_sea_water_velocity = "[\'/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc\']" ;
                    :reader_x_wind = "5" ;
                    :reader_y_wind = "4" ;
                    :reader_upward_sea_water_velocity = "0" ;
                    :reader_sea_surface_wave_significant_height = "0" ;
                    :reader_sea_surface_wave_stokes_drift_x_velocity = "0" ;
                    :reader_sea_surface_wave_stokes_drift_y_velocity = "0" ;
                    :reader_sea_surface_wave_period_at_variance_spectral_density_maximum = "0" ;
                    :reader_sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment = "0" ;
                    :reader_sea_ice_area_fraction = "0" ;
                    :reader_sea_ice_x_velocity = "0" ;
                    :reader_sea_ice_y_velocity = "0" ;
                    :reader_sea_water_temperature = "10" ;
                    :reader_sea_water_salinity = "34" ;
                    :reader_sea_floor_depth_below_sea_level = "10000" ;
                    :reader_ocean_vertical_diffusivity = "0.02" ;
                    :reader_land_binary_mask = "[\'global_landmask\']" ;
                    :geospatial_lat_min = 0. ;
                    :geospatial_lat_max = 0. ;
                    :geospatial_lat_units = "degrees_north" ;
                    :geospatial_lat_resolution = "point" ;
                    :geospatial_lon_min = 0. ;
                    :geospatial_lon_max = 0. ;
                    :geospatial_lon_units = "degrees_east" ;
                    :geospatial_lon_resolution = "point" ;
                    :runtime = "0:00:06.009418" ;
    }





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  25.801 seconds)


.. _sphx_glr_download_gallery_example_openoil_sample_output.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_openoil_sample_output.py <example_openoil_sample_output.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_openoil_sample_output.ipynb <example_openoil_sample_output.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
