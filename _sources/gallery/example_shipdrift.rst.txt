.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_shipdrift.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_shipdrift.py:


Ship drift
==================================


.. code-block:: default


    from datetime import datetime
    from opendrift.models.shipdrift import ShipDrift

    o = ShipDrift(loglevel=20)

    o.add_readers_from_list([
        'https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be',
        'https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc',
        'https://thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be'
        ])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    08:04:19 INFO: OpenDriftSimulation initialised (version 1.2.1)
    08:04:19 INFO: Setting SRS to latlong, since not defined before.




Seed ship elements at defined position and time


.. code-block:: default

    o.seed_elements(lon=5.0, lat=63.0, radius=1000, number=1000,
                    time=datetime.now(),
                    length=80.0, beam=10.0, height=9.0, draft=4.0)








Running model


.. code-block:: default

    o.run(steps=24, stop_on_error=True)








Print and plot results


.. code-block:: default

    print(o)
    o.plot(linecolor='orientation')
    #o.animation()



.. image:: /gallery/images/sphx_glr_example_shipdrift_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    global_landmask
     0:00:00.0  total
     0:00:00.0  preparing
     0:00:00.0  reading
     0:00:00.0  interpolation_time
     0:00:00.0  masking
    --------------------
    https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:00:10.5  total
     0:00:00.0  preparing
     0:00:08.7  reading
     0:00:00.1  interpolation
     0:00:00.0  interpolation_time
     0:00:01.5  rotating vectors
     0:00:00.0  masking
    --------------------
    https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
     0:00:28.2  total
     0:00:00.0  preparing
     0:00:26.2  reading
     0:00:00.3  interpolation
     0:00:00.0  interpolation_time
     0:00:01.5  rotating vectors
     0:00:00.0  masking
    --------------------
    https://thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
     0:00:15.8  total
     0:00:00.0  preparing
     0:00:14.3  reading
     0:00:00.0  interpolation
     0:00:00.0  interpolation_time
     0:00:01.3  rotating vectors
     0:00:00.0  masking
    --------------------
    Performance:
     1:33.9 total time
        0.0 configuration
        3.3 preparing main loop
          3.2 making dynamical landmask
          0.0 moving elements to ocean
       1:09.5 readers
            0.0 global_landmask
            0.0 postprocessing
     1:30.6 main loop
           10.5 https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
           28.2 https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
           15.8 https://thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
         20.9 updating elements
        0.0 cleaning up
    --------------------
    ===========================
    Model:  ShipDrift     (OpenDrift version 1.2.1)
            1000 active ShipObject particles  (0 deactivated, 0 scheduled)
    Projection: +proj=latlong
    -------------------
    Environment variables:
      -----
      land_binary_mask
         1) global_landmask
      -----
      x_sea_water_velocity
      y_sea_water_velocity
         1) https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
      -----
      x_wind
      y_wind
         1) https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
         2) https://thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
      -----
      sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment
      sea_surface_wave_significant_height
      sea_surface_wave_stokes_drift_x_velocity
      sea_surface_wave_stokes_drift_y_velocity
         1) https://thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be

    Time:
            Start: 2020-05-19 08:04:19.034733
            Present: 2020-05-20 08:04:19.034733
            Calculation steps: 24 * 1:00:00 - total time: 1 day, 0:00:00
            Output steps: 25 * 1:00:00
    ===========================

    /opt/conda/envs/opendrift/lib/python3.8/site-packages/cartopy/mpl/gridliner.py:307: UserWarning: The .xlabels_top attribute is deprecated. Please use .top_labels to toggle visibility instead.
      warnings.warn('The .xlabels_top attribute is deprecated. Please '

    (<cartopy.mpl.geoaxes.GeoAxesSubplot object at 0x7fca5446cbe0>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/pyplot.py'>)




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  47.909 seconds)


.. _sphx_glr_download_gallery_example_shipdrift.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_shipdrift.py <example_shipdrift.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_shipdrift.ipynb <example_shipdrift.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
