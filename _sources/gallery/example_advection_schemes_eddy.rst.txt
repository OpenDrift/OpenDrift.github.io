.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_advection_schemes_eddy.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_advection_schemes_eddy.py:


Advection schemes
=============
Illustrating the difference between Euler and Runge-Kutta propagation
schemes, using an idealised (analytical) eddy current field.



.. image:: /gallery/images/sphx_glr_example_advection_schemes_eddy_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    13:22:24 INFO: OpenDriftSimulation initialised (version 1.2.0)
    euler, T=0.5h
    euler, T=3.0h
    runge-kutta, T=0.5h
    runge-kutta, T=3.0h
    runge-kutta4, T=0.5h
    runge-kutta4, T=3.0h
    /root/project/opendrift/models/basemodel.py:3277: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()

    (<cartopy.mpl.geoaxes.GeoAxesSubplot object at 0x7f281ae3e130>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/pyplot.py'>)





|


.. code-block:: default


    from datetime import datetime, timedelta
    from opendrift.readers import reader_ArtificialOceanEddy
    from opendrift.models.oceandrift import OceanDrift

    o = OceanDrift(loglevel=20)  # Set loglevel to 0 for debug information

    fake_eddy = reader_ArtificialOceanEddy.Reader(2, 62)

    runs = []
    leg = []
    i = 0
    for scheme in ['euler', 'runge-kutta', 'runge-kutta4']:
        for time_step  in [1800, 3600*3]:
            leg.append(scheme + ', T=%.1fh' % (time_step/3600.))
            print(leg[-1])
            o = OceanDrift(loglevel=50)
            o.fallback_values['land_binary_mask'] = 0
            o.set_config('drift:scheme', scheme)
            o.add_reader(fake_eddy)
            o.seed_elements(lon=2.0, lat=63.0, time=datetime.now())
            o.run(duration=timedelta(days=9), time_step=time_step)
            runs.append(o)
            i = i + 1

    runs[0].plot(compare=runs[1:], legend=leg, fast=True, buffer=.3)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.488 seconds)


.. _sphx_glr_download_gallery_example_advection_schemes_eddy.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_advection_schemes_eddy.py <example_advection_schemes_eddy.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_advection_schemes_eddy.ipynb <example_advection_schemes_eddy.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
