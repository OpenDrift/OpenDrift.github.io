
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/example_dominating.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_dominating.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_dominating.py:


Show dominating source
======================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

.. code-block:: default


    import os
    from datetime import datetime
    import xarray as xr
    import opendrift
    from opendrift.models.oceandrift import OceanDrift

    of = 'test.nc'
    af = 'test_analysis.nc'
    for fi in [of, af]:
        try:
            os.remove(fi)
        except:
            pass








.. GENERATED FROM PYTHON SOURCE LINES 22-23

Seed elements at 5 different locations/longitudes

.. GENERATED FROM PYTHON SOURCE LINES 23-33

.. code-block:: default

    lons = [4, 4.2, 4.3, 4.32, 4.6]
    t = datetime.now()

    o = OceanDrift(loglevel=20)

    for i, lon in enumerate(lons):
        o.seed_elements(lon=lon, lat=60, radius=3000, number=2000, time=t, origin_marker_name='Lon %f' % lon)
    o.set_config('environment:constant:y_sea_water_velocity', .1)
    o.run(steps=15, outfile=of)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    08:49:19 INFO    opendrift.models.basemodel: OpenDriftSimulation initialised (version 1.7.1 / v1.7.1-123-g4168db6)
    08:49:19 INFO    opendrift.models.basemodel: Fallback values will be used for the following variables which have no readers: 
    08:49:19 INFO    opendrift.models.basemodel:    x_sea_water_velocity: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    x_wind: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    y_wind: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    upward_sea_water_velocity: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    ocean_vertical_diffusivity: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    sea_surface_wave_significant_height: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    sea_surface_wave_stokes_drift_x_velocity: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    sea_surface_wave_stokes_drift_y_velocity: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    surface_downward_x_stress: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    surface_downward_y_stress: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    turbulent_kinetic_energy: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    turbulent_generic_length_scale: 0.000000
    08:49:19 INFO    opendrift.models.basemodel:    ocean_mixed_layer_thickness: 50.000000
    08:49:19 INFO    opendrift.models.basemodel:    sea_floor_depth_below_sea_level: 10000.000000
    08:49:19 INFO    opendrift.models.basemodel: Adding a dynamical landmask with max. priority based on assumed maximum speed of 1 m/s. Adding a customised landmask may be faster...
    08:49:19 INFO    opendrift_landmask_data.mask: locking landmask for generation..
    08:49:19 INFO    opendrift_landmask_data.mask: decompressing memmap landmask to /tmp/landmask/mask.dat..
    08:49:28 INFO    opendrift_landmask_data.mask: landmask generated
    08:49:31 INFO    opendrift.models.basemodel: Using existing reader for land_binary_mask
    08:49:31 INFO    opendrift.models.basemodel: All points are in ocean
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 08:49:19.203382 - step 1 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 09:49:19.203382 - step 2 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 10:49:19.203382 - step 3 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 11:49:19.203382 - step 4 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 12:49:19.203382 - step 5 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 13:49:19.203382 - step 6 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 14:49:19.203382 - step 7 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 15:49:19.203382 - step 8 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 16:49:19.203382 - step 9 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 17:49:19.203382 - step 10 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 18:49:19.203382 - step 11 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 19:49:19.203382 - step 12 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 20:49:19.203382 - step 13 of 15 - 10000 active elements (0 deactivated)
    08:49:32 INFO    opendrift.models.basemodel: 2021-10-08 21:49:19.203382 - step 14 of 15 - 10000 active elements (0 deactivated)
    08:49:33 INFO    opendrift.models.basemodel: 2021-10-08 22:49:19.203382 - step 15 of 15 - 10000 active elements (0 deactivated)
    08:49:33 INFO    opendrift.export.io_netcdf: Wrote 16 steps to file test.nc




.. GENERATED FROM PYTHON SOURCE LINES 34-35

Calculate spatial density of elements at 1500m grid spacing

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    oa = opendrift.open_xarray(of, analysis_file=af)
    oa.get_density_xarray(pixelsize_m=1500, weights=None, dominating_origin_marker=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    08:49:34 DEBUG   opendrift.models.basemodel: Adding 17 config items from basemodel
    08:49:34 DEBUG   opendrift.models.basemodel: Adding 4 config items from basemodel
    08:49:34 DEBUG   opendrift.models.basemodel: Adding 36 config items from basemodel
    08:49:35 INFO    opendrift.models.basemodel: OpenDriftSimulation initialised (version 1.7.1 / v1.7.1-123-g4168db6)
    08:49:35 DEBUG   opendrift.models.basemodel: Adding 14 config items from oceandrift
    08:49:35 DEBUG   opendrift.models.basemodel:   Overwriting config item seed:z
    08:49:35 DEBUG   opendrift.export.io_netcdf: Importing with Xarray from test.nc
    08:49:35 INFO    opendrift: Returning <class 'opendrift.models.oceandrift.OceanDrift'> object
    08:49:35 INFO    opendrift.models.basemodel: Calculating density array, this may take some time...
    08:49:35 INFO    opendrift.models.basemodel:    calculating for origin_marker 0...
    08:49:35 INFO    opendrift.models.basemodel:    calculating for origin_marker 1...
    08:49:35 INFO    opendrift.models.basemodel:    calculating for origin_marker 2...
    08:49:35 INFO    opendrift.models.basemodel:    calculating for origin_marker 3...
    08:49:35 INFO    opendrift.models.basemodel:    calculating for origin_marker 4...
    08:49:35 INFO    opendrift.models.basemodel: Calculating dominating origin_marker
    08:49:35 INFO    opendrift.models.basemodel: Time to calculate density array: 0:00:00.136719

    (<xarray.DataArray 'density_origin_marker' (time: 16, lon_bin: 37, lat_bin: 22)>
    array([[[0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            ...,
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.]],

           [[0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            ...,
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.]],

           [[0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            ...,
    ...
            ...,
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.]],

           [[0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            ...,
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.]],

           [[0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            ...,
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.],
            [0., 0., 0., ..., 0., 0., 0.]]])
    Dimensions without coordinates: time, lon_bin, lat_bin, <xarray.DataArray 'density_origin_marker' (time: 16, lon_bin: 37, lat_bin: 22, origin_marker: 5)>
    array([[[[0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             ...,
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.]],

            [[0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             ...,
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.]],

            [[0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             ...,
    ...
             ...,
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.]],

            [[0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             ...,
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.]],

            [[0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             ...,
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.],
             [0., 0., 0., 0., 0.]]]])
    Dimensions without coordinates: time, lon_bin, lat_bin, origin_marker, array([3.80892829, 3.83596802, 3.86300775, 3.89004748, 3.91708721,
           3.94412694, 3.97116667, 3.99820641, 4.02524614, 4.05228587,
           4.0793256 , 4.10636533, 4.13340506, 4.1604448 , 4.18748453,
           4.21452426, 4.24156399, 4.26860372, 4.29564345, 4.32268318,
           4.34972292, 4.37676265, 4.40380238, 4.43084211, 4.45788184,
           4.48492157, 4.5119613 , 4.53900104, 4.56604077, 4.5930805 ,
           4.62012023, 4.64715996, 4.67419969, 4.70123942, 4.72827916,
           4.75531889, 4.78235862, 4.80939835]), array([59.86675077, 59.88026428, 59.8937778 , 59.90729131, 59.92080482,
           59.93431834, 59.94783185, 59.96134536, 59.97485888, 59.98837239,
           60.0018859 , 60.01539942, 60.02891293, 60.04242644, 60.05593996,
           60.06945347, 60.08296698, 60.0964805 , 60.10999401, 60.12350753,
           60.13702104, 60.15053455, 60.16404807]))



.. GENERATED FROM PYTHON SOURCE LINES 39-40

Show which of the 5 sources are dominating within each grid cell

.. GENERATED FROM PYTHON SOURCE LINES 40-44

.. code-block:: default

    oa.animation(background=oa.ads.dominating_origin_marker, show_elements=False, bgalpha=1,
                 legend=oa.origin_marker, vmin=0, vmax=4)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    08:49:35 DEBUG   opendrift.readers.reader_global_landmask: Using existing GSHHS shapes..
    08:49:35 DEBUG   opendrift_landmask_data.mask: mask already memmapped
    08:49:52 INFO    opendrift.models.basemodel: Saving animation to /root/project/docs/source/gallery/animations/example_dominating_0.gif...
    08:49:52 INFO    opendrift.models.basemodel: Making animated gif...
    MovieWriter imagemagick unavailable; using Pillow instead.
    08:50:05 DEBUG   opendrift.models.basemodel: Time to make animation: 0:00:30.678930




.. GENERATED FROM PYTHON SOURCE LINES 45-46

.. image:: /gallery/animations/example_dominating_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  46.691 seconds)


.. _sphx_glr_download_gallery_example_dominating.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_dominating.py <example_dominating.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_dominating.ipynb <example_dominating.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
