.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_example_long_drifter.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_long_drifter.py:


Drifter
==================================


.. code-block:: default


    from datetime import timedelta
    import numpy as np

    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.models.oceandrift import OceanDrift

    o = OceanDrift()  # Basic drift model suitable for passive tracers or drifters


Preparing Readers
######################


.. code-block:: default


    reader_current = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc')
    reader_wind = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc')

    o.add_reader([reader_current, reader_wind])


Seeding elements
######################


.. code-block:: default


    # Elements are moved with the ocean current, in addition to a fraction of
    # the wind speed (wind_drift_factor). This factor depends on the properties
    # of the elements. Typical empirical values are:
    # - 0.035 (3.5 %) for oil and iSphere driftes
    # - 0.01  (1 %) for CODE drifters partly submerged ~0.5 m
    # As there are large uncertainties, it makes sence to provide a statistical
    # distribution of wind_drift_factors

    # Using a constant value for all elements:
    #wind_drift_factor = 0.03

    # Giving each element a unique (random) wind_drift_factor
    wind_drift_factor = np.random.uniform(0, 0.06, 2000)
    o.seed_elements(4.7, 59.9, radius=3000, number=2000,
                    time=reader_current.start_time,
                    wind_drift_factor=wind_drift_factor)


Running model
######################


.. code-block:: default

    o.run(time_step=timedelta(minutes=15),
          time_step_output=timedelta(minutes=60))


Print and plot results
##########################


.. code-block:: default

    print(o)
    o.animation(filename='drifter.gif')


.. image:: /gallery/animations/drifter.gif


.. code-block:: default


    # Plot trajectories, colored by the wind_drift_factor of each element
    o.plot(linecolor='wind_drift_factor')


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_gallery_example_long_drifter.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_long_drifter.py <example_long_drifter.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_long_drifter.ipynb <example_long_drifter.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
