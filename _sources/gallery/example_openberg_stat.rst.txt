.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_openberg_stat.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_openberg_stat.py:


Openberg - statistical mode
==============================


.. code-block:: default


    from datetime import datetime, timedelta
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.readers import reader_current_from_track
    from opendrift.models.openberg import OpenBerg








Create observation of iceberg track


.. code-block:: default

    obslon = [3.1, 3.123456]
    obslat = [61.1, 61.132198]
    obstime = [datetime(2015, 11, 16, 0), datetime(2015, 11, 16, 6)]








Initialize model


.. code-block:: default

    steps = 60   # This is the number of forecast steps
    o = OpenBerg(loglevel=30)  # Basic drift model suitable for icebergs








Preparing Readers


.. code-block:: default

    reader_wind = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
       '16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc',name='WIND')

    reader_current = reader_current_from_track.Reader(
        obslon, obslat, obstime, wind_east=0, wind_north=0,
        windreader=reader_wind, wind_factor=0.018)

    o.add_reader([reader_current, reader_wind])








Seeding elements

 Icebergs are moved with the ocean current as per Barker et al (2004),
 in addition to a fraction of the wind speed (wind_drift_factor).
 This factor depends on the properties of the elements.
 Default empirical values are:
 - Wind drift fraction: 0.018 (1.8 %) (Garret 1985)
 - Iceberg size: 	Keel dept = 60m
					Waterline length = 90.5m
 					NB! Iceberg size is irrelevant for current_reader with 1D z-profile


.. code-block:: default


    o.seed_elements(3.3, 61.3, radius=3000, number=100,
                    time=reader_current.start_time)








Run model


.. code-block:: default

    print('Starting free run .../n')

    print('Start time: ' + str(o.start_time))

    o.run(time_step=3600, steps=steps)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Starting free run .../n
    Start time: 2015-11-16 07:00:00




Print and plot results


.. code-block:: default

    o.plot(fast=True)
    o.animation(fast=True)




.. image:: /gallery/images/sphx_glr_example_openberg_stat_001.png
    :alt: OpenDrift - OpenBerg 2015-11-16 07:00 to 2015-11-18 19:00 UTC (61 steps)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    14:19:06 WARNING: plotting fast. this will make your plots less accurate.
    14:19:07 WARNING: plotting fast. this will make your plots less accurate.




.. image:: /gallery/animations/example_openberg_stat_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  20.132 seconds)


.. _sphx_glr_download_gallery_example_openberg_stat.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_openberg_stat.py <example_openberg_stat.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_openberg_stat.ipynb <example_openberg_stat.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
