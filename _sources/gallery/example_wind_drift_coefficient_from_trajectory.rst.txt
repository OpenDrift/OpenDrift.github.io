
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/example_wind_drift_coefficient_from_trajectory.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_wind_drift_coefficient_from_trajectory.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_wind_drift_coefficient_from_trajectory.py:


Retieving wind drift factor from trajectory
===========================================

.. GENERATED FROM PYTHON SOURCE LINES 6-12

.. code-block:: default


    from datetime import datetime, timedelta
    import matplotlib.pyplot as plt
    from opendrift.models.oceandrift import OceanDrift
    from opendrift.models.physics_methods import wind_drift_factor_from_trajectory








.. GENERATED FROM PYTHON SOURCE LINES 13-18

A very simple drift model is: current + wind_drift_factor*wind
where wind_drift_factor for surface drift is typically
0.035 if Stokes drift included, and 0.02 in addition to Stokes drift.
This example illustrates how a best-fit wind_drift_factor
can be calculated from an observed trajectory.

.. GENERATED FROM PYTHON SOURCE LINES 20-21

First we simulate a synthetic drifter trajectory

.. GENERATED FROM PYTHON SOURCE LINES 21-26

.. code-block:: default

    ot = OceanDrift(loglevel=50)
    ot.add_readers_from_list([ot.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc',
        ot.test_data_folder() + '16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc'], lazy=False)








.. GENERATED FROM PYTHON SOURCE LINES 27-28

Using a wind_drift_factor of 0.33 i.e. drift is current + 3.3% of wind speed

.. GENERATED FROM PYTHON SOURCE LINES 28-31

.. code-block:: default

    ot.seed_elements(lon=4, lat=60, number=1, time=ot.readers[list(ot.readers)[0]].start_time,
            wind_drift_factor=0.033)








.. GENERATED FROM PYTHON SOURCE LINES 32-33

Adding some horizontal diffusivity as "noise"

.. GENERATED FROM PYTHON SOURCE LINES 33-38

.. code-block:: default

    ot.set_config('drift:horizontal_diffusivity', 10)
    ot.run(duration=timedelta(hours=12), time_step=600)

    ot.plot(fast=True, title='Synthetic drifter trajectory')




.. image-sg:: /gallery/images/sphx_glr_example_wind_drift_coefficient_from_trajectory_001.png
   :alt: Synthetic drifter trajectory
   :srcset: /gallery/images/sphx_glr_example_wind_drift_coefficient_from_trajectory_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    (<GeoAxesSubplot:title={'center':'Synthetic drifter trajectory'}>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.9/site-packages/matplotlib/pyplot.py'>)



.. GENERATED FROM PYTHON SOURCE LINES 39-40

Secondly, calculating the wind_drift_factor which reproduces the "observed" trajectory with minimal difference

.. GENERATED FROM PYTHON SOURCE LINES 40-54

.. code-block:: default

    drifter_lons = ot.history['lon'][0]
    drifter_lats = ot.history['lat'][0]
    drifter_times = ot.get_time_array()[0]

    o = OceanDrift(loglevel=50)
    o.add_readers_from_list([o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc',
        o.test_data_folder() + '16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc'], lazy=False)
    t = o.get_variables_along_trajectory(variables=['x_sea_water_velocity', 'y_sea_water_velocity', 'x_wind', 'y_wind'],
            lons=drifter_lons, lats=drifter_lats, times=drifter_times)

    wind_drift_factor = wind_drift_factor_from_trajectory(t)
    print(wind_drift_factor)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [0.03086397 0.05481181 0.01345228 0.02533443 0.03768893 0.04688713
     0.02941138 0.03340967 0.02393407 0.02366076 0.05784242 0.02147846
     0.01268932 0.03119064 0.0410952  0.03512898 0.03018438 0.03624475
     0.0373606  0.03358645 0.03369332 0.0564688  0.03373189 0.04586428
     0.04303053 0.04100323 0.03010449 0.03603417 0.03467312 0.03475287
     0.03492666 0.02966471 0.02937077 0.04520528 0.03822638 0.03106469
     0.01920823 0.02619712 0.03370469 0.03482368 0.04521656 0.01903623
     0.04682748 0.02851284 0.04612479 0.04495397 0.04110427 0.03846344
     0.04936829 0.03664389 0.02288361 0.04714141 0.05763657 0.02368844
     0.05975038 0.05722883 0.0561231  0.04066096 0.04441061 0.04757565
     0.03669327 0.04465733 0.0239421  0.04053894 0.04174813 0.02637324
     0.02609949 0.02782988 0.03944837 0.0390428  0.01626522 0.03686566]




.. GENERATED FROM PYTHON SOURCE LINES 55-59

The mean retrieved wind_drift_factor is 0.036, slichtly higher than the value 0.033 used for the simulation.
The difference is due to the "noise" added by horizontal diffusion.
Note that the retieved wind_drift_factor is linked to the wind and current used for the retrieval,
other forcing datasets will yeld different value of the wind_drift_factor.

.. GENERATED FROM PYTHON SOURCE LINES 59-68

.. code-block:: default

    print(wind_drift_factor.mean())

    plt.hist(wind_drift_factor, label='Retrieved wind_drift_factor')
    plt.axvline(x=0.033, label='Actual wind_drift_factor of 0.033', color='k')
    plt.axvline(x=wind_drift_factor.mean(), label='Mean retieved wind_drift_factor of %.3f' % wind_drift_factor.mean(), color='r')
    plt.ylabel('Number')
    plt.xlabel('Wind drift factor  [fraction]')
    plt.legend()
    plt.show()



.. image-sg:: /gallery/images/sphx_glr_example_wind_drift_coefficient_from_trajectory_002.png
   :alt: example wind drift coefficient from trajectory
   :srcset: /gallery/images/sphx_glr_example_wind_drift_coefficient_from_trajectory_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    0.03640083777721621





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  19.093 seconds)


.. _sphx_glr_download_gallery_example_wind_drift_coefficient_from_trajectory.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_wind_drift_coefficient_from_trajectory.py <example_wind_drift_coefficient_from_trajectory.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_wind_drift_coefficient_from_trajectory.ipynb <example_wind_drift_coefficient_from_trajectory.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
