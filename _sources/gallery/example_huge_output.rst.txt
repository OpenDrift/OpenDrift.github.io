
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/example_huge_output.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_huge_output.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_huge_output.py:


Analysing huge output files
===========================

.. GENERATED FROM PYTHON SOURCE LINES 6-13

.. code-block:: default


    import os
    from datetime import datetime, timedelta
    import opendrift
    from opendrift.models.oceandrift import OceanDrift
    from opendrift.readers import reader_oscillating








.. GENERATED FROM PYTHON SOURCE LINES 14-15

First make a simulation with two seedings, marked by *origin_marker*

.. GENERATED FROM PYTHON SOURCE LINES 15-34

.. code-block:: default

    o = OceanDrift(loglevel=50)
    t1 = datetime.now()
    t2 = t1 + timedelta(hours=6)
    number = 10000
    outfile = 'simulation.nc'  # Raw simulation output
    o.seed_elements(time=t1, lon=4, lat=60, number=number,
                    origin_marker=0)
    o.seed_elements(time=[t1, t2], lon=4.2, lat=60.4, number=number,
                    origin_marker=1)

    reader_x = reader_oscillating.Reader('x_sea_water_velocity',
                    amplitude=1, zero_time=t1)
    reader_y = reader_oscillating.Reader('y_sea_water_velocity',
                    amplitude=1, zero_time=t2)
    o.add_reader([reader_x, reader_y])
    o.set_config('drift:horizontal_diffusivity', 10)
    o.run(duration=timedelta(hours=24),
          time_step=900, time_step_output=1800, outfile=outfile)








.. GENERATED FROM PYTHON SOURCE LINES 35-39

Opening the output file lazily with Xarray.
This will work even if the file is too large to fit in memory, as it
will read and process data chuck-by-chunk directly from file using Dask.
(See also `example_river_runoff.py <https://opendrift.github.io/gallery/example_river_runoff.html>`_)

.. GENERATED FROM PYTHON SOURCE LINES 39-41

.. code-block:: default

    oa = opendrift.open_xarray(outfile)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    12:51:40 DEBUG   opendrift.models.basemodel: Adding 17 config items from basemodel
    12:51:40 DEBUG   opendrift.models.basemodel: Adding 5 config items from basemodel
    12:51:40 DEBUG   opendrift.models.basemodel: Adding 36 config items from basemodel
    12:51:41 INFO    opendrift.models.basemodel: OpenDriftSimulation initialised (version 1.8.0 / v1.8.0-7-g4b092da)
    12:51:41 DEBUG   opendrift.models.basemodel: Adding 14 config items from oceandrift
    12:51:41 DEBUG   opendrift.models.basemodel:   Overwriting config item seed:z
    12:51:41 DEBUG   opendrift.export.io_netcdf: Importing with Xarray from simulation.nc
    12:51:41 INFO    opendrift: Returning <class 'opendrift.models.oceandrift.OceanDrift'> object




.. GENERATED FROM PYTHON SOURCE LINES 42-45

Calculating histogram
The histogram may be stored/cached to a netCDF file for later re-use,
as the calculation may be time consuming for huge output files.

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default

    h = oa.get_histogram(pixelsize_m=500)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    12:51:41 INFO    opendrift.models.basemodel:    calculating for origin_marker 0...
    12:51:41 INFO    opendrift.models.basemodel:    calculating for origin_marker 1...




.. GENERATED FROM PYTHON SOURCE LINES 48-49

Plot the cumulative coverage of first seeding (origin_marker=0)

.. GENERATED FROM PYTHON SOURCE LINES 49-52

.. code-block:: default

    b=h.isel(origin_marker=0).sum(dim='time')
    oa.plot(background=b.where(b>0), fast=True, show_elements=False, vmin=0, vmax=1000, clabel='First seeding')




.. image-sg:: /gallery/images/sphx_glr_example_huge_output_001.png
   :alt: OpenDrift - OceanDrift 2022-01-07 12:51 to 2022-01-08 12:51 UTC (49 steps)
   :srcset: /gallery/images/sphx_glr_example_huge_output_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    12:51:41 WARNING opendrift.models.basemodel: Plotting fast. This will make your plots less accurate.
    12:51:41 WARNING opendrift.readers.reader_global_landmask: skippoly and extent is not supported with RoaringLandmask

    (<GeoAxesSubplot:title={'center':'OpenDrift - OceanDrift\n2022-01-07 12:51 to 2022-01-08 12:51 UTC (49 steps)'}>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.9/site-packages/matplotlib/pyplot.py'>)



.. GENERATED FROM PYTHON SOURCE LINES 53-59

Making two animations, for each of the two seedings / origin_markers.
The calculated density fields may be stored/cached to a netCDF file
for later re-use, as their calculation may be time consuming
for huge output files.
Note that other analysis/plotting methods are not yet adapted
to datasets opened lazily with open_xarray

.. GENERATED FROM PYTHON SOURCE LINES 59-67

.. code-block:: default

    for om in [0, 1]:
        background=h.isel(origin_marker=om)
        oa.animation(background=background.where(background>0), bgalpha=1,
                    corners=[4.0, 6, 59.5, 61], fast=False, show_elements=False, vmin=0, vmax=200)

    # Cleaning up
    os.remove(outfile)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    12:51:43 DEBUG   opendrift.readers.reader_global_landmask: Adding GSHHS shapes..
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/shapefile.py:391: UserWarning: Shapefile shape has invalid polygon: no exterior rings found (must have clockwise orientation); interpreting holes as exteriors.
      warnings.warn('Shapefile shape has invalid polygon: no exterior rings found (must have clockwise orientation); interpreting holes as exteriors.')
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    12:51:52 DEBUG   opendrift.models.basemodel: Saving animation..
    12:51:52 INFO    opendrift.models.basemodel: Saving animation to /root/project/docs/source/gallery/animations/example_huge_output_0.gif...
    12:52:00 DEBUG   opendrift.models.basemodel: MPLBACKEND = agg
    12:52:00 DEBUG   opendrift.models.basemodel: DISPLAY = None
    12:52:00 DEBUG   opendrift.models.basemodel: Time to save animation: 0:00:07.859821
    12:52:00 INFO    opendrift.models.basemodel: Time to make animation: 0:00:16.733516
    12:52:00 DEBUG   opendrift.readers.reader_global_landmask: Adding GSHHS shapes..
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    12:52:00 DEBUG   opendrift.models.basemodel: Saving animation..
    12:52:00 INFO    opendrift.models.basemodel: Saving animation to /root/project/docs/source/gallery/animations/example_huge_output_1.gif...
    12:52:08 DEBUG   opendrift.models.basemodel: MPLBACKEND = agg
    12:52:08 DEBUG   opendrift.models.basemodel: DISPLAY = None
    12:52:08 DEBUG   opendrift.models.basemodel: Time to save animation: 0:00:07.586207
    12:52:08 INFO    opendrift.models.basemodel: Time to make animation: 0:00:08.154962




.. GENERATED FROM PYTHON SOURCE LINES 68-69

First seeding

.. GENERATED FROM PYTHON SOURCE LINES 71-72

.. image:: /gallery/animations/example_huge_output_0.gif

.. GENERATED FROM PYTHON SOURCE LINES 74-75

Second seeding

.. GENERATED FROM PYTHON SOURCE LINES 77-78

.. image:: /gallery/animations/example_huge_output_1.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  54.657 seconds)


.. _sphx_glr_download_gallery_example_huge_output.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_huge_output.py <example_huge_output.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_huge_output.ipynb <example_huge_output.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
