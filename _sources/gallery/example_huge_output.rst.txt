
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/example_huge_output.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_huge_output.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_huge_output.py:


Analysing huge output files
===========================

.. GENERATED FROM PYTHON SOURCE LINES 6-12

.. code-block:: default


    from datetime import datetime, timedelta
    import opendrift
    from opendrift.models.oceandrift import OceanDrift
    from opendrift.readers import reader_oscillating








.. GENERATED FROM PYTHON SOURCE LINES 13-14

First make a simulation with two seedings, marked by *origin_marker*

.. GENERATED FROM PYTHON SOURCE LINES 14-33

.. code-block:: default

    o = OceanDrift(loglevel=50)
    t1 = datetime.now()
    t2 = t1 + timedelta(hours=6)
    number = 10000
    outfile = 'simulation.nc'  # Raw simulation output
    o.seed_elements(time=t1, lon=4, lat=60, number=number,
                    origin_marker=0)
    o.seed_elements(time=[t1, t2], lon=4.2, lat=60.4, number=number,
                    origin_marker=1)

    reader_x = reader_oscillating.Reader('x_sea_water_velocity',
                    amplitude=1, zero_time=t1)
    reader_y = reader_oscillating.Reader('y_sea_water_velocity',
                    amplitude=1, zero_time=t2)
    o.add_reader([reader_x, reader_y])
    o.set_config('drift:horizontal_diffusivity', 10)
    o.run(duration=timedelta(hours=24),
          time_step=900, time_step_output=1800, outfile=outfile)








.. GENERATED FROM PYTHON SOURCE LINES 34-38

Opening the output file lazily with Xarray.
This will work even if the file is too large to fit in memory, as it
will read and process data chuck-by-chunk directly from file using Dask.
Note that the analysis file will be re-used if existing. Thus this file should be deleted after making any changes to the simulation above.

.. GENERATED FROM PYTHON SOURCE LINES 38-40

.. code-block:: default

    o = opendrift.open_xarray(outfile, analysis_file='simulation_density.nc')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    12:24:54 DEBUG   opendrift: Adding 17 config items from basemodel
    12:24:54 DEBUG   opendrift: Adding 4 config items from basemodel
    12:24:54 DEBUG   opendrift: Adding 34 config items from basemodel
    12:24:54 INFO    opendrift: OpenDriftSimulation initialised (version 1.5.1 / v1.5.1-32-ged2ade6)
    12:24:54 DEBUG   opendrift: Adding 13 config items from oceandrift
    12:24:54 DEBUG   opendrift:   Overwriting config item seed:z
    12:24:54 DEBUG   opendrift: Importing with Xarray from simulation.nc




.. GENERATED FROM PYTHON SOURCE LINES 41-47

Making two animations, for each of the two seedings / origin_markere.
The calculated density fields will be stored/cached in the analysis file
for later re-use, as their calculation may be time consuming
for huge output files.
Note that other analysis/plotting methods are not yet adapted
to datasets opened lazily with open_xarray

.. GENERATED FROM PYTHON SOURCE LINES 47-51

.. code-block:: default

    for om in [0, 1]:
        o.animation(density=True, density_pixelsize_m=500, fast=False,
                    origin_marker=om, show_elements=False, vmin=0, vmax=200)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    12:24:54 INFO    opendrift: Calculating density array, this may take some time...
    12:24:54 DEBUG   opendrift: Finding min and max of lon and lat...
    12:24:54 INFO    opendrift:     calculating for origin_marker 0...
    12:24:54 INFO    opendrift:     calculating for origin_marker 1...
    12:24:54 INFO    opendrift: Writing density array to analysis file: simulation_density.nc
    12:24:54 INFO    opendrift:     writing for origin_marker 0...
    12:24:54 INFO    opendrift:     writing for origin_marker 1...
    12:24:54 INFO    opendrift: Time to calculate density array: 0:00:00.330072
    12:24:54 DEBUG   opendrift: Finding min longitude...
    12:24:54 DEBUG   opendrift: Finding max longitude...
    12:24:54 DEBUG   opendrift: Finding min latitude...
    12:24:54 DEBUG   opendrift: Finding max latitude...
    12:24:54 DEBUG   opendrift: Adding GSHHS shapes..
    /root/project/opendrift/models/basemodel.py:3064: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("jet"))
      cmap.set_under('w')
    12:24:55 INFO    opendrift: Saving animation to /root/project/docs/source/gallery/animations/example_huge_output_0.gif...
    12:24:55 INFO    opendrift: Making animated gif...
    12:25:45 DEBUG   opendrift: Time to make animation: 0:00:51.247560
    12:25:45 INFO    opendrift: Importing from saved analysis file
    12:25:45 DEBUG   opendrift: Adding GSHHS shapes..
    /root/project/opendrift/models/basemodel.py:3064: MatplotlibDeprecationWarning: You are modifying the state of a globally registered colormap. In future versions, you will not be able to modify a registered colormap in-place. To remove this warning, you can make a copy of the colormap first. cmap = copy.copy(mpl.cm.get_cmap("jet"))
      cmap.set_under('w')
    12:25:46 INFO    opendrift: Saving animation to /root/project/docs/source/gallery/animations/example_huge_output_1.gif...
    12:25:46 INFO    opendrift: Making animated gif...
    12:26:35 DEBUG   opendrift: Time to make animation: 0:00:50.453108




.. GENERATED FROM PYTHON SOURCE LINES 52-53

First seeding

.. GENERATED FROM PYTHON SOURCE LINES 55-56

.. image:: /gallery/animations/example_huge_output_0.gif

.. GENERATED FROM PYTHON SOURCE LINES 58-59

Second seeding

.. GENERATED FROM PYTHON SOURCE LINES 61-62

.. image:: /gallery/animations/example_huge_output_1.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  3.156 seconds)


.. _sphx_glr_download_gallery_example_huge_output.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_huge_output.py <example_huge_output.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_huge_output.ipynb <example_huge_output.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
