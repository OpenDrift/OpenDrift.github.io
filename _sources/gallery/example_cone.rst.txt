.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_example_cone.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_cone.py:


Cone seeding
=============


.. code-block:: default


    from datetime import timedelta
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.models.openoil import OpenOil

    o = OpenOil(loglevel=20)  # Set loglevel to 0 for debug information

    # Arome
    reader_arome = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc')

    # Norkyst
    reader_norkyst = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc')

    o.add_reader([reader_norkyst, reader_arome])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    08:15:09 INFO: OpenDriftSimulation initialised (version 1.2.0)
    08:15:09 INFO: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
    08:15:09 INFO: Opening file with Dataset
    08:15:09 INFO: Could not parse CF grid_mapping
    08:15:09 INFO: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
    08:15:09 INFO: Opening file with Dataset




Seed elements along cone, e.g. ship track with
increasing uncertainty in position


.. code-block:: default

    time = [reader_arome.start_time,
            reader_arome.start_time + timedelta(hours=30)]
    #time = reader_arome.start_time








Seed oil elements at defined position and time


.. code-block:: default

    o.seed_elements(lon=[3.6, 5.1], lat=[61., 59.6], radius=[1000, 10000],
                    number=5000, time=time, cone=True)








Adjusting some configuration


.. code-block:: default

    o.set_config('processes:dispersion', False)
    o.set_config('processes:evaporation', False)
    o.set_config('processes:emulsification', True)
    o.set_config('drift:current_uncertainty', .1)
    o.set_config('drift:wind_uncertainty', 1)








Running model for 48 hours


.. code-block:: default

    o.run(steps=48*2, time_step=1800)








Print and plot results


.. code-block:: default

    print(o)
    o.animation(fast=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
     0:00:07.2  total
     0:00:00.0  preparing
     0:00:00.2  reading
     0:00:00.3  interpolation
     0:00:00.0  interpolation_time
     0:00:06.5  rotating vectors
     0:00:00.0  masking
    --------------------
    /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
     0:00:06.8  total
     0:00:00.0  preparing
     0:00:00.1  reading
     0:00:00.0  interpolation
     0:00:00.0  interpolation_time
     0:00:06.5  rotating vectors
     0:00:00.0  masking
    --------------------
    global_landmask
     0:00:00.5  total
     0:00:00.0  preparing
     0:00:00.5  reading
     0:00:00.0  interpolation_time
     0:00:00.0  masking
    --------------------
    Performance:
       24.5 total time
        3.6 configuration
        3.4 preparing main loop
          2.8 making dynamical landmask
          0.4 moving elements to ocean
         15.2 readers
            0.5 global_landmask
            0.3 postprocessing
       17.3 main loop
            7.2 /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
            6.9 /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
          1.2 updating elements
            0.0 oil weathering
        0.0 cleaning up
    --------------------
    ===========================
    Model:  OpenOil     (OpenDrift version 1.2.0)
            1692 active Oil particles  (3308 deactivated, 0 scheduled)
    Projection: +proj=stere +lat_0=90 +lon_0=70 +lat_ts=60 +units=m +a=6.371e+06 +e=0 +no_defs
    -------------------
    Environment variables:
      -----
      x_sea_water_velocity
      y_sea_water_velocity
         1) /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
      -----
      x_wind
      y_wind
         1) /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
      -----
      land_binary_mask
         1) global_landmask
      -----
    Readers not added for the following variables:
      sea_floor_depth_below_sea_level
      sea_ice_area_fraction
      sea_surface_wave_significant_height
      sea_surface_wave_stokes_drift_x_velocity
      sea_surface_wave_stokes_drift_y_velocity
      sea_water_temperature

    Time:
            Start: 2015-11-16 00:00:00
            Present: 2015-11-18 00:00:00
            Calculation steps: 96 * 0:30:00 - total time: 2 days, 0:00:00
            Output steps: 97 * 0:30:00
    ===========================

    /root/project/opendrift/models/basemodel.py:2828: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()




.. image:: /gallery/animations/example_cone_0.gif


.. code-block:: default


    o.plot(fast=True)



.. image:: /gallery/images/sphx_glr_example_cone_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /root/project/opendrift/models/basemodel.py:3244: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()

    (<cartopy.mpl.geoaxes.GeoAxesSubplot object at 0x7f35f8438cd0>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/pyplot.py'>)




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  58.088 seconds)


.. _sphx_glr_download_gallery_example_cone.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_cone.py <example_cone.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_cone.ipynb <example_cone.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
