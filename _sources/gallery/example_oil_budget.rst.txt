.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_oil_budget.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_oil_budget.py:


Oil budget
==================================


.. code-block:: default


    from datetime import timedelta
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.models.openoil import OpenOil

    o = OpenOil(loglevel=20, weathering_model='noaa')

    # Arome
    reader_arome = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc')
    #reader_arome = reader_netCDF_CF_generic.Reader('https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc')

    # Norkyst
    reader_norkyst = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc')
    #reader_norkyst = reader_netCDF_CF_generic.Reader('https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be')

    o.add_reader([reader_norkyst, reader_arome])
    #o.set_config('environment:fallback:x_wind', 9)
    #o.set_config('environment:fallback:y_wind', 0)
    #o.set_config('environment:fallback:x_sea_water_velocity', .7)
    #o.set_config('environment:fallback:y_sea_water_velocity', .3)
    #o.set_config('environment:fallback:land_binary_mask', 0)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    08:55:50 INFO    opendrift: OpenDriftSimulation initialised (version 1.4.2)
    08:55:50 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
    08:55:50 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening file with Dataset
    08:55:50 INFO    opendrift.readers.reader_netCDF_CF_generic: Could not parse CF grid_mapping
    08:55:50 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
    08:55:50 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening file with Dataset




Seed oil elements at defined position and time


.. code-block:: default

    oiltype = 'IFO-380LS 2014'
    oiltype = 'IFO 300'
    oiltype = 'IFO-180NS 2014'
    oiltype = '*GENERIC LIGHT CRUDE'
    oiltype = '*GENERIC HEAVY CRUDE'
    o.seed_elements(lon=4.8, lat=60.0, z=0, radius=3000, number=1000,
                    time=reader_arome.start_time, oiltype=oiltype)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/conda/envs/opendrift/lib/python3.8/site-packages/scipy/optimize/minpack.py:828: OptimizeWarning: Covariance of the parameters could not be estimated
      warnings.warn('Covariance of the parameters could not be estimated',
    08:55:50 INFO    opendrift: Using density 938.0670859538783 and viscosity 0.0010573364220196038 of oiltype *GENERIC HEAVY CRUDE




Adjusting some configuration


.. code-block:: default

    o.set_config('processes:dispersion', True)
    o.set_config('processes:evaporation', True)
    o.set_config('processes:emulsification', True)
    o.set_config('drift:vertical_mixing', True)
    o.set_config('vertical_mixing:timestep', 20.) # seconds








Running model


.. code-block:: default

    o.run(duration=timedelta(hours=24), time_step=1800)

    o.plot_oil_budget(show_density_viscosity=True, show_wind_and_current=True)

    o.animation(color='viscosity')




.. image:: /gallery/images/sphx_glr_example_oil_budget_001.png
    :alt: *GENERIC HEAVY CRUDE (938.1 kg/m3) - 2015-11-16 00:00 to 2015-11-17 00:00
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    08:55:50 INFO    opendrift: Fallback values will be used for the following variables which have no readers: 
    08:55:50 INFO    opendrift:     upward_sea_water_velocity: 0.000000
    08:55:50 INFO    opendrift:     sea_surface_wave_significant_height: 0.000000
    08:55:50 INFO    opendrift:     sea_surface_wave_stokes_drift_x_velocity: 0.000000
    08:55:50 INFO    opendrift:     sea_surface_wave_stokes_drift_y_velocity: 0.000000
    08:55:50 INFO    opendrift:     sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    08:55:50 INFO    opendrift:     sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    08:55:50 INFO    opendrift:     sea_ice_area_fraction: 0.000000
    08:55:50 INFO    opendrift:     sea_ice_x_velocity: 0.000000
    08:55:50 INFO    opendrift:     sea_ice_y_velocity: 0.000000
    08:55:50 INFO    opendrift:     sea_water_temperature: 10.000000
    08:55:50 INFO    opendrift:     sea_water_salinity: 34.000000
    08:55:50 INFO    opendrift:     sea_floor_depth_below_sea_level: 10000.000000
    08:55:50 INFO    opendrift:     ocean_vertical_diffusivity: 0.020000
    08:55:50 DEBUG   root: Nothing to prepare for /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
    08:55:50 DEBUG   root: Nothing to prepare for /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
    08:55:50 INFO    opendrift: Adding a dynamical landmask with max. priority based on assumed maximum speed of 1.3 m/s. Adding a customised landmask may be faster...
    08:55:53 INFO    opendrift: Using existing reader for land_binary_mask
    08:55:53 INFO    opendrift: All points are in ocean
    08:55:53 INFO    opendrift: Oil-water surface tension is 0.033937 Nm
    08:55:53 INFO    opendrift: 2015-11-16 00:00:00 - step 1 of 48 - 1000 active elements (0 deactivated)
    08:55:53 INFO    opendrift: 2015-11-16 00:30:00 - step 2 of 48 - 1000 active elements (0 deactivated)
    08:55:53 INFO    opendrift: 2015-11-16 01:00:00 - step 3 of 48 - 1000 active elements (0 deactivated)
    08:55:54 INFO    opendrift: 2015-11-16 01:30:00 - step 4 of 48 - 1000 active elements (0 deactivated)
    08:55:54 INFO    opendrift: 2015-11-16 02:00:00 - step 5 of 48 - 1000 active elements (0 deactivated)
    08:55:54 INFO    opendrift: 2015-11-16 02:30:00 - step 6 of 48 - 1000 active elements (0 deactivated)
    08:55:54 INFO    opendrift: 2015-11-16 03:00:00 - step 7 of 48 - 1000 active elements (0 deactivated)
    08:55:54 INFO    opendrift: 2015-11-16 03:30:00 - step 8 of 48 - 1000 active elements (0 deactivated)
    08:55:55 INFO    opendrift: 2015-11-16 04:00:00 - step 9 of 48 - 1000 active elements (0 deactivated)
    08:55:55 INFO    opendrift: 2015-11-16 04:30:00 - step 10 of 48 - 1000 active elements (0 deactivated)
    08:55:55 INFO    opendrift: 2015-11-16 05:00:00 - step 11 of 48 - 1000 active elements (0 deactivated)
    08:55:55 INFO    opendrift: 2015-11-16 05:30:00 - step 12 of 48 - 1000 active elements (0 deactivated)
    08:55:55 INFO    opendrift: 2015-11-16 06:00:00 - step 13 of 48 - 1000 active elements (0 deactivated)
    08:55:56 INFO    opendrift: 2015-11-16 06:30:00 - step 14 of 48 - 1000 active elements (0 deactivated)
    08:55:56 INFO    opendrift: 2015-11-16 07:00:00 - step 15 of 48 - 1000 active elements (0 deactivated)
    08:55:56 INFO    opendrift: 2015-11-16 07:30:00 - step 16 of 48 - 1000 active elements (0 deactivated)
    08:55:56 INFO    opendrift: 2015-11-16 08:00:00 - step 17 of 48 - 1000 active elements (0 deactivated)
    08:55:57 INFO    opendrift: 2015-11-16 08:30:00 - step 18 of 48 - 1000 active elements (0 deactivated)
    08:55:57 INFO    opendrift: 2015-11-16 09:00:00 - step 19 of 48 - 1000 active elements (0 deactivated)
    08:55:57 INFO    opendrift: 2015-11-16 09:30:00 - step 20 of 48 - 1000 active elements (0 deactivated)
    08:55:57 INFO    opendrift: 2015-11-16 10:00:00 - step 21 of 48 - 1000 active elements (0 deactivated)
    08:55:57 INFO    opendrift: 2015-11-16 10:30:00 - step 22 of 48 - 1000 active elements (0 deactivated)
    08:55:58 INFO    opendrift: 2015-11-16 11:00:00 - step 23 of 48 - 1000 active elements (0 deactivated)
    08:55:58 INFO    opendrift: 2015-11-16 11:30:00 - step 24 of 48 - 1000 active elements (0 deactivated)
    08:55:58 INFO    opendrift: 2015-11-16 12:00:00 - step 25 of 48 - 1000 active elements (0 deactivated)
    08:55:58 INFO    opendrift: 2015-11-16 12:30:00 - step 26 of 48 - 1000 active elements (0 deactivated)
    08:55:59 INFO    opendrift: 2015-11-16 13:00:00 - step 27 of 48 - 1000 active elements (0 deactivated)
    08:55:59 INFO    opendrift: 2015-11-16 13:30:00 - step 28 of 48 - 1000 active elements (0 deactivated)
    08:55:59 INFO    opendrift: 2015-11-16 14:00:00 - step 29 of 48 - 1000 active elements (0 deactivated)
    08:56:00 INFO    opendrift: 2015-11-16 14:30:00 - step 30 of 48 - 1000 active elements (0 deactivated)
    08:56:00 INFO    opendrift: 2015-11-16 15:00:00 - step 31 of 48 - 1000 active elements (0 deactivated)
    08:56:00 INFO    opendrift: 2015-11-16 15:30:00 - step 32 of 48 - 999 active elements (1 deactivated)
    08:56:01 INFO    opendrift: 2015-11-16 16:00:00 - step 33 of 48 - 998 active elements (2 deactivated)
    08:56:01 INFO    opendrift: 2015-11-16 16:30:00 - step 34 of 48 - 993 active elements (7 deactivated)
    08:56:01 INFO    opendrift: 2015-11-16 17:00:00 - step 35 of 48 - 990 active elements (10 deactivated)
    08:56:01 INFO    opendrift: 2015-11-16 17:30:00 - step 36 of 48 - 989 active elements (11 deactivated)
    08:56:02 INFO    opendrift: 2015-11-16 18:00:00 - step 37 of 48 - 987 active elements (13 deactivated)
    08:56:02 INFO    opendrift: 2015-11-16 18:30:00 - step 38 of 48 - 983 active elements (17 deactivated)
    08:56:02 INFO    opendrift: 2015-11-16 19:00:00 - step 39 of 48 - 977 active elements (23 deactivated)
    08:56:03 INFO    opendrift: 2015-11-16 19:30:00 - step 40 of 48 - 969 active elements (31 deactivated)
    08:56:03 INFO    opendrift: 2015-11-16 20:00:00 - step 41 of 48 - 942 active elements (58 deactivated)
    08:56:03 INFO    opendrift: 2015-11-16 20:30:00 - step 42 of 48 - 898 active elements (102 deactivated)
    08:56:03 INFO    opendrift: 2015-11-16 21:00:00 - step 43 of 48 - 858 active elements (142 deactivated)
    08:56:03 INFO    opendrift: 2015-11-16 21:30:00 - step 44 of 48 - 815 active elements (185 deactivated)
    08:56:04 INFO    opendrift: 2015-11-16 22:00:00 - step 45 of 48 - 779 active elements (221 deactivated)
    08:56:04 INFO    opendrift: 2015-11-16 22:30:00 - step 46 of 48 - 737 active elements (263 deactivated)
    08:56:04 INFO    opendrift: 2015-11-16 23:00:00 - step 47 of 48 - 671 active elements (329 deactivated)
    08:56:04 INFO    opendrift: 2015-11-16 23:30:00 - step 48 of 48 - 595 active elements (405 deactivated)
    08:56:26 DEBUG   matplotlib.colorbar: locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f0d8efe3670>
    08:56:26 DEBUG   matplotlib.colorbar: Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f0d8efe3670> on colorbar
    08:56:26 DEBUG   matplotlib.colorbar: Setting pcolormesh
    08:56:26 DEBUG   matplotlib.colorbar: locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f0d8efe3670>
    08:56:26 DEBUG   matplotlib.colorbar: Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f0d8efe3670> on colorbar
    08:56:26 DEBUG   matplotlib.colorbar: Setting pcolormesh
    08:56:26 INFO    opendrift: Saving animation to /root/project/docs/source/gallery/animations/example_oil_budget_0.gif...
    08:56:26 INFO    opendrift: Making animated gif...
    08:56:26 INFO    matplotlib.animation: Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
    08:56:26 INFO    matplotlib.animation: figure size in inches has been adjusted from 5.89227911036926 x 11.0 to 5.88 x 11.0
    08:56:26 DEBUG   matplotlib.animation: frame size in pixels is 588 x 1100
    08:56:26 INFO    matplotlib.animation: MovieWriter._run: running command: convert -size 588x1100 -depth 8 -delay 10.0 -loop 0 rgba:- /root/project/docs/source/gallery/animations/example_oil_budget_0.gif
    08:56:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:37 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:38 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:39 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:40 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:41 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:42 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:43 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:44 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:45 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:46 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:47 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:53 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:54 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:55 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:56 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:57 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:58 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:56:59 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:00 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:01 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:02 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:03 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:04 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:04 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:06 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:07 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:08 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:09 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:10 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:11 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:12 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:13 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:14 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:15 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:16 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:17 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.




.. image:: /gallery/animations/example_oil_budget_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  39.376 seconds)


.. _sphx_glr_download_gallery_example_oil_budget.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_oil_budget.py <example_oil_budget.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_oil_budget.ipynb <example_oil_budget.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
