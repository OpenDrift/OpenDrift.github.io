
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/example_trajan.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_trajan.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_trajan.py:


Trajan demo
============

From OpenDrift 2.0, analysis and plotting of results from OpenDrift simulations
will be handled by a new, standalone package: Trajan
https://github.com/OpenDrift/trajan

This example creates a test dataset, and demonstrates its anlysis using Trajan

.. GENERATED FROM PYTHON SOURCE LINES 12-21

.. code-block:: default


    import os
    from datetime import datetime, timedelta
    import matplotlib.pyplot as plt
    import xarray as xr
    import trajan as ta
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.models.openoil import OpenOil








.. GENERATED FROM PYTHON SOURCE LINES 22-23

Create test dataset with OpenDrift

.. GENERATED FROM PYTHON SOURCE LINES 23-41

.. code-block:: default


    o = OpenOil(loglevel=20)

    # Add forcing
    reader_arome = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc')
    reader_norkyst = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc')
    o.add_reader([reader_norkyst, reader_arome])

    # Seeding some particles
    o.seed_elements(lon=4.4, lat=60.1, radius=1000, number=1000,
                    time=reader_arome.start_time)

    # Running model
    o.run(end_time=reader_norkyst.end_time,
          export_variables=['mass_oil'], outfile='openoil.nc')





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    08:23:06 INFO    opendrift.models.basemodel:532: OpenDriftSimulation initialised (version 1.10.4 / v1.10.4-3-gaf77692)
    08:23:06 INFO    opendrift.readers.reader_netCDF_CF_generic:129: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
    08:23:06 INFO    opendrift.readers.reader_netCDF_CF_generic:129: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
    08:23:06 INFO    opendrift.models.openoil.openoil:1573: Oil type not specified, using default: GENERIC BUNKER C
    08:23:06 INFO    opendrift.models.openoil.openoil:1423: setting oil_type to: GENERIC BUNKER C
    08:23:06 INFO    opendrift.models.openoil.adios.dirjs:71: Querying ADIOS database for oil: GENERIC BUNKER C
    08:23:06 INFO    opendrift.models.openoil.openoil:1580: Using density 971.1 and viscosity 0.0005020658058702914 of oiltype GENERIC BUNKER C
    08:23:06 INFO    opendrift.models.basemodel:2575: Fallback values will be used for the following variables which have no readers: 
    08:23:06 INFO    opendrift.models.basemodel:2578:       upward_sea_water_velocity: 0.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       sea_surface_wave_significant_height: 0.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       sea_surface_wave_stokes_drift_x_velocity: 0.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       sea_surface_wave_stokes_drift_y_velocity: 0.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       sea_ice_area_fraction: 0.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       sea_ice_x_velocity: 0.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       sea_ice_y_velocity: 0.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       sea_water_temperature: 10.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       sea_water_salinity: 34.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       sea_floor_depth_below_sea_level: 10000.000000
    08:23:06 INFO    opendrift.models.basemodel:2578:       ocean_vertical_diffusivity: 0.020000
    08:23:06 INFO    opendrift.models.basemodel:2578:       ocean_mixed_layer_thickness: 50.000000
    08:23:06 INFO    opendrift.models.basemodel:2737: Adding a dynamical landmask with max. priority based on assumed maximum speed of 1.3 m/s. Adding a customised landmask may be faster...
    08:23:14 INFO    opendrift.models.basemodel:1690: Using existing reader for land_binary_mask
    08:23:14 INFO    opendrift.models.basemodel:1702: All points are in ocean
    08:23:14 INFO    opendrift.models.openoil.openoil:607: Oil-water surface tension is 0.035282 Nm
    08:23:14 INFO    opendrift.models.basemodel:2866: 2015-11-16 00:00:00 - step 1 of 66 - 1000 active elements (0 deactivated)
    08:23:15 INFO    opendrift.models.basemodel:2866: 2015-11-16 01:00:00 - step 2 of 66 - 1000 active elements (0 deactivated)
    08:23:15 INFO    opendrift.models.basemodel:2866: 2015-11-16 02:00:00 - step 3 of 66 - 1000 active elements (0 deactivated)
    08:23:15 INFO    opendrift.models.basemodel:2866: 2015-11-16 03:00:00 - step 4 of 66 - 1000 active elements (0 deactivated)
    08:23:15 INFO    opendrift.models.basemodel:2866: 2015-11-16 04:00:00 - step 5 of 66 - 1000 active elements (0 deactivated)
    08:23:15 INFO    opendrift.models.basemodel:2866: 2015-11-16 05:00:00 - step 6 of 66 - 1000 active elements (0 deactivated)
    08:23:15 INFO    opendrift.models.basemodel:2866: 2015-11-16 06:00:00 - step 7 of 66 - 1000 active elements (0 deactivated)
    08:23:16 INFO    opendrift.models.basemodel:2866: 2015-11-16 07:00:00 - step 8 of 66 - 1000 active elements (0 deactivated)
    08:23:16 INFO    opendrift.models.basemodel:2866: 2015-11-16 08:00:00 - step 9 of 66 - 1000 active elements (0 deactivated)
    08:23:16 INFO    opendrift.models.basemodel:2866: 2015-11-16 09:00:00 - step 10 of 66 - 1000 active elements (0 deactivated)
    08:23:16 INFO    opendrift.models.basemodel:2866: 2015-11-16 10:00:00 - step 11 of 66 - 1000 active elements (0 deactivated)
    08:23:16 INFO    opendrift.models.basemodel:2866: 2015-11-16 11:00:00 - step 12 of 66 - 1000 active elements (0 deactivated)
    08:23:16 INFO    opendrift.models.basemodel:2866: 2015-11-16 12:00:00 - step 13 of 66 - 1000 active elements (0 deactivated)
    08:23:16 INFO    opendrift.models.basemodel:2866: 2015-11-16 13:00:00 - step 14 of 66 - 1000 active elements (0 deactivated)
    08:23:17 INFO    opendrift.models.basemodel:2866: 2015-11-16 14:00:00 - step 15 of 66 - 1000 active elements (0 deactivated)
    08:23:17 INFO    opendrift.models.basemodel:2866: 2015-11-16 15:00:00 - step 16 of 66 - 1000 active elements (0 deactivated)
    08:23:17 INFO    opendrift.models.basemodel:2866: 2015-11-16 16:00:00 - step 17 of 66 - 1000 active elements (0 deactivated)
    08:23:17 INFO    opendrift.models.basemodel:2866: 2015-11-16 17:00:00 - step 18 of 66 - 1000 active elements (0 deactivated)
    08:23:17 INFO    opendrift.models.basemodel:2866: 2015-11-16 18:00:00 - step 19 of 66 - 1000 active elements (0 deactivated)
    08:23:17 INFO    opendrift.models.basemodel:2866: 2015-11-16 19:00:00 - step 20 of 66 - 1000 active elements (0 deactivated)
    08:23:17 INFO    opendrift.models.basemodel:2866: 2015-11-16 20:00:00 - step 21 of 66 - 1000 active elements (0 deactivated)
    08:23:18 INFO    opendrift.models.basemodel:2866: 2015-11-16 21:00:00 - step 22 of 66 - 1000 active elements (0 deactivated)
    08:23:18 INFO    opendrift.models.basemodel:2866: 2015-11-16 22:00:00 - step 23 of 66 - 1000 active elements (0 deactivated)
    08:23:18 INFO    opendrift.models.basemodel:2866: 2015-11-16 23:00:00 - step 24 of 66 - 1000 active elements (0 deactivated)
    08:23:18 INFO    opendrift.models.basemodel:2866: 2015-11-17 00:00:00 - step 25 of 66 - 1000 active elements (0 deactivated)
    08:23:18 WARNING opendrift.readers.basereader.structured:286: Data block from /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc not large enough to cover element positions within timestep. Buffer size (8) must be increased. See `Variables.set_buffer_size`.
    08:23:18 WARNING opendrift.readers.basereader.structured:286: Data block from /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc not large enough to cover element positions within timestep. Buffer size (4) must be increased. See `Variables.set_buffer_size`.
    08:23:18 INFO    opendrift.models.basemodel:2866: 2015-11-17 01:00:00 - step 26 of 66 - 1000 active elements (0 deactivated)
    08:23:18 WARNING opendrift.readers.basereader.structured:286: Data block from /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc not large enough to cover element positions within timestep. Buffer size (8) must be increased. See `Variables.set_buffer_size`.
    08:23:18 INFO    opendrift.models.basemodel:2866: 2015-11-17 02:00:00 - step 27 of 66 - 1000 active elements (0 deactivated)
    08:23:18 WARNING opendrift.readers.basereader.structured:286: Data block from /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc not large enough to cover element positions within timestep. Buffer size (8) must be increased. See `Variables.set_buffer_size`.
    08:23:18 INFO    opendrift.models.basemodel:2866: 2015-11-17 03:00:00 - step 28 of 66 - 1000 active elements (0 deactivated)
    08:23:18 WARNING opendrift.readers.basereader.structured:286: Data block from /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc not large enough to cover element positions within timestep. Buffer size (8) must be increased. See `Variables.set_buffer_size`.
    08:23:18 WARNING opendrift.readers.basereader.structured:286: Data block from /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc not large enough to cover element positions within timestep. Buffer size (4) must be increased. See `Variables.set_buffer_size`.
    08:23:19 INFO    opendrift.models.basemodel:2866: 2015-11-17 04:00:00 - step 29 of 66 - 997 active elements (3 deactivated)
    08:23:19 INFO    opendrift.models.basemodel:2866: 2015-11-17 05:00:00 - step 30 of 66 - 986 active elements (14 deactivated)
    08:23:19 INFO    opendrift.models.basemodel:2866: 2015-11-17 06:00:00 - step 31 of 66 - 972 active elements (28 deactivated)
    08:23:19 INFO    opendrift.models.basemodel:2866: 2015-11-17 07:00:00 - step 32 of 66 - 952 active elements (48 deactivated)
    08:23:19 INFO    opendrift.models.basemodel:2866: 2015-11-17 08:00:00 - step 33 of 66 - 906 active elements (94 deactivated)
    08:23:19 INFO    opendrift.models.basemodel:2866: 2015-11-17 09:00:00 - step 34 of 66 - 857 active elements (143 deactivated)
    08:23:19 INFO    opendrift.models.basemodel:2866: 2015-11-17 10:00:00 - step 35 of 66 - 810 active elements (190 deactivated)
    08:23:19 WARNING opendrift.readers.basereader.structured:286: Data block from /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc not large enough to cover element positions within timestep. Buffer size (4) must be increased. See `Variables.set_buffer_size`.
    08:23:19 INFO    opendrift.models.basemodel:2866: 2015-11-17 11:00:00 - step 36 of 66 - 770 active elements (230 deactivated)
    08:23:20 INFO    opendrift.models.basemodel:2866: 2015-11-17 12:00:00 - step 37 of 66 - 740 active elements (260 deactivated)
    08:23:20 INFO    opendrift.models.basemodel:2866: 2015-11-17 13:00:00 - step 38 of 66 - 689 active elements (311 deactivated)
    08:23:20 INFO    opendrift.models.basemodel:2866: 2015-11-17 14:00:00 - step 39 of 66 - 547 active elements (453 deactivated)
    08:23:20 INFO    opendrift.models.basemodel:2866: 2015-11-17 15:00:00 - step 40 of 66 - 387 active elements (613 deactivated)
    08:23:20 INFO    opendrift.models.basemodel:2866: 2015-11-17 16:00:00 - step 41 of 66 - 294 active elements (706 deactivated)
    08:23:20 INFO    opendrift.models.basemodel:2866: 2015-11-17 17:00:00 - step 42 of 66 - 262 active elements (738 deactivated)
    08:23:20 INFO    opendrift.models.basemodel:2866: 2015-11-17 18:00:00 - step 43 of 66 - 239 active elements (761 deactivated)
    08:23:20 INFO    opendrift.models.basemodel:2866: 2015-11-17 19:00:00 - step 44 of 66 - 222 active elements (778 deactivated)
    08:23:20 INFO    opendrift.models.basemodel:2866: 2015-11-17 20:00:00 - step 45 of 66 - 210 active elements (790 deactivated)
    08:23:21 INFO    opendrift.models.basemodel:2866: 2015-11-17 21:00:00 - step 46 of 66 - 195 active elements (805 deactivated)
    08:23:21 INFO    opendrift.models.basemodel:2866: 2015-11-17 22:00:00 - step 47 of 66 - 187 active elements (813 deactivated)
    08:23:21 INFO    opendrift.models.basemodel:2866: 2015-11-17 23:00:00 - step 48 of 66 - 178 active elements (822 deactivated)
    08:23:21 INFO    opendrift.models.basemodel:2866: 2015-11-18 00:00:00 - step 49 of 66 - 173 active elements (827 deactivated)
    08:23:21 INFO    opendrift.models.basemodel:2866: 2015-11-18 01:00:00 - step 50 of 66 - 167 active elements (833 deactivated)
    08:23:21 INFO    opendrift.models.basemodel:2866: 2015-11-18 02:00:00 - step 51 of 66 - 164 active elements (836 deactivated)
    08:23:21 INFO    opendrift.models.basemodel:2866: 2015-11-18 03:00:00 - step 52 of 66 - 164 active elements (836 deactivated)
    08:23:21 INFO    opendrift.models.basemodel:2866: 2015-11-18 04:00:00 - step 53 of 66 - 163 active elements (837 deactivated)
    08:23:21 INFO    opendrift.models.basemodel:2866: 2015-11-18 05:00:00 - step 54 of 66 - 163 active elements (837 deactivated)
    08:23:21 INFO    opendrift.models.basemodel:2866: 2015-11-18 06:00:00 - step 55 of 66 - 163 active elements (837 deactivated)
    08:23:21 INFO    opendrift.models.basemodel:2866: 2015-11-18 07:00:00 - step 56 of 66 - 161 active elements (839 deactivated)
    08:23:22 INFO    opendrift.models.basemodel:2866: 2015-11-18 08:00:00 - step 57 of 66 - 158 active elements (842 deactivated)
    08:23:22 INFO    opendrift.models.basemodel:2866: 2015-11-18 09:00:00 - step 58 of 66 - 158 active elements (842 deactivated)
    08:23:22 INFO    opendrift.models.basemodel:2866: 2015-11-18 10:00:00 - step 59 of 66 - 158 active elements (842 deactivated)
    08:23:22 INFO    opendrift.models.basemodel:2866: 2015-11-18 11:00:00 - step 60 of 66 - 156 active elements (844 deactivated)
    08:23:22 INFO    opendrift.models.basemodel:2866: 2015-11-18 12:00:00 - step 61 of 66 - 155 active elements (845 deactivated)
    08:23:22 INFO    opendrift.models.basemodel:2866: 2015-11-18 13:00:00 - step 62 of 66 - 155 active elements (845 deactivated)
    08:23:22 INFO    opendrift.models.basemodel:2866: 2015-11-18 14:00:00 - step 63 of 66 - 153 active elements (847 deactivated)
    08:23:22 INFO    opendrift.models.basemodel:2866: 2015-11-18 15:00:00 - step 64 of 66 - 150 active elements (850 deactivated)
    08:23:22 INFO    opendrift.models.basemodel:2866: 2015-11-18 16:00:00 - step 65 of 66 - 150 active elements (850 deactivated)
    08:23:22 INFO    opendrift.models.basemodel:2866: 2015-11-18 17:00:00 - step 66 of 66 - 150 active elements (850 deactivated)
    08:23:22 INFO    opendrift.export.io_netcdf:111: Wrote 67 steps to file openoil.nc




.. GENERATED FROM PYTHON SOURCE LINES 42-43

Demonstrating analysis and visualisation of the output dataset, independently of OpenDrift code

.. GENERATED FROM PYTHON SOURCE LINES 43-47

.. code-block:: default


    if not os.path.exists('openoil.nc'):
        raise ValueError('Please run create_test_dataset.py first')








.. GENERATED FROM PYTHON SOURCE LINES 48-50

Importing a trajectory dataset from a simulation with OpenDrift
decode_coords is needed so that lon and lat are not interpreted as coordinate variables

.. GENERATED FROM PYTHON SOURCE LINES 50-55

.. code-block:: default

    d = xr.open_dataset('openoil.nc', decode_coords=False)
    # Requirement that status>=0 is needed since non-valid points are not masked in OpenDrift output
    d = d.where(d.status>=0)  # only active particles









.. GENERATED FROM PYTHON SOURCE LINES 56-57

Displaying a basic plot of trajectories

.. GENERATED FROM PYTHON SOURCE LINES 57-58

.. code-block:: default

    d.traj.plot()



.. image-sg:: /gallery/images/sphx_glr_example_trajan_001.png
   :alt: example trajan
   :srcset: /gallery/images/sphx_glr_example_trajan_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 59-60

which is equivalent to

.. GENERATED FROM PYTHON SOURCE LINES 60-62

.. code-block:: default

    ta.plot(d)




.. image-sg:: /gallery/images/sphx_glr_example_trajan_002.png
   :alt: example trajan
   :srcset: /gallery/images/sphx_glr_example_trajan_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 63-64

Creating a plot, but adding customization (title) before saving to file

.. GENERATED FROM PYTHON SOURCE LINES 64-68

.. code-block:: default

    ax, fig, gcrs = ta.plot(d, show=False)
    ax.set_title('Adding custom title')
    fig.savefig('testplot.png')




.. image-sg:: /gallery/images/sphx_glr_example_trajan_003.png
   :alt: Adding custom title
   :srcset: /gallery/images/sphx_glr_example_trajan_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 69-71

Demonstrating how the Xarray Dataset can be modified, allowing for
more flexibility than can be provided through the plotting method of OpenDrift

.. GENERATED FROM PYTHON SOURCE LINES 73-74

Extracting only the first 100 elements, and every 4th output time steps:

.. GENERATED FROM PYTHON SOURCE LINES 74-77

.. code-block:: default

    dsub = d.isel(trajectory=range(0, 100), time=range(0, len(d.time), 4))
    dsub.traj.plot()




.. image-sg:: /gallery/images/sphx_glr_example_trajan_004.png
   :alt: example trajan
   :srcset: /gallery/images/sphx_glr_example_trajan_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 78-79

Plotting a "mean" trajectory

.. GENERATED FROM PYTHON SOURCE LINES 79-82

.. code-block:: default

    dmean = d.mean('trajectory', skipna=True)
    dmean.traj.plot(trajectory_kwargs={'color': 'red', 'linewidth': 5})




.. image-sg:: /gallery/images/sphx_glr_example_trajan_005.png
   :alt: example trajan
   :srcset: /gallery/images/sphx_glr_example_trajan_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 83-84

Using set_up_map only, and plotting trajectories manually

.. GENERATED FROM PYTHON SOURCE LINES 84-91

.. code-block:: default

    ax, fig, gcrs = ta.set_up_map(d, land_color='green')
    ax.plot(d.lon.T, d.lat.T, color='red', alpha=0.01, transform=gcrs)  # Plotting trajectories in red
    ax.plot(dmean.lon.T, dmean.lat.T, color='black', alpha=1, linewidth=5, transform=gcrs)  # Plotting mean trajectory in black
    # Plotting the mean trajectory for a sub period in yellow
    dmean17nov = d.sel(time=slice('2015-11-17', '2015-11-17 12')).mean('trajectory', skipna=True)
    ax.plot(dmean17nov.lon.T, dmean17nov.lat.T, color='yellow', alpha=1, linewidth=5, transform=gcrs)
    plt.show()



.. image-sg:: /gallery/images/sphx_glr_example_trajan_006.png
   :alt: example trajan
   :srcset: /gallery/images/sphx_glr_example_trajan_006.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  35.170 seconds)


.. _sphx_glr_download_gallery_example_trajan.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: example_trajan.py <example_trajan.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: example_trajan.ipynb <example_trajan.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
