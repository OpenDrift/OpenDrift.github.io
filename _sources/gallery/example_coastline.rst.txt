
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/example_coastline.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_coastline.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_coastline.py:


No stranding
=============

.. GENERATED FROM PYTHON SOURCE LINES 6-23

.. code-block:: default


    import numpy as np
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.readers import reader_ROMS_native
    from opendrift.models.oceandrift import OceanDrift

    o = OceanDrift(loglevel=20)  # Set loglevel to 0 for debug information
    o.max_speed = 3

    # This example works better using hourly input from Thredds than the daily data from test folder
    reader_current = reader_netCDF_CF_generic.Reader('https://thredds.met.no/thredds/dodsC/cmems/topaz6/dataset-topaz6-arc-15min-3km-be.ncml')
    #reader_current = reader_ROMS_native.Reader(o.test_data_folder() +
    #    '2Feb2016_Nordic_sigma_3d/Nordic-4km_SLEVELS_avg_00_subset2Feb2016.nc')

    o.add_reader([reader_current])
    o.set_config('general:coastline_action', 'previous')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    14:38:59 INFO    opendrift.models.basemodel: OpenDriftSimulation initialised (version 1.8.3 / v1.8.3-19-g484605f)
    14:38:59 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening dataset: https://thredds.met.no/thredds/dodsC/cmems/topaz6/dataset-topaz6-arc-15min-3km-be.ncml




.. GENERATED FROM PYTHON SOURCE LINES 24-25

Seeding elements on a grid

.. GENERATED FROM PYTHON SOURCE LINES 25-36

.. code-block:: default

    lons = np.linspace(12, 14.5, 30)
    lats = np.linspace(67.5, 68.5, 30)
    lons, lats = np.meshgrid(lons, lats)
    lon = lons.ravel()
    lat = lats.ravel()

    time = reader_current.start_time
    o.seed_elements(lon, lat, radius=0, number=30*30, time=time)

    o.run(steps=24*2, time_step=3600)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    14:39:02 INFO    opendrift.models.basemodel: Fallback values will be used for the following variables which have no readers: 
    14:39:02 INFO    opendrift.models.basemodel:    x_wind: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    y_wind: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    upward_sea_water_velocity: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    ocean_vertical_diffusivity: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    sea_surface_wave_significant_height: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    sea_surface_wave_stokes_drift_x_velocity: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    sea_surface_wave_stokes_drift_y_velocity: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    surface_downward_x_stress: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    surface_downward_y_stress: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    turbulent_kinetic_energy: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    turbulent_generic_length_scale: 0.000000
    14:39:02 INFO    opendrift.models.basemodel:    ocean_mixed_layer_thickness: 50.000000
    14:39:02 INFO    opendrift.models.basemodel: Adding a dynamical landmask with max. priority based on assumed maximum speed of 3 m/s. Adding a customised landmask may be faster...
    14:39:02 WARNING opendrift.readers.reader_global_landmask: using the experimental RoaringLandmask
    14:39:08 WARNING opendrift.readers.reader_global_landmask: skippoly and extent is not supported with RoaringLandmask
    14:39:08 INFO    opendrift.models.basemodel: Using existing reader for land_binary_mask
    14:39:08 INFO    opendrift.models.basemodel: Moving 81 out of 900 points from land to water
    14:39:08 INFO    opendrift.models.basemodel: 2018-01-01 00:00:00 - step 1 of 48 - 900 active elements (0 deactivated)
    14:39:08 INFO    opendrift.models.basemodel: 2018-01-01 01:00:00 - step 2 of 48 - 900 active elements (0 deactivated)
    14:39:09 INFO    opendrift.models.basemodel: 2018-01-01 02:00:00 - step 3 of 48 - 900 active elements (0 deactivated)
    14:39:09 INFO    opendrift.models.basemodel: 2018-01-01 03:00:00 - step 4 of 48 - 900 active elements (0 deactivated)
    14:39:10 INFO    opendrift.models.basemodel: 2018-01-01 04:00:00 - step 5 of 48 - 900 active elements (0 deactivated)
    14:39:10 INFO    opendrift.models.basemodel: 2018-01-01 05:00:00 - step 6 of 48 - 900 active elements (0 deactivated)
    14:39:11 INFO    opendrift.models.basemodel: 2018-01-01 06:00:00 - step 7 of 48 - 900 active elements (0 deactivated)
    14:39:11 INFO    opendrift.models.basemodel: 2018-01-01 07:00:00 - step 8 of 48 - 900 active elements (0 deactivated)
    14:39:12 INFO    opendrift.models.basemodel: 2018-01-01 08:00:00 - step 9 of 48 - 900 active elements (0 deactivated)
    14:39:12 INFO    opendrift.models.basemodel: 2018-01-01 09:00:00 - step 10 of 48 - 900 active elements (0 deactivated)
    14:39:12 INFO    opendrift.models.basemodel: 2018-01-01 10:00:00 - step 11 of 48 - 900 active elements (0 deactivated)
    14:39:13 INFO    opendrift.models.basemodel: 2018-01-01 11:00:00 - step 12 of 48 - 900 active elements (0 deactivated)
    14:39:13 INFO    opendrift.models.basemodel: 2018-01-01 12:00:00 - step 13 of 48 - 900 active elements (0 deactivated)
    14:39:14 INFO    opendrift.models.basemodel: 2018-01-01 13:00:00 - step 14 of 48 - 900 active elements (0 deactivated)
    14:39:14 INFO    opendrift.models.basemodel: 2018-01-01 14:00:00 - step 15 of 48 - 900 active elements (0 deactivated)
    14:39:15 INFO    opendrift.models.basemodel: 2018-01-01 15:00:00 - step 16 of 48 - 900 active elements (0 deactivated)
    14:39:15 INFO    opendrift.models.basemodel: 2018-01-01 16:00:00 - step 17 of 48 - 900 active elements (0 deactivated)
    14:39:16 INFO    opendrift.models.basemodel: 2018-01-01 17:00:00 - step 18 of 48 - 900 active elements (0 deactivated)
    14:39:16 INFO    opendrift.models.basemodel: 2018-01-01 18:00:00 - step 19 of 48 - 900 active elements (0 deactivated)
    14:39:17 INFO    opendrift.models.basemodel: 2018-01-01 19:00:00 - step 20 of 48 - 900 active elements (0 deactivated)
    14:39:17 INFO    opendrift.models.basemodel: 2018-01-01 20:00:00 - step 21 of 48 - 900 active elements (0 deactivated)
    14:39:17 INFO    opendrift.models.basemodel: 2018-01-01 21:00:00 - step 22 of 48 - 900 active elements (0 deactivated)
    14:39:18 INFO    opendrift.models.basemodel: 2018-01-01 22:00:00 - step 23 of 48 - 900 active elements (0 deactivated)
    14:39:18 INFO    opendrift.models.basemodel: 2018-01-01 23:00:00 - step 24 of 48 - 900 active elements (0 deactivated)
    14:39:19 INFO    opendrift.models.basemodel: 2018-01-02 00:00:00 - step 25 of 48 - 900 active elements (0 deactivated)
    14:39:19 INFO    opendrift.models.basemodel: 2018-01-02 01:00:00 - step 26 of 48 - 900 active elements (0 deactivated)
    14:39:20 INFO    opendrift.models.basemodel: 2018-01-02 02:00:00 - step 27 of 48 - 900 active elements (0 deactivated)
    14:39:20 INFO    opendrift.models.basemodel: 2018-01-02 03:00:00 - step 28 of 48 - 900 active elements (0 deactivated)
    14:39:20 INFO    opendrift.models.basemodel: 2018-01-02 04:00:00 - step 29 of 48 - 900 active elements (0 deactivated)
    14:39:21 INFO    opendrift.models.basemodel: 2018-01-02 05:00:00 - step 30 of 48 - 900 active elements (0 deactivated)
    14:39:21 INFO    opendrift.models.basemodel: 2018-01-02 06:00:00 - step 31 of 48 - 900 active elements (0 deactivated)
    14:39:22 INFO    opendrift.models.basemodel: 2018-01-02 07:00:00 - step 32 of 48 - 900 active elements (0 deactivated)
    14:39:23 INFO    opendrift.models.basemodel: 2018-01-02 08:00:00 - step 33 of 48 - 900 active elements (0 deactivated)
    14:39:23 INFO    opendrift.models.basemodel: 2018-01-02 09:00:00 - step 34 of 48 - 900 active elements (0 deactivated)
    14:39:23 INFO    opendrift.models.basemodel: 2018-01-02 10:00:00 - step 35 of 48 - 900 active elements (0 deactivated)
    14:39:24 INFO    opendrift.models.basemodel: 2018-01-02 11:00:00 - step 36 of 48 - 900 active elements (0 deactivated)
    14:39:24 INFO    opendrift.models.basemodel: 2018-01-02 12:00:00 - step 37 of 48 - 900 active elements (0 deactivated)
    14:39:25 INFO    opendrift.models.basemodel: 2018-01-02 13:00:00 - step 38 of 48 - 900 active elements (0 deactivated)
    14:39:25 INFO    opendrift.models.basemodel: 2018-01-02 14:00:00 - step 39 of 48 - 900 active elements (0 deactivated)
    14:39:26 INFO    opendrift.models.basemodel: 2018-01-02 15:00:00 - step 40 of 48 - 900 active elements (0 deactivated)
    14:39:26 INFO    opendrift.models.basemodel: 2018-01-02 16:00:00 - step 41 of 48 - 900 active elements (0 deactivated)
    14:39:27 INFO    opendrift.models.basemodel: 2018-01-02 17:00:00 - step 42 of 48 - 900 active elements (0 deactivated)
    14:39:27 INFO    opendrift.models.basemodel: 2018-01-02 18:00:00 - step 43 of 48 - 900 active elements (0 deactivated)
    14:39:27 INFO    opendrift.models.basemodel: 2018-01-02 19:00:00 - step 44 of 48 - 900 active elements (0 deactivated)
    14:39:28 INFO    opendrift.models.basemodel: 2018-01-02 20:00:00 - step 45 of 48 - 900 active elements (0 deactivated)
    14:39:28 INFO    opendrift.models.basemodel: 2018-01-02 21:00:00 - step 46 of 48 - 900 active elements (0 deactivated)
    14:39:29 INFO    opendrift.models.basemodel: 2018-01-02 22:00:00 - step 47 of 48 - 900 active elements (0 deactivated)
    14:39:29 INFO    opendrift.models.basemodel: 2018-01-02 23:00:00 - step 48 of 48 - 900 active elements (0 deactivated)




.. GENERATED FROM PYTHON SOURCE LINES 37-38

Print and plot results

.. GENERATED FROM PYTHON SOURCE LINES 38-43

.. code-block:: default

    print(o)
    o.plot()
    #o.plot(background=['x_sea_water_velocity', 'y_sea_water_velocity'])
    o.animation()




.. image-sg:: /gallery/images/sphx_glr_example_coastline_001.png
   :alt: OpenDrift - OceanDrift 2018-01-01 00:00 to 2018-01-03 00:00 UTC (49 steps)
   :srcset: /gallery/images/sphx_glr_example_coastline_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    https://thredds.met.no/thredds/dodsC/cmems/topaz6/dataset-topaz6-arc-15min-3km-be.ncml
     0:00:20.8  total
     0:00:00.0  preparing
     0:00:20.0  reading
     0:00:00.0  interpolation
     0:00:00.0  interpolation_time
     0:00:00.0  masking
     0:00:00.7  rotating vectors
    --------------------
    global_landmask
     0:00:00.0  total
     0:00:00.0  preparing
     0:00:00.0  reading
     0:00:00.0  masking
    --------------------
    Performance:
       30.9 total time
        2.9 configuration
        6.2 preparing main loop
          6.1 making dynamical landmask
          0.0 moving elements to ocean
         21.1 readers
            0.0 global_landmask
            0.1 postprocessing
       21.7 main loop
           20.8 https://thredds.met.no/thredds/dodsC/cmems/topaz6/dataset-topaz6-arc-15min-3km-be.ncml
          0.0 updating elements
        0.0 cleaning up
    --------------------
    ===========================
    Model:  OceanDrift     (OpenDrift version 1.8.3)
            900 active Lagrangian3DArray particles  (0 deactivated, 0 scheduled)
    -------------------
    Environment variables:
      -----
      sea_floor_depth_below_sea_level
      x_sea_water_velocity
      y_sea_water_velocity
         1) https://thredds.met.no/thredds/dodsC/cmems/topaz6/dataset-topaz6-arc-15min-3km-be.ncml
      -----
      land_binary_mask
         1) global_landmask
      -----
    Readers not added for the following variables:
      ocean_mixed_layer_thickness
      ocean_vertical_diffusivity
      sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment
      sea_surface_wave_period_at_variance_spectral_density_maximum
      sea_surface_wave_significant_height
      sea_surface_wave_stokes_drift_x_velocity
      sea_surface_wave_stokes_drift_y_velocity
      surface_downward_x_stress
      surface_downward_y_stress
      turbulent_generic_length_scale
      turbulent_kinetic_energy
      upward_sea_water_velocity
      x_wind
      y_wind

    Time:
            Start: 2018-01-01 00:00:00
            Present: 2018-01-03 00:00:00
            Calculation steps: 48 * 1:00:00 - total time: 2 days, 0:00:00
            Output steps: 49 * 1:00:00
    ===========================

    /opt/conda/envs/opendrift/lib/python3.9/site-packages/shapefile.py:391: UserWarning: Shapefile shape has invalid polygon: no exterior rings found (must have clockwise orientation); interpreting holes as exteriors.
      warnings.warn('Shapefile shape has invalid polygon: no exterior rings found (must have clockwise orientation); interpreting holes as exteriors.')
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    14:39:40 INFO    opendrift.models.basemodel: Saving animation to /root/project/docs/source/gallery/animations/example_coastline_0.gif...
    14:39:47 INFO    opendrift.models.basemodel: Time to make animation: 0:00:07.165088




.. GENERATED FROM PYTHON SOURCE LINES 44-45

.. image:: /gallery/animations/example_coastline_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  49.254 seconds)


.. _sphx_glr_download_gallery_example_coastline.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_coastline.py <example_coastline.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_coastline.ipynb <example_coastline.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
