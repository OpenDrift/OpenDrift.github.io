.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_example_coastline.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_coastline.py:


No stranding
=============


.. code-block:: default


    import numpy as np
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.readers import reader_ROMS_native
    from opendrift.models.oceandrift import OceanDrift

    o = OceanDrift(loglevel=0)  # Set loglevel to 0 for debug information
    o.max_speed = 3

    # This example works better using hourly input from Thredds than the daily data from test folder
    reader_nordic = reader_netCDF_CF_generic.Reader('https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be')
    #reader_nordic = reader_ROMS_native.Reader(o.test_data_folder() +
    #    '2Feb2016_Nordic_sigma_3d/Nordic-4km_SLEVELS_avg_00_subset2Feb2016.nc')

    o.add_reader([reader_nordic])
    o.set_config('general:coastline_action', 'previous')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    13:24:07 INFO: OpenDriftSimulation initialised (version 1.2.0)
    13:24:07 INFO: Opening dataset: https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
    13:24:07 INFO: Opening file with Dataset
    13:24:08 DEBUG: Finding coordinate variables.
    13:24:08 DEBUG: Parsing variable: X
    13:24:08 DEBUG: Parsing variable: Y
    13:24:08 DEBUG: Parsing variable: depth
    13:24:08 DEBUG: Parsing variable: forecast_reference_time
    13:24:08 DEBUG: Parsing variable: hc
    13:24:08 DEBUG: Parsing variable: polar_stereographic
    13:24:08 DEBUG: Parsing CF grid mapping dictionary: {'grid_mapping_name': 'polar_stereographic', 'scale_factor_at_projection_origin': 0.9330127018922193, 'straight_vertical_longitude_from_pole': 58.0, 'latitude_of_projection_origin': 90.0, 'earth_radius': 6371000.0, 'proj4': '+proj=stere +lat_0=90 +lon_0=58 +lat_ts=60 +units=m +a=6.371e+06 +e=0 +no_defs'}
    13:24:08 DEBUG: Parsing variable: time
    13:24:09 DEBUG: Parsing variable: h
    13:24:09 DEBUG: Parsing variable: latitude
    13:24:10 DEBUG: Parsing variable: longitude
    13:24:10 DEBUG: Parsing variable: mask
    13:24:10 DEBUG: Parsing variable: aice
    13:24:10 DEBUG: Parsing variable: hice
    13:24:10 DEBUG: Parsing variable: salinity
    13:24:10 DEBUG: Parsing variable: temperature
    13:24:10 DEBUG: Parsing variable: u
    13:24:10 DEBUG: Parsing variable: ubar
    13:24:10 DEBUG: Parsing variable: v
    13:24:10 DEBUG: Parsing variable: vbar
    13:24:10 DEBUG: Parsing variable: zeta
    13:24:10 DEBUG: Setting buffer size 7 for reader https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be, assuming a maximum average speed of 5 m/s.
    13:24:10 DEBUG: Adding new variable mappings
    13:24:10 DEBUG: Adding method!
    13:24:10 DEBUG: Setting buffer size 5 for reader https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be, assuming a maximum average speed of 3 m/s.
    13:24:10 DEBUG: Calculation SRS set to: +proj=stere +lat_0=90 +lat_ts=60 +lon_0=58 +x_0=0 +y_0=0 +a=6371000 +rf=298.257223563 +units=m +no_defs
    13:24:10 DEBUG: Using srs for common grid: +proj=stere +lat_0=90 +lon_0=58 +lat_ts=60 +units=m +a=6.371e+06 +e=0 +no_defs
    13:24:10 DEBUG: Added reader https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be




Seeding elements on a grid


.. code-block:: default

    lons = np.linspace(12, 14.5, 30)
    lats = np.linspace(67.5, 68.5, 30)
    lons, lats = np.meshgrid(lons, lats)
    lon = lons.ravel()
    lat = lats.ravel()

    time = reader_nordic.start_time
    o.seed_elements(lon, lat, radius=0, number=30*30, time=time)

    o.run(steps=24*2, time_step=3600)








Print and plot results


.. code-block:: default

    print(o)
    o.plot()
    #o.plot(background=['x_sea_water_velocity', 'y_sea_water_velocity'])
    o.animation()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:00:18.6  total
     0:00:00.0  preparing
     0:00:16.4  reading
     0:00:00.2  interpolation
     0:00:00.0  interpolation_time
     0:00:01.8  rotating vectors
     0:00:00.0  masking
    --------------------
    global_landmask
     0:00:00.5  total
     0:00:00.0  preparing
     0:00:00.4  reading
     0:00:00.0  interpolation_time
     0:00:00.0  masking
    --------------------
    Performance:
       25.7 total time
        3.1 configuration
        3.2 preparing main loop
          2.8 making dynamical landmask
          0.4 moving elements to ocean
         19.3 readers
            0.5 global_landmask
            0.0 postprocessing
       19.2 main loop
           18.6 https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
          0.1 updating elements
        0.0 cleaning up
    --------------------
    ===========================
    Model:  OceanDrift     (OpenDrift version 1.2.0)
            900 active PassiveTracer particles  (0 deactivated, 0 scheduled)
    Projection: +proj=stere +lat_0=90 +lon_0=58 +lat_ts=60 +units=m +a=6.371e+06 +e=0 +no_defs
    -------------------
    Environment variables:
      -----
      x_sea_water_velocity
      y_sea_water_velocity
         1) https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
      -----
      land_binary_mask
         1) global_landmask
      -----
    Readers not added for the following variables:
      x_wind
      y_wind

    Time:
            Start: 2016-09-19 00:30:00
            Present: 2016-09-21 00:30:00
            Calculation steps: 48 * 1:00:00 - total time: 2 days, 0:00:00
            Output steps: 49 * 1:00:00
    ===========================

    /root/project/opendrift/models/basemodel.py:3260: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()
    /root/project/opendrift/models/basemodel.py:2841: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()




.. image:: /gallery/animations/example_coastline_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  57.514 seconds)


.. _sphx_glr_download_gallery_example_coastline.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_coastline.py <example_coastline.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_coastline.ipynb <example_coastline.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
