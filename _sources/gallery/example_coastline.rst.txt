.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_coastline.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_coastline.py:


No stranding
=============


.. code-block:: default


    import numpy as np
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.readers import reader_ROMS_native
    from opendrift.models.oceandrift import OceanDrift

    o = OceanDrift(loglevel=20)  # Set loglevel to 0 for debug information
    o.max_speed = 3

    # This example works better using hourly input from Thredds than the daily data from test folder
    reader_nordic = reader_netCDF_CF_generic.Reader('https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be')
    #reader_nordic = reader_ROMS_native.Reader(o.test_data_folder() +
    #    '2Feb2016_Nordic_sigma_3d/Nordic-4km_SLEVELS_avg_00_subset2Feb2016.nc')

    o.add_reader([reader_nordic])
    o.set_config('general:coastline_action', 'previous')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    09:14:46 INFO    opendrift: OpenDriftSimulation initialised (version 1.4.2)
    09:14:46 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening dataset: https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
    09:14:46 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening file with Dataset




Seeding elements on a grid


.. code-block:: default

    lons = np.linspace(12, 14.5, 30)
    lats = np.linspace(67.5, 68.5, 30)
    lons, lats = np.meshgrid(lons, lats)
    lon = lons.ravel()
    lat = lats.ravel()

    time = reader_nordic.start_time
    o.seed_elements(lon, lat, radius=0, number=30*30, time=time)

    o.run(steps=24*2, time_step=3600)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    09:14:51 INFO    opendrift: Fallback values will be used for the following variables which have no readers: 
    09:14:51 INFO    opendrift:     x_wind: 0.000000
    09:14:51 INFO    opendrift:     y_wind: 0.000000
    09:14:51 INFO    opendrift:     upward_sea_water_velocity: 0.000000
    09:14:51 INFO    opendrift:     ocean_vertical_diffusivity: 0.000000
    09:14:51 INFO    opendrift:     sea_surface_wave_significant_height: 0.000000
    09:14:51 INFO    opendrift:     sea_surface_wave_stokes_drift_x_velocity: 0.000000
    09:14:51 INFO    opendrift:     sea_surface_wave_stokes_drift_y_velocity: 0.000000
    09:14:51 INFO    opendrift:     sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    09:14:51 INFO    opendrift:     sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    09:14:51 INFO    opendrift:     surface_downward_x_stress: 0.000000
    09:14:51 INFO    opendrift:     surface_downward_y_stress: 0.000000
    09:14:51 INFO    opendrift:     turbulent_kinetic_energy: 0.000000
    09:14:51 INFO    opendrift:     turbulent_generic_length_scale: 0.000000
    09:14:51 DEBUG   root: Nothing to prepare for https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
    09:14:51 INFO    opendrift: Adding a dynamical landmask with max. priority based on assumed maximum speed of 3 m/s. Adding a customised landmask may be faster...
    09:14:53 INFO    opendrift: Using existing reader for land_binary_mask
    09:14:54 INFO    opendrift: Moving 81 out of 900 points from land to water
    09:14:54 INFO    opendrift: 2016-09-19 00:30:00 - step 1 of 48 - 900 active elements (0 deactivated)
    09:14:55 INFO    opendrift: 2016-09-19 01:30:00 - step 2 of 48 - 900 active elements (0 deactivated)
    09:14:55 INFO    opendrift: 2016-09-19 02:30:00 - step 3 of 48 - 900 active elements (0 deactivated)
    09:14:56 INFO    opendrift: 2016-09-19 03:30:00 - step 4 of 48 - 900 active elements (0 deactivated)
    09:14:56 INFO    opendrift: 2016-09-19 04:30:00 - step 5 of 48 - 900 active elements (0 deactivated)
    09:14:57 INFO    opendrift: 2016-09-19 05:30:00 - step 6 of 48 - 900 active elements (0 deactivated)
    09:14:57 INFO    opendrift: 2016-09-19 06:30:00 - step 7 of 48 - 900 active elements (0 deactivated)
    09:14:58 INFO    opendrift: 2016-09-19 07:30:00 - step 8 of 48 - 900 active elements (0 deactivated)
    09:14:58 INFO    opendrift: 2016-09-19 08:30:00 - step 9 of 48 - 900 active elements (0 deactivated)
    09:14:59 INFO    opendrift: 2016-09-19 09:30:00 - step 10 of 48 - 900 active elements (0 deactivated)
    09:14:59 INFO    opendrift: 2016-09-19 10:30:00 - step 11 of 48 - 900 active elements (0 deactivated)
    09:15:00 INFO    opendrift: 2016-09-19 11:30:00 - step 12 of 48 - 900 active elements (0 deactivated)
    09:15:00 INFO    opendrift: 2016-09-19 12:30:00 - step 13 of 48 - 900 active elements (0 deactivated)
    09:15:01 INFO    opendrift: 2016-09-19 13:30:00 - step 14 of 48 - 900 active elements (0 deactivated)
    09:15:01 INFO    opendrift: 2016-09-19 14:30:00 - step 15 of 48 - 900 active elements (0 deactivated)
    09:15:02 INFO    opendrift: 2016-09-19 15:30:00 - step 16 of 48 - 900 active elements (0 deactivated)
    09:15:02 INFO    opendrift: 2016-09-19 16:30:00 - step 17 of 48 - 900 active elements (0 deactivated)
    09:15:03 INFO    opendrift: 2016-09-19 17:30:00 - step 18 of 48 - 900 active elements (0 deactivated)
    09:15:03 INFO    opendrift: 2016-09-19 18:30:00 - step 19 of 48 - 900 active elements (0 deactivated)
    09:15:04 INFO    opendrift: 2016-09-19 19:30:00 - step 20 of 48 - 900 active elements (0 deactivated)
    09:15:04 INFO    opendrift: 2016-09-19 20:30:00 - step 21 of 48 - 900 active elements (0 deactivated)
    09:15:05 INFO    opendrift: 2016-09-19 21:30:00 - step 22 of 48 - 900 active elements (0 deactivated)
    09:15:05 INFO    opendrift: 2016-09-19 22:30:00 - step 23 of 48 - 900 active elements (0 deactivated)
    09:15:06 INFO    opendrift: 2016-09-19 23:30:00 - step 24 of 48 - 900 active elements (0 deactivated)
    09:15:06 INFO    opendrift: 2016-09-20 00:30:00 - step 25 of 48 - 900 active elements (0 deactivated)
    09:15:07 INFO    opendrift: 2016-09-20 01:30:00 - step 26 of 48 - 900 active elements (0 deactivated)
    09:15:07 INFO    opendrift: 2016-09-20 02:30:00 - step 27 of 48 - 900 active elements (0 deactivated)
    09:15:08 INFO    opendrift: 2016-09-20 03:30:00 - step 28 of 48 - 900 active elements (0 deactivated)
    09:15:08 INFO    opendrift: 2016-09-20 04:30:00 - step 29 of 48 - 900 active elements (0 deactivated)
    09:15:09 INFO    opendrift: 2016-09-20 05:30:00 - step 30 of 48 - 900 active elements (0 deactivated)
    09:15:09 INFO    opendrift: 2016-09-20 06:30:00 - step 31 of 48 - 900 active elements (0 deactivated)
    09:15:10 INFO    opendrift: 2016-09-20 07:30:00 - step 32 of 48 - 900 active elements (0 deactivated)
    09:15:10 INFO    opendrift: 2016-09-20 08:30:00 - step 33 of 48 - 900 active elements (0 deactivated)
    09:15:11 INFO    opendrift: 2016-09-20 09:30:00 - step 34 of 48 - 900 active elements (0 deactivated)
    09:15:11 INFO    opendrift: 2016-09-20 10:30:00 - step 35 of 48 - 900 active elements (0 deactivated)
    09:15:12 INFO    opendrift: 2016-09-20 11:30:00 - step 36 of 48 - 900 active elements (0 deactivated)
    09:15:12 INFO    opendrift: 2016-09-20 12:30:00 - step 37 of 48 - 900 active elements (0 deactivated)
    09:15:13 INFO    opendrift: 2016-09-20 13:30:00 - step 38 of 48 - 900 active elements (0 deactivated)
    09:15:13 INFO    opendrift: 2016-09-20 14:30:00 - step 39 of 48 - 900 active elements (0 deactivated)
    09:15:14 INFO    opendrift: 2016-09-20 15:30:00 - step 40 of 48 - 900 active elements (0 deactivated)
    09:15:14 INFO    opendrift: 2016-09-20 16:30:00 - step 41 of 48 - 900 active elements (0 deactivated)
    09:15:15 INFO    opendrift: 2016-09-20 17:30:00 - step 42 of 48 - 900 active elements (0 deactivated)
    09:15:15 INFO    opendrift: 2016-09-20 18:30:00 - step 43 of 48 - 900 active elements (0 deactivated)
    09:15:16 INFO    opendrift: 2016-09-20 19:30:00 - step 44 of 48 - 900 active elements (0 deactivated)
    09:15:16 INFO    opendrift: 2016-09-20 20:30:00 - step 45 of 48 - 900 active elements (0 deactivated)
    09:15:17 INFO    opendrift: 2016-09-20 21:30:00 - step 46 of 48 - 900 active elements (0 deactivated)
    09:15:17 INFO    opendrift: 2016-09-20 22:30:00 - step 47 of 48 - 900 active elements (0 deactivated)
    09:15:18 INFO    opendrift: 2016-09-20 23:30:00 - step 48 of 48 - 900 active elements (0 deactivated)




Print and plot results


.. code-block:: default

    print(o)
    o.plot()
    #o.plot(background=['x_sea_water_velocity', 'y_sea_water_velocity'])
    o.animation()




.. image:: /gallery/images/sphx_glr_example_coastline_001.png
    :alt: OpenDrift - OceanDrift 2016-09-19 00:30 to 2016-09-21 00:30 UTC (49 steps)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:14:26.4  total time
     0:00:28.9  configuration
     0:01:05.3  preparing main loop
     0:01:00.2  preparing main loop:making dynamical landmask
     0:00:02.7  preparing main loop:moving elements to ocean
     0:11:50.6  main loop:readers
     0:00:07.3  main loop:readers:global_landmask
     0:10:27.7  total
     0:00:00.5  preparing
     0:08:40.5  reading
     0:00:00.1  masking
     0:00:19.8  main loop:readers:postprocessing
     0:12:54.3  main loop
     0:02:29.3  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
     0:00:41.3  interpolation
     0:00:00.4  interpolation_time
     0:01:03.2  rotating vectors
     0:01:11.1  main loop:updating elements
     0:00:01.4  cleaning up
     0:00:01.3  main loop:readers:roms native
     0:00:46.8  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:00:53.6  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
     0:00:17.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
     0:00:00.6  main loop:readers:/root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
     0:00:02.6  main loop:readers:double_gyre
     0:00:00.0  main loop:readers:oscillating_reader
     0:00:01.6  main loop:readers:reader_constant_2d
     0:03:44.5  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/barents25km_agg
     0:00:15.9  main loop:updating elements:oil weathering
     0:00:04.2  main loop:updating elements:oil weathering:updating viscosities
     0:00:11.4  main loop:updating elements:oil weathering:updating densities
     0:00:09.2  main loop:updating elements:vertical mixing
     0:00:19.0  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
     0:00:37.3  main loop:readers:ArtificialOceanEddy
     0:00:03.1  open dataset
     0:00:00.1  build index
     0:01:06.7  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/metusers/knutfd/thredds/netcdf_unstructured_samples/AkvaplanNiva_sample_lonlat_fixed.nc
     0:00:01.9  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
     0:00:00.0  main loop:updating elements:oil weathering:emulsification
     0:00:00.0  main loop:updating elements:oil weathering:dispersion
     0:00:00.8  main loop:readers:reader_current_from_observation
     0:00:01.3  main loop:readers:WIND
     0:00:00.4  main loop:readers:constant_reader
     0:00:00.0  main loop:updating elements:oil weathering:evaporation
    --------------------
    global_landmask
     0:14:26.4  total time
     0:00:28.9  configuration
     0:01:05.3  preparing main loop
     0:01:00.2  preparing main loop:making dynamical landmask
     0:00:02.7  preparing main loop:moving elements to ocean
     0:11:50.6  main loop:readers
     0:00:07.3  main loop:readers:global_landmask
     0:10:27.7  total
     0:00:00.5  preparing
     0:08:40.5  reading
     0:00:00.1  masking
     0:00:19.8  main loop:readers:postprocessing
     0:12:54.3  main loop
     0:02:29.3  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
     0:00:41.3  interpolation
     0:00:00.4  interpolation_time
     0:01:03.2  rotating vectors
     0:01:11.1  main loop:updating elements
     0:00:01.4  cleaning up
     0:00:01.3  main loop:readers:roms native
     0:00:46.8  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:00:53.6  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
     0:00:17.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
     0:00:00.6  main loop:readers:/root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
     0:00:02.6  main loop:readers:double_gyre
     0:00:00.0  main loop:readers:oscillating_reader
     0:00:01.6  main loop:readers:reader_constant_2d
     0:03:44.5  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/barents25km_agg
     0:00:15.9  main loop:updating elements:oil weathering
     0:00:04.2  main loop:updating elements:oil weathering:updating viscosities
     0:00:11.4  main loop:updating elements:oil weathering:updating densities
     0:00:09.2  main loop:updating elements:vertical mixing
     0:00:19.0  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
     0:00:37.3  main loop:readers:ArtificialOceanEddy
     0:00:03.1  open dataset
     0:00:00.1  build index
     0:01:06.7  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/metusers/knutfd/thredds/netcdf_unstructured_samples/AkvaplanNiva_sample_lonlat_fixed.nc
     0:00:01.9  main loop:readers:/root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
     0:00:00.0  main loop:updating elements:oil weathering:emulsification
     0:00:00.0  main loop:updating elements:oil weathering:dispersion
     0:00:00.8  main loop:readers:reader_current_from_observation
     0:00:01.3  main loop:readers:WIND
     0:00:00.4  main loop:readers:constant_reader
     0:00:00.0  main loop:updating elements:oil weathering:evaporation
    --------------------
    Performance:
    14:26.4 total time
       28.9 configuration
     1:05.3 preparing main loop
       1:00.2 making dynamical landmask
          2.7 moving elements to ocean
      11:50.6 readers
            7.3 global_landmask
    10:27.7 total
        0.5 preparing
     8:40.5 reading
        0.1 masking
           19.8 postprocessing
    12:54.3 main loop
         2:29.3 https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
       41.3 interpolation
        0.4 interpolation_time
     1:03.2 rotating vectors
       1:11.1 updating elements
        1.4 cleaning up
            1.3 roms native
           46.8 https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
           53.6 https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
           17.0 https://thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
            0.6 /root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
            2.6 double_gyre
            0.0 oscillating_reader
            1.6 reader_constant_2d
         3:44.5 https://thredds.met.no/thredds/dodsC/barents25km_agg
           15.9 oil weathering
              4.2 updating viscosities
             11.4 updating densities
            9.2 vertical mixing
           19.0 /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
           37.3 ArtificialOceanEddy
        3.1 open dataset
        0.1 build index
         1:06.7 https://thredds.met.no/thredds/dodsC/metusers/knutfd/thredds/netcdf_unstructured_samples/AkvaplanNiva_sample_lonlat_fixed.nc
            1.9 /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
              0.0 emulsification
              0.0 dispersion
            0.8 reader_current_from_observation
            1.3 WIND
            0.4 constant_reader
              0.0 evaporation
    --------------------
    ===========================
    Model:  OceanDrift     (OpenDrift version 1.4.2)
            900 active Lagrangian3DArray particles  (0 deactivated, 0 scheduled)
    Projection: +proj=stere +lat_0=90 +lon_0=58 +lat_ts=60 +units=m +a=6.371e+06 +e=0 +no_defs
    -------------------
    Environment variables:
      -----
      sea_floor_depth_below_sea_level
      x_sea_water_velocity
      y_sea_water_velocity
         1) https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
      -----
      land_binary_mask
         1) global_landmask
      -----
    Readers not added for the following variables:
      ocean_vertical_diffusivity
      sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment
      sea_surface_wave_period_at_variance_spectral_density_maximum
      sea_surface_wave_significant_height
      sea_surface_wave_stokes_drift_x_velocity
      sea_surface_wave_stokes_drift_y_velocity
      surface_downward_x_stress
      surface_downward_y_stress
      turbulent_generic_length_scale
      turbulent_kinetic_energy
      upward_sea_water_velocity
      x_wind
      y_wind

    Time:
            Start: 2016-09-19 00:30:00
            Present: 2016-09-21 00:30:00
            Calculation steps: 48 * 1:00:00 - total time: 2 days, 0:00:00
            Output steps: 49 * 1:00:00
    ===========================

    09:15:56 INFO    opendrift: Saving animation to /root/project/docs/source/gallery/animations/example_coastline_0.gif...
    09:15:56 INFO    opendrift: Making animated gif...
    09:15:56 INFO    matplotlib.animation: Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
    09:15:56 INFO    matplotlib.animation: figure size in inches has been adjusted from 8.421516581712007 x 11.0 to 8.42 x 11.0
    09:15:56 DEBUG   matplotlib.animation: frame size in pixels is 842 x 1100
    09:15:56 INFO    matplotlib.animation: MovieWriter._run: running command: convert -size 842x1100 -depth 8 -delay 10.0 -loop 0 rgba:- /root/project/docs/source/gallery/animations/example_coastline_0.gif
    09:15:57 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:15:58 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:15:59 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:15:59 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:00 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:01 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:02 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:03 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:04 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:05 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:06 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:06 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:07 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:08 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:09 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:10 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:11 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:12 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:12 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:13 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:14 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:15 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:16 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:17 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:21 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:23 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:24 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:25 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:26 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:27 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:35 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:36 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:37 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:38 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    09:16:39 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.




.. image:: /gallery/animations/example_coastline_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  58.853 seconds)


.. _sphx_glr_download_gallery_example_coastline.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_coastline.py <example_coastline.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_coastline.ipynb <example_coastline.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
