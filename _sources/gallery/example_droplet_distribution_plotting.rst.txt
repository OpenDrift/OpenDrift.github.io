.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_example_droplet_distribution_plotting.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_droplet_distribution_plotting.py:


Droplet distribution (plotting)
==================================

Plotting different droplet size distributions used in Opendrift (see openoil3D.py script)


.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt
    from datetime import datetime, timedelta
    from opendrift.models.openoil3D import OpenOil3D
    oiltype = 'VILJE 2009'








Delvigne & Sweeney (1988) droplet spectrum


.. code-block:: default

    o = OpenOil3D(loglevel=20, weathering_model='noaa')
    o.fallback_values['land_binary_mask'] = 0
    o.fallback_values['x_sea_water_velocity'] = -.2
    o.fallback_values['y_sea_water_velocity'] = 0
    o.fallback_values['x_wind'] = 12
    o.fallback_values['y_wind'] = 0
    o.fallback_values['sea_surface_wave_stokes_drift_x_velocity'] = .3
    o.fallback_values['sea_surface_wave_stokes_drift_y_velocity'] = 0
    o.set_config('wave_entrainment:droplet_size_distribution', 'Exponential')
    o.set_config('processes:evaporation', False)
    o.set_config('processes:dispersion', False)
    o.set_config('turbulentmixing:droplet_diameter_min_wavebreaking', 1e-6)
    o.set_config('turbulentmixing:droplet_diameter_max_wavebreaking', 1e-3)
    o.set_config('turbulentmixing:droplet_size_exponent', -2.3)
    o.seed_elements(lon=4, lat=60, time=datetime.now(), number=1000, radius=100,
                    z=0, oiltype=oiltype)
    o.run(duration=timedelta(hours=1), time_step=3600)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    10:39:19 INFO: OpenDriftSimulation initialised (version 1.2.0)
    10:39:19 INFO: Using density 845.3770636541037 and viscosity 0.00015931193316731434 of oiltype VILJE 2009
    10:39:20 INFO: Config validation OK
    10:39:20 INFO: Setting SRS to latlong, since not defined before.
    10:39:20 INFO: Fallback values will be used for the following variables which have no readers: 
    10:39:20 INFO:  x_sea_water_velocity: -0.200000
    10:39:20 INFO:  y_sea_water_velocity: 0.000000
    10:39:20 INFO:  sea_surface_wave_significant_height: 0.000000
    10:39:20 INFO:  sea_surface_wave_stokes_drift_x_velocity: 0.300000
    10:39:20 INFO:  sea_surface_wave_stokes_drift_y_velocity: 0.000000
    10:39:20 INFO:  sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    10:39:20 INFO:  sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    10:39:20 INFO:  sea_ice_area_fraction: 0.000000
    10:39:20 INFO:  x_wind: 12.000000
    10:39:20 INFO:  y_wind: 0.000000
    10:39:20 INFO:  sea_floor_depth_below_sea_level: 10000.000000
    10:39:20 INFO:  ocean_vertical_diffusivity: 0.020000
    10:39:20 INFO:  sea_water_temperature: 10.000000
    10:39:20 INFO:  sea_water_salinity: 34.000000
    10:39:20 INFO:  upward_sea_water_velocity: 0.000000
    10:39:20 INFO: Oil-water surface tension is 0.029650 Nm
    10:39:20 INFO: 2020-02-28 10:39:19.966205 - step 1 of 1 - 1000 active elements (0 deactivated)




Uniform droplet spectrum


.. code-block:: default

    o2 = OpenOil3D(loglevel=20, weathering_model='noaa')
    o2.fallback_values['land_binary_mask'] = 0
    o2.fallback_values['x_sea_water_velocity'] = -.2
    o2.fallback_values['y_sea_water_velocity'] = 0
    o2.fallback_values['x_wind'] = 12
    o2.fallback_values['y_wind'] = 0
    o2.fallback_values['sea_surface_wave_stokes_drift_x_velocity'] = .3
    o2.fallback_values['sea_surface_wave_stokes_drift_y_velocity'] = 0
    o2.set_config('wave_entrainment:droplet_size_distribution', 'Exponential')
    o2.set_config('processes:evaporation', False)
    o2.set_config('processes:dispersion', False)
    o2.set_config('turbulentmixing:droplet_diameter_min_wavebreaking', 1e-6)
    o2.set_config('turbulentmixing:droplet_diameter_max_wavebreaking', 2e-3)
    o2.set_config('turbulentmixing:droplet_size_exponent', 0)
    o2.seed_elements(lon=4, lat=60, time=datetime.now(), number=1000, radius=100,
                     z=0, oiltype=oiltype)
    o2.run(duration=timedelta(hours=1), time_step=3600)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    10:39:20 INFO: OpenDriftSimulation initialised (version 1.2.0)
    10:39:20 INFO: Using density 845.3770636541037 and viscosity 0.00015931193316731434 of oiltype VILJE 2009
    10:39:20 INFO: Config validation OK
    10:39:20 INFO: Setting SRS to latlong, since not defined before.
    10:39:20 INFO: Fallback values will be used for the following variables which have no readers: 
    10:39:20 INFO:  x_sea_water_velocity: -0.200000
    10:39:20 INFO:  y_sea_water_velocity: 0.000000
    10:39:20 INFO:  sea_surface_wave_significant_height: 0.000000
    10:39:20 INFO:  sea_surface_wave_stokes_drift_x_velocity: 0.300000
    10:39:20 INFO:  sea_surface_wave_stokes_drift_y_velocity: 0.000000
    10:39:20 INFO:  sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    10:39:20 INFO:  sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    10:39:20 INFO:  sea_ice_area_fraction: 0.000000
    10:39:20 INFO:  x_wind: 12.000000
    10:39:20 INFO:  y_wind: 0.000000
    10:39:20 INFO:  sea_floor_depth_below_sea_level: 10000.000000
    10:39:20 INFO:  ocean_vertical_diffusivity: 0.020000
    10:39:20 INFO:  sea_water_temperature: 10.000000
    10:39:20 INFO:  sea_water_salinity: 34.000000
    10:39:20 INFO:  upward_sea_water_velocity: 0.000000
    10:39:20 INFO: Oil-water surface tension is 0.029650 Nm
    10:39:20 INFO: 2020-02-28 10:39:20.254475 - step 1 of 1 - 1000 active elements (0 deactivated)




Johansen et al. (2015) droplet spectrum


.. code-block:: default

    o3 = OpenOil3D(loglevel=20, weathering_model='noaa')
    o3.fallback_values['land_binary_mask'] = 0
    o3.fallback_values['x_sea_water_velocity'] = -.2
    o3.fallback_values['y_sea_water_velocity'] = 0
    o3.fallback_values['x_wind'] = 12
    o3.fallback_values['y_wind'] = 0
    o3.fallback_values['sea_surface_wave_stokes_drift_x_velocity'] = .3
    o3.fallback_values['sea_surface_wave_stokes_drift_y_velocity'] = 0
    o3.set_config('wave_entrainment:droplet_size_distribution', 'Johansen et al. (2015)')
    o3.set_config('processes:evaporation', False)
    o3.set_config('processes:dispersion', False)
    o3.set_config('turbulentmixing:droplet_diameter_min_wavebreaking', 1e-6)
    o3.set_config('turbulentmixing:droplet_diameter_max_wavebreaking', 2e-3)
    o3.seed_elements(lon=4, lat=60, time=datetime.now(), number=1000, radius=100,
                     z=0, oiltype=oiltype, oil_film_thickness=0.001)
    o3.run(duration=timedelta(hours=1), time_step=3600)

    dmin = 1e-6 # Change dmin, dmax according to choice in config
    dmax = 2e-3
    droplet_diameters = o.elements.diameter
    droplet_diameters2 = o2.elements.diameter
    droplet_diameters3 = o3.elements.diameter





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    10:39:20 INFO: OpenDriftSimulation initialised (version 1.2.0)
    10:39:20 INFO: Using density 845.3770636541037 and viscosity 0.00015931193316731434 of oiltype VILJE 2009
    10:39:20 INFO: Config validation OK
    10:39:20 INFO: Setting SRS to latlong, since not defined before.
    10:39:20 INFO: Fallback values will be used for the following variables which have no readers: 
    10:39:20 INFO:  x_sea_water_velocity: -0.200000
    10:39:20 INFO:  y_sea_water_velocity: 0.000000
    10:39:20 INFO:  sea_surface_wave_significant_height: 0.000000
    10:39:20 INFO:  sea_surface_wave_stokes_drift_x_velocity: 0.300000
    10:39:20 INFO:  sea_surface_wave_stokes_drift_y_velocity: 0.000000
    10:39:20 INFO:  sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    10:39:20 INFO:  sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    10:39:20 INFO:  sea_ice_area_fraction: 0.000000
    10:39:20 INFO:  x_wind: 12.000000
    10:39:20 INFO:  y_wind: 0.000000
    10:39:20 INFO:  sea_floor_depth_below_sea_level: 10000.000000
    10:39:20 INFO:  ocean_vertical_diffusivity: 0.020000
    10:39:20 INFO:  sea_water_temperature: 10.000000
    10:39:20 INFO:  sea_water_salinity: 34.000000
    10:39:20 INFO:  upward_sea_water_velocity: 0.000000
    10:39:20 INFO: Oil-water surface tension is 0.029650 Nm
    10:39:20 INFO: 2020-02-28 10:39:20.485375 - step 1 of 1 - 1000 active elements (0 deactivated)





.. code-block:: default

    plt.subplot(2,2,1)
    plt.hist(droplet_diameters, 100, range=(dmin,dmax), align='mid')
    plt.xlabel('Droplet diameter d [m]', fontsize=8)
    plt.ylabel('N(d)', fontsize=8)
    plt.title('Delvigne & Sweeney (1988) distribution', fontsize=10)

    plt.subplot(2,2,2)
    plt.hist(droplet_diameters2, 100, range=(dmin,dmax), align='mid')
    plt.xlabel('Droplet diameter d [m]', fontsize=8)
    plt.ylabel('N(d)', fontsize=8)
    plt.title('Uniform distribution', fontsize=10)

    plt.subplot(2,2,3)
    plt.hist(droplet_diameters3, 100, range=(dmin,dmax), align='mid')
    plt.xlabel('Droplet diameter d [m]', fontsize=8)
    plt.ylabel('N(d)', fontsize=8)
    plt.title('Johansen et al. (2015) distribution', fontsize=10)
    plt.show()



.. image:: /gallery/images/sphx_glr_example_droplet_distribution_plotting_001.png
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.110 seconds)


.. _sphx_glr_download_gallery_example_droplet_distribution_plotting.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_droplet_distribution_plotting.py <example_droplet_distribution_plotting.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_droplet_distribution_plotting.ipynb <example_droplet_distribution_plotting.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
