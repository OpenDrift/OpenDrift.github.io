.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_generic.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_generic.py:


Generic example
===============


.. code-block:: default


    from datetime import datetime, timedelta

    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.models.openoil import OpenOil

    o = OpenOil(loglevel=20)  # Set loglevel to 0 for debug information

    # Arome atmospheric model
    reader_arome = reader_netCDF_CF_generic.Reader(o.test_data_folder() + '16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc')
    # Norkyst ocean model
    reader_norkyst = reader_netCDF_CF_generic.Reader(o.test_data_folder() + '16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc')

    # Uncomment to use live data from thredds
    #reader_arome = reader_netCDF_CF_generic.Reader('https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc')
    #reader_norkyst = reader_netCDF_CF_generic.Reader('https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be')

    o.add_reader([reader_norkyst, reader_arome])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    10:27:18 INFO: OpenDriftSimulation initialised (version 1.2.1)
    10:27:18 INFO: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/arome_subset_16Nov2015.nc
    10:27:18 INFO: Opening file with Dataset
    10:27:18 INFO: Could not parse CF grid_mapping
    10:27:18 INFO: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
    10:27:18 INFO: Opening file with Dataset




Seeding some particles
time = datetime(2015, 9, 22, 6, 0, 0)


.. code-block:: default

    time = [reader_arome.start_time,
            reader_arome.start_time + timedelta(hours=30)]
    #time = reader_arome.start_time

    # Seed oil elements at defined position and time
    o.seed_elements(lon=4.6, lat=60.0, radius=50, number=3000, time=time,
                    wind_drift_factor=.02)








Adjusting some configuration


.. code-block:: default

    o.set_config('processes:dispersion', False)
    o.set_config('processes:evaporation', False)
    o.set_config('processes:emulsification', True)
    o.set_config('drift:current_uncertainty', .1)
    o.set_config('drift:wind_uncertainty', 1)








Running model


.. code-block:: default


    o.run(end_time=reader_norkyst.end_time, time_step=1800,
          time_step_output=3600, outfile='openoil.nc',
          export_variables=['mass_oil'])








Print and plot results
o.plot(background=['x_sea_water_velocity', 'y_sea_water_velocity'], buffer=.5)
 o.animation(fast=True)
 o.animation(density=True, show_elements=False, fast=True)


.. code-block:: default

    o.plot(fast=True)




.. image:: /gallery/images/sphx_glr_example_generic_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/conda/envs/opendrift/lib/python3.8/site-packages/cartopy/mpl/gridliner.py:307: UserWarning: The .xlabels_top attribute is deprecated. Please use .top_labels to toggle visibility instead.
      warnings.warn('The .xlabels_top attribute is deprecated. Please '

    (<cartopy.mpl.geoaxes.GeoAxesSubplot object at 0x7fc9f8e9b7c0>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/pyplot.py'>)



Or an animation can be generated with:


.. code-block:: default


    o.animation(fast=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/conda/envs/opendrift/lib/python3.8/site-packages/cartopy/mpl/gridliner.py:307: UserWarning: The .xlabels_top attribute is deprecated. Please use .top_labels to toggle visibility instead.
      warnings.warn('The .xlabels_top attribute is deprecated. Please '
    /opt/conda/envs/opendrift/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:1546: MatplotlibDeprecationWarning: Using a string of single character colors as a color sequence is deprecated. Use an explicit list instead.
      result = matplotlib.axes.Axes.scatter(self, *args, **kwargs)




.. image:: /gallery/animations/example_generic_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  1.028 seconds)


.. _sphx_glr_download_gallery_example_generic.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_generic.py <example_generic.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_generic.ipynb <example_generic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
