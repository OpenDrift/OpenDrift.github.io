
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/example_oil_ice.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_oil_ice.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_oil_ice.py:


Oil in ice
==================================

.. GENERATED FROM PYTHON SOURCE LINES 6-14

.. code-block:: default


    from datetime import datetime, timedelta
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.models.openoil import OpenOil
    import cmocean

    o = OpenOil(loglevel=20)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    14:32:56 INFO    opendrift.models.basemodel: OpenDriftSimulation initialised (version 1.7.3 / v1.7.3-99-g9ca9f3e)




.. GENERATED FROM PYTHON SOURCE LINES 15-16

Using live data from Barents 2.5 km ocean model

.. GENERATED FROM PYTHON SOURCE LINES 16-18

.. code-block:: default

    o.add_readers_from_list(['https://thredds.met.no/thredds/dodsC/barents25km_agg'])








.. GENERATED FROM PYTHON SOURCE LINES 19-20

Imaginary oil spill in Hinlopen strait

.. GENERATED FROM PYTHON SOURCE LINES 20-23

.. code-block:: default

    o.seed_elements(lon=19.1909, lat=79.5986, radius=50,
                    number=3000, time=datetime.utcnow() - timedelta(days=7))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    14:32:56 INFO    opendrift.models.openoil: Oil type not specified, using default: AASGARD A 2003
    querying DB:
    Oil.name ==  'AASGARD A 2003'
    14:32:56 INFO    opendrift.models.openoil: Using density 816.6828030078809 and viscosity 3.298187589355751e-05 of oiltype AASGARD A 2003




.. GENERATED FROM PYTHON SOURCE LINES 24-25

Adjusting some configuration

.. GENERATED FROM PYTHON SOURCE LINES 25-30

.. code-block:: default

    o.set_config('processes:dispersion',  False)
    o.set_config('processes:evaporation',  False)
    o.set_config('processes:emulsification',  False)
    o.set_config('drift:truncate_ocean_model_below_m', 3)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Running model

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: default

    o.run(duration=timedelta(hours=48), time_step=1800, time_step_output=3600)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    14:32:56 INFO    opendrift.models.basemodel: Fallback values will be used for the following variables which have no readers: 
    14:32:56 INFO    opendrift.models.basemodel:    upward_sea_water_velocity: 0.000000
    14:32:56 INFO    opendrift.models.basemodel:    sea_surface_wave_significant_height: 0.000000
    14:32:56 INFO    opendrift.models.basemodel:    sea_surface_wave_stokes_drift_x_velocity: 0.000000
    14:32:56 INFO    opendrift.models.basemodel:    sea_surface_wave_stokes_drift_y_velocity: 0.000000
    14:32:56 INFO    opendrift.models.basemodel:    sea_surface_wave_period_at_variance_spectral_density_maximum: 0.000000
    14:32:56 INFO    opendrift.models.basemodel:    sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment: 0.000000
    14:32:56 INFO    opendrift.models.basemodel:    sea_ice_area_fraction: 0.000000
    14:32:56 INFO    opendrift.models.basemodel:    sea_ice_x_velocity: 0.000000
    14:32:56 INFO    opendrift.models.basemodel:    sea_ice_y_velocity: 0.000000
    14:32:56 INFO    opendrift.models.basemodel:    sea_water_temperature: 10.000000
    14:32:56 INFO    opendrift.models.basemodel:    sea_water_salinity: 34.000000
    14:32:56 INFO    opendrift.models.basemodel:    sea_floor_depth_below_sea_level: 10000.000000
    14:32:56 INFO    opendrift.models.basemodel:    ocean_vertical_diffusivity: 0.020000
    14:32:56 INFO    opendrift.models.basemodel:    ocean_mixed_layer_thickness: 50.000000
    14:32:56 INFO    opendrift.models.basemodel: Adding a dynamical landmask with max. priority based on assumed maximum speed of 1.3 m/s. Adding a customised landmask may be faster...
    14:32:56 WARNING opendrift.readers.reader_global_landmask: using the experimental RoaringLandmask
    14:33:03 WARNING opendrift.readers.reader_global_landmask: skippoly and extent is not supported with RoaringLandmask
    14:33:03 INFO    opendrift.models.basemodel: Using existing reader for land_binary_mask
    14:33:03 INFO    opendrift.models.basemodel: All points are in ocean
    14:33:03 INFO    opendrift.models.openoil: Oil-water surface tension is 0.028134 Nm
    14:33:03 INFO    opendrift.models.basemodel: 2021-12-15 14:32:56.071366 - step 1 of 96 - 3000 active elements (0 deactivated)
    14:33:03 INFO    opendrift.readers.reader_netCDF_CF_generic: Opening dataset: https://thredds.met.no/thredds/dodsC/barents25km_agg
    14:33:07 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0048956904 to -0.0010668703) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:07 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:09 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0031379831 to -0.000816273) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:09 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:09 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:09 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:09 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:09 INFO    opendrift.models.basemodel: 2021-12-15 15:02:56.071366 - step 2 of 96 - 3000 active elements (0 deactivated)
    14:33:09 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:09 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:10 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:10 INFO    opendrift.models.basemodel: 2021-12-15 15:32:56.071366 - step 3 of 96 - 3000 active elements (0 deactivated)
    14:33:10 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:10 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:10 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:10 INFO    opendrift.models.basemodel: 2021-12-15 16:02:56.071366 - step 4 of 96 - 3000 active elements (0 deactivated)
    14:33:10 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:10 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:10 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:10 INFO    opendrift.models.basemodel: 2021-12-15 16:32:56.071366 - step 5 of 96 - 3000 active elements (0 deactivated)
    14:33:10 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:10 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:10 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:10 INFO    opendrift.models.basemodel: 2021-12-15 17:02:56.071366 - step 6 of 96 - 3000 active elements (0 deactivated)
    14:33:10 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:10 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:10 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:10 INFO    opendrift.models.basemodel: 2021-12-15 17:32:56.071366 - step 7 of 96 - 3000 active elements (0 deactivated)
    14:33:10 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:10 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:10 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:10 INFO    opendrift.models.basemodel: 2021-12-15 18:02:56.071366 - step 8 of 96 - 3000 active elements (0 deactivated)
    14:33:10 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:11 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:11 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:11 INFO    opendrift.models.basemodel: 2021-12-15 18:32:56.071366 - step 9 of 96 - 3000 active elements (0 deactivated)
    14:33:11 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:11 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:11 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:11 INFO    opendrift.models.basemodel: 2021-12-15 19:02:56.071366 - step 10 of 96 - 3000 active elements (0 deactivated)
    14:33:11 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:11 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:11 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:11 INFO    opendrift.models.basemodel: 2021-12-15 19:32:56.071366 - step 11 of 96 - 3000 active elements (0 deactivated)
    14:33:11 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:11 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:11 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:11 INFO    opendrift.models.basemodel: 2021-12-15 20:02:56.071366 - step 12 of 96 - 3000 active elements (0 deactivated)
    14:33:11 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:11 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:11 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:11 INFO    opendrift.models.basemodel: 2021-12-15 20:32:56.071366 - step 13 of 96 - 3000 active elements (0 deactivated)
    14:33:11 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:11 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:12 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:12 INFO    opendrift.models.basemodel: 2021-12-15 21:02:56.071366 - step 14 of 96 - 3000 active elements (0 deactivated)
    14:33:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:12 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:12 INFO    opendrift.models.basemodel: 2021-12-15 21:32:56.071366 - step 15 of 96 - 3000 active elements (0 deactivated)
    14:33:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:12 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:12 INFO    opendrift.models.basemodel: 2021-12-15 22:02:56.071366 - step 16 of 96 - 3000 active elements (0 deactivated)
    14:33:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:12 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:12 INFO    opendrift.models.basemodel: 2021-12-15 22:32:56.071366 - step 17 of 96 - 3000 active elements (0 deactivated)
    14:33:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:12 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:12 INFO    opendrift.models.basemodel: 2021-12-15 23:02:56.071366 - step 18 of 96 - 3000 active elements (0 deactivated)
    14:33:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:13 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:13 INFO    opendrift.models.basemodel: 2021-12-15 23:32:56.071366 - step 19 of 96 - 3000 active elements (0 deactivated)
    14:33:13 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:13 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:13 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:13 INFO    opendrift.models.basemodel: 2021-12-16 00:02:56.071366 - step 20 of 96 - 3000 active elements (0 deactivated)
    14:33:15 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0018692007 to -8.6762775e-05) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:15 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:15 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:15 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:15 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:15 INFO    opendrift.models.basemodel: 2021-12-16 00:32:56.071366 - step 21 of 96 - 3000 active elements (0 deactivated)
    14:33:15 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:15 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:16 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:16 INFO    opendrift.models.basemodel: 2021-12-16 01:02:56.071366 - step 22 of 96 - 3000 active elements (0 deactivated)
    14:33:18 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0006987069 to -8.083702e-06) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:18 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:18 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:18 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:18 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:18 INFO    opendrift.models.basemodel: 2021-12-16 01:32:56.071366 - step 23 of 96 - 3000 active elements (0 deactivated)
    14:33:18 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:18 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:18 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:18 INFO    opendrift.models.basemodel: 2021-12-16 02:02:56.071366 - step 24 of 96 - 3000 active elements (0 deactivated)
    14:33:20 WARNING opendrift.readers.basereader.variables: Invalid values (-0.002242431 to -7.8608455e-06) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:20 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:20 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:20 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:20 INFO    opendrift.models.basemodel: 2021-12-16 02:32:56.071366 - step 25 of 96 - 3000 active elements (0 deactivated)
    14:33:20 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:21 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:21 INFO    opendrift.models.basemodel: 2021-12-16 03:02:56.071366 - step 26 of 96 - 3000 active elements (0 deactivated)
    14:33:23 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0074111363 to -0.0006725959) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:23 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:23 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:23 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:23 INFO    opendrift.models.basemodel: 2021-12-16 03:32:56.071366 - step 27 of 96 - 3000 active elements (0 deactivated)
    14:33:23 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:23 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:23 INFO    opendrift.models.basemodel: 2021-12-16 04:02:56.071366 - step 28 of 96 - 3000 active elements (0 deactivated)
    14:33:26 WARNING opendrift.readers.basereader.variables: Invalid values (-0.011661733 to -0.00096442667) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:26 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:26 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:26 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:26 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:26 INFO    opendrift.models.basemodel: 2021-12-16 04:32:56.071366 - step 29 of 96 - 3000 active elements (0 deactivated)
    14:33:26 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:26 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:26 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:26 INFO    opendrift.models.basemodel: 2021-12-16 05:02:56.071366 - step 30 of 96 - 3000 active elements (0 deactivated)
    14:33:28 WARNING opendrift.readers.basereader.variables: Invalid values (-0.013747734 to -0.0011634311) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:28 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:28 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:28 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:29 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:29 INFO    opendrift.models.basemodel: 2021-12-16 05:32:56.071366 - step 31 of 96 - 3000 active elements (0 deactivated)
    14:33:29 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:29 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:29 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:29 INFO    opendrift.models.basemodel: 2021-12-16 06:02:56.071366 - step 32 of 96 - 3000 active elements (0 deactivated)
    14:33:31 WARNING opendrift.readers.basereader.variables: Invalid values (-0.014400244 to -0.00079903484) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:31 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:31 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:31 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:31 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:31 INFO    opendrift.models.basemodel: 2021-12-16 06:32:56.071366 - step 33 of 96 - 3000 active elements (0 deactivated)
    14:33:31 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:31 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:31 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:31 INFO    opendrift.models.basemodel: 2021-12-16 07:02:56.071366 - step 34 of 96 - 3000 active elements (0 deactivated)
    14:33:33 WARNING opendrift.readers.basereader.variables: Invalid values (-0.010312625 to -0.00056201074) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:33 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:33 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:33 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:33 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:33 INFO    opendrift.models.basemodel: 2021-12-16 07:32:56.071366 - step 35 of 96 - 3000 active elements (0 deactivated)
    14:33:33 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:33 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:34 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:34 INFO    opendrift.models.basemodel: 2021-12-16 08:02:56.071366 - step 36 of 96 - 3000 active elements (0 deactivated)
    14:33:36 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0070901657 to -0.00062398176) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:36 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:36 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:36 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:36 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:36 INFO    opendrift.models.basemodel: 2021-12-16 08:32:56.071366 - step 37 of 96 - 3000 active elements (0 deactivated)
    14:33:36 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:36 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:36 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:36 INFO    opendrift.models.basemodel: 2021-12-16 09:02:56.071366 - step 38 of 96 - 3000 active elements (0 deactivated)
    14:33:38 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0041981344 to -0.00043912343) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:38 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:38 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:38 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:38 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:38 INFO    opendrift.models.basemodel: 2021-12-16 09:32:56.071366 - step 39 of 96 - 3000 active elements (0 deactivated)
    14:33:38 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:38 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:39 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:39 INFO    opendrift.models.basemodel: 2021-12-16 10:02:56.071366 - step 40 of 96 - 3000 active elements (0 deactivated)
    14:33:41 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0015302941 to -0.000120964534) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:41 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:41 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:41 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:41 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:41 INFO    opendrift.models.basemodel: 2021-12-16 10:32:56.071366 - step 41 of 96 - 3000 active elements (0 deactivated)
    14:33:41 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:41 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:41 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:41 INFO    opendrift.models.basemodel: 2021-12-16 11:02:56.071366 - step 42 of 96 - 3000 active elements (0 deactivated)
    14:33:43 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0008703225 to -7.613543e-05) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:43 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:43 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:43 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:43 INFO    opendrift.models.basemodel: 2021-12-16 11:32:56.071366 - step 43 of 96 - 3000 active elements (0 deactivated)
    14:33:43 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:44 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:44 INFO    opendrift.models.basemodel: 2021-12-16 12:02:56.071366 - step 44 of 96 - 3000 active elements (0 deactivated)
    14:33:46 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:46 INFO    opendrift.models.basemodel: 2021-12-16 12:32:56.071366 - step 45 of 96 - 3000 active elements (0 deactivated)
    14:33:46 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:46 INFO    opendrift.models.basemodel: 2021-12-16 13:02:56.071366 - step 46 of 96 - 3000 active elements (0 deactivated)
    14:33:48 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:48 INFO    opendrift.models.basemodel: 2021-12-16 13:32:56.071366 - step 47 of 96 - 3000 active elements (0 deactivated)
    14:33:49 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:49 INFO    opendrift.models.basemodel: 2021-12-16 14:02:56.071366 - step 48 of 96 - 3000 active elements (0 deactivated)
    14:33:51 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:51 INFO    opendrift.models.basemodel: 2021-12-16 14:32:56.071366 - step 49 of 96 - 3000 active elements (0 deactivated)
    14:33:51 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:51 INFO    opendrift.models.basemodel: 2021-12-16 15:02:56.071366 - step 50 of 96 - 3000 active elements (0 deactivated)
    14:33:54 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0032935552 to -2.3142984e-05) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:54 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:54 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:54 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:54 INFO    opendrift.models.basemodel: 2021-12-16 15:32:56.071366 - step 51 of 96 - 3000 active elements (0 deactivated)
    14:33:54 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:54 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:54 INFO    opendrift.models.basemodel: 2021-12-16 16:02:56.071366 - step 52 of 96 - 3000 active elements (0 deactivated)
    14:33:56 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0075617284 to -0.00081454107) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:56 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:56 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:56 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:56 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:56 INFO    opendrift.models.basemodel: 2021-12-16 16:32:56.071366 - step 53 of 96 - 3000 active elements (0 deactivated)
    14:33:56 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:56 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:56 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:56 INFO    opendrift.models.basemodel: 2021-12-16 17:02:56.071366 - step 54 of 96 - 3000 active elements (0 deactivated)
    14:33:59 WARNING opendrift.readers.basereader.variables: Invalid values (-0.009339123 to -0.0012022675) found for ocean_vertical_diffusivity, replacing with NaN
    14:33:59 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:33:59 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:59 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:59 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:59 INFO    opendrift.models.basemodel: 2021-12-16 17:32:56.071366 - step 55 of 96 - 3000 active elements (0 deactivated)
    14:33:59 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:59 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:33:59 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:33:59 INFO    opendrift.models.basemodel: 2021-12-16 18:02:56.071366 - step 56 of 96 - 3000 active elements (0 deactivated)
    14:34:01 WARNING opendrift.readers.basereader.variables: Invalid values (-0.00847291 to -0.0014172464) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:01 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:01 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:01 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:01 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:01 INFO    opendrift.models.basemodel: 2021-12-16 18:32:56.071366 - step 57 of 96 - 3000 active elements (0 deactivated)
    14:34:01 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:01 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:02 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:02 INFO    opendrift.models.basemodel: 2021-12-16 19:02:56.071366 - step 58 of 96 - 3000 active elements (0 deactivated)
    14:34:04 WARNING opendrift.readers.basereader.variables: Invalid values (-0.006723778 to -0.000957093) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:04 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:04 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:04 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:04 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:04 INFO    opendrift.models.basemodel: 2021-12-16 19:32:56.071366 - step 59 of 96 - 3000 active elements (0 deactivated)
    14:34:04 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:04 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:04 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:04 INFO    opendrift.models.basemodel: 2021-12-16 20:02:56.071366 - step 60 of 96 - 3000 active elements (0 deactivated)
    14:34:06 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0046676914 to -0.00077353074) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:06 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:06 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:06 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:07 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:07 INFO    opendrift.models.basemodel: 2021-12-16 20:32:56.071366 - step 61 of 96 - 3000 active elements (0 deactivated)
    14:34:07 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:07 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:07 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:07 INFO    opendrift.models.basemodel: 2021-12-16 21:02:56.071366 - step 62 of 96 - 3000 active elements (0 deactivated)
    14:34:09 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0036952188 to -0.0005781696) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:09 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:09 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:09 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:09 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:09 INFO    opendrift.models.basemodel: 2021-12-16 21:32:56.071366 - step 63 of 96 - 3000 active elements (0 deactivated)
    14:34:09 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:09 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:09 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:09 INFO    opendrift.models.basemodel: 2021-12-16 22:02:56.071366 - step 64 of 96 - 3000 active elements (0 deactivated)
    14:34:12 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0026095747 to -0.0003227028) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:12 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:12 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:12 INFO    opendrift.models.basemodel: 2021-12-16 22:32:56.071366 - step 65 of 96 - 3000 active elements (0 deactivated)
    14:34:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:12 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:12 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:12 INFO    opendrift.models.basemodel: 2021-12-16 23:02:56.071366 - step 66 of 96 - 3000 active elements (0 deactivated)
    14:34:14 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0015649694 to -0.0002544721) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:14 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:14 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:14 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:14 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:14 INFO    opendrift.models.basemodel: 2021-12-16 23:32:56.071366 - step 67 of 96 - 3000 active elements (0 deactivated)
    14:34:14 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:14 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:15 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:15 INFO    opendrift.models.basemodel: 2021-12-17 00:02:56.071366 - step 68 of 96 - 3000 active elements (0 deactivated)
    14:34:17 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0004999185 to -1.2010225e-05) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:17 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:17 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:17 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:17 INFO    opendrift.models.basemodel: 2021-12-17 00:32:56.071366 - step 69 of 96 - 3000 active elements (0 deactivated)
    14:34:17 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:17 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:17 INFO    opendrift.models.basemodel: 2021-12-17 01:02:56.071366 - step 70 of 96 - 3000 active elements (0 deactivated)
    14:34:19 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:19 INFO    opendrift.models.basemodel: 2021-12-17 01:32:56.071366 - step 71 of 96 - 3000 active elements (0 deactivated)
    14:34:20 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:20 INFO    opendrift.models.basemodel: 2021-12-17 02:02:56.071366 - step 72 of 96 - 3000 active elements (0 deactivated)
    14:34:22 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0006522276 to -7.651465e-08) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:22 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:22 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:22 INFO    opendrift.models.basemodel: 2021-12-17 02:32:56.071366 - step 73 of 96 - 3000 active elements (0 deactivated)
    14:34:22 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:22 INFO    opendrift.models.basemodel: 2021-12-17 03:02:56.071366 - step 74 of 96 - 3000 active elements (0 deactivated)
    14:34:24 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0064629554 to -0.00042167987) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:24 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:24 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:25 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:25 INFO    opendrift.models.basemodel: 2021-12-17 03:32:56.071366 - step 75 of 96 - 3000 active elements (0 deactivated)
    14:34:25 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:25 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:25 INFO    opendrift.models.basemodel: 2021-12-17 04:02:56.071366 - step 76 of 96 - 3000 active elements (0 deactivated)
    14:34:27 WARNING opendrift.readers.basereader.variables: Invalid values (-0.012084234 to -0.0007238065) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:27 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:27 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:27 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:27 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:27 INFO    opendrift.models.basemodel: 2021-12-17 04:32:56.071366 - step 77 of 96 - 3000 active elements (0 deactivated)
    14:34:27 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:27 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:27 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:27 INFO    opendrift.models.basemodel: 2021-12-17 05:02:56.071366 - step 78 of 96 - 3000 active elements (0 deactivated)
    14:34:29 WARNING opendrift.readers.basereader.variables: Invalid values (-0.013808207 to -0.0012410507) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:29 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:29 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:29 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:30 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:30 INFO    opendrift.models.basemodel: 2021-12-17 05:32:56.071366 - step 79 of 96 - 3000 active elements (0 deactivated)
    14:34:30 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:30 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:30 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:30 INFO    opendrift.models.basemodel: 2021-12-17 06:02:56.071366 - step 80 of 96 - 3000 active elements (0 deactivated)
    14:34:32 WARNING opendrift.readers.basereader.variables: Invalid values (-0.012472665 to -0.0012242196) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:32 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:32 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:32 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:32 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:32 INFO    opendrift.models.basemodel: 2021-12-17 06:32:56.071366 - step 81 of 96 - 3000 active elements (0 deactivated)
    14:34:32 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:32 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:33 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:33 INFO    opendrift.models.basemodel: 2021-12-17 07:02:56.071366 - step 82 of 96 - 3000 active elements (0 deactivated)
    14:34:35 WARNING opendrift.readers.basereader.variables: Invalid values (-0.009819263 to -0.0009588625) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:35 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:35 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:35 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:35 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:35 INFO    opendrift.models.basemodel: 2021-12-17 07:32:56.071366 - step 83 of 96 - 3000 active elements (0 deactivated)
    14:34:35 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:35 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:35 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:35 INFO    opendrift.models.basemodel: 2021-12-17 08:02:56.071366 - step 84 of 96 - 3000 active elements (0 deactivated)
    14:34:38 WARNING opendrift.readers.basereader.variables: Invalid values (-0.008065856 to -0.0010564179) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:38 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:38 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:38 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:38 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:38 INFO    opendrift.models.basemodel: 2021-12-17 08:32:56.071366 - step 85 of 96 - 3000 active elements (0 deactivated)
    14:34:38 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:38 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:38 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:38 INFO    opendrift.models.basemodel: 2021-12-17 09:02:56.071366 - step 86 of 96 - 3000 active elements (0 deactivated)
    14:34:41 WARNING opendrift.readers.basereader.variables: Invalid values (-0.006686774 to -0.00073107425) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:41 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:41 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:41 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:42 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:42 INFO    opendrift.models.basemodel: 2021-12-17 09:32:56.071366 - step 87 of 96 - 3000 active elements (0 deactivated)
    14:34:42 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:42 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:42 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:42 INFO    opendrift.models.basemodel: 2021-12-17 10:02:56.071366 - step 88 of 96 - 3000 active elements (0 deactivated)
    14:34:45 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0047908165 to -0.00046649185) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:45 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:45 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:45 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:45 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:45 INFO    opendrift.models.basemodel: 2021-12-17 10:32:56.071366 - step 89 of 96 - 3000 active elements (0 deactivated)
    14:34:45 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:45 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:45 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:45 INFO    opendrift.models.basemodel: 2021-12-17 11:02:56.071366 - step 90 of 96 - 3000 active elements (0 deactivated)
    14:34:48 WARNING opendrift.readers.basereader.variables: Invalid values (-0.0016703525 to -0.00023245034) found for ocean_vertical_diffusivity, replacing with NaN
    14:34:48 WARNING opendrift.readers.basereader.variables: (allowed range: [0, 1])
    14:34:48 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:48 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:48 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:48 INFO    opendrift.models.basemodel: 2021-12-17 11:32:56.071366 - step 91 of 96 - 3000 active elements (0 deactivated)
    14:34:48 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:48 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:49 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:49 INFO    opendrift.models.basemodel: 2021-12-17 12:02:56.071366 - step 92 of 96 - 3000 active elements (0 deactivated)
    14:34:52 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:52 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:52 INFO    opendrift.models.basemodel: 2021-12-17 12:32:56.071366 - step 93 of 96 - 3000 active elements (0 deactivated)
    14:34:52 WARNING opendrift: Only NaNs input to linearNDFast - returning
    14:34:52 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:52 INFO    opendrift.models.basemodel: 2021-12-17 13:02:56.071366 - step 94 of 96 - 3000 active elements (0 deactivated)
    14:34:55 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:55 INFO    opendrift.models.basemodel: 2021-12-17 13:32:56.071366 - step 95 of 96 - 3000 active elements (0 deactivated)
    14:34:56 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice
    14:34:56 INFO    opendrift.models.basemodel: 2021-12-17 14:02:56.071366 - step 96 of 96 - 3000 active elements (0 deactivated)
    14:34:59 INFO    opendrift.models.openoil: Ice concentration above 30%, using Nordam scheme for advection in ice




.. GENERATED FROM PYTHON SOURCE LINES 35-36

Print and plot results

.. GENERATED FROM PYTHON SOURCE LINES 36-40

.. code-block:: default

    print(o)
    o.animation(background='sea_ice_area_fraction', cmap=cmocean.cm.ice,
                vmin=0, vmax=1, bgalpha=1, fast=False)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    global_landmask
     0:00:00.0  total
     0:00:00.0  preparing
     0:00:00.0  reading
     0:00:00.0  masking
    --------------------
    https://thredds.met.no/thredds/dodsC/barents25km_agg
     0:01:41.0  total
     0:00:00.0  preparing
     0:01:36.2  reading
     0:00:01.8  interpolation
     0:00:00.1  interpolation_time
     0:00:04.7  rotating vectors
     0:00:00.0  masking
    --------------------
    Performance:
     2:03.7 total time
        0.2 configuration
        7.0 preparing main loop
          6.9 making dynamical landmask
          0.0 moving elements to ocean
       1:44.3 readers
            0.0 global_landmask
            0.4 postprocessing
     1:56.2 main loop
         1:41.3 https://thredds.met.no/thredds/dodsC/barents25km_agg
         10.6 updating elements
            3.9 oil weathering
              0.0 updating viscosities
              3.9 updating densities
            6.0 vertical mixing
        0.1 cleaning up
    --------------------
    ===========================
    Model:  OpenOil     (OpenDrift version 1.7.3)
            3000 active Oil particles  (0 deactivated, 0 scheduled)
    -------------------
    Environment variables:
      -----
      land_binary_mask
         1) global_landmask
      -----
      ocean_vertical_diffusivity
      sea_floor_depth_below_sea_level
      sea_ice_area_fraction
      sea_ice_x_velocity
      sea_ice_y_velocity
      sea_water_salinity
      sea_water_temperature
      upward_sea_water_velocity
      x_sea_water_velocity
      x_wind
      y_sea_water_velocity
      y_wind
         1) https://thredds.met.no/thredds/dodsC/barents25km_agg
      -----
    Readers not added for the following variables:
      ocean_mixed_layer_thickness
      sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment
      sea_surface_wave_period_at_variance_spectral_density_maximum
      sea_surface_wave_significant_height
      sea_surface_wave_stokes_drift_x_velocity
      sea_surface_wave_stokes_drift_y_velocity

    Time:
            Start: 2021-12-15 14:32:56.071366
            Present: 2021-12-17 14:32:56.071366
            Calculation steps: 96 * 0:30:00 - total time: 2 days, 0:00:00
            Output steps: 49 * 1:00:00
    ===========================

    /opt/conda/envs/opendrift/lib/python3.9/site-packages/shapefile.py:391: UserWarning: Shapefile shape has invalid polygon: no exterior rings found (must have clockwise orientation); interpreting holes as exteriors.
      warnings.warn('Shapefile shape has invalid polygon: no exterior rings found (must have clockwise orientation); interpreting holes as exteriors.')
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    14:35:08 INFO    opendrift.models.basemodel: Saving animation to /root/project/docs/source/gallery/animations/example_oil_ice_0.gif...
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    14:35:20 INFO    opendrift.models.basemodel: Time to make animation: 0:00:21.174754




.. GENERATED FROM PYTHON SOURCE LINES 41-42

.. image:: /gallery/animations/example_oil_ice_0.gif

.. GENERATED FROM PYTHON SOURCE LINES 42-45

.. code-block:: default


    o.plot(background='sea_ice_area_fraction', cmap=cmocean.cm.ice,
           vmin=0, vmax=1, bgalpha=1, fast=False)



.. image-sg:: /gallery/images/sphx_glr_example_oil_ice_001.png
   :alt: OpenDrift - OpenOil (AASGARD A 2003) 2021-12-15 14:32 to 2021-12-17 14:32 UTC (49 steps)
   :srcset: /gallery/images/sphx_glr_example_oil_ice_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:228: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(multi_line_string) > 1:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:280: ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and will be removed in Shapely 2.0. Use the `geoms` property to access the constituent parts of a multi-part geometry.
      for line in multi_line_string:
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/crs.py:347: ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and will be removed in Shapely 2.0. Check the length of the `geoms` property instead to get the  number of parts of a multi-part geometry.
      if len(p_mline) > 0:

    (<GeoAxesSubplot:title={'center':'OpenDrift - OpenOil (AASGARD A 2003)\n2021-12-15 14:32 to 2021-12-17 14:32 UTC (49 steps)'}>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.9/site-packages/matplotlib/pyplot.py'>)




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  32.878 seconds)


.. _sphx_glr_download_gallery_example_oil_ice.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_oil_ice.py <example_oil_ice.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_oil_ice.ipynb <example_oil_ice.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
