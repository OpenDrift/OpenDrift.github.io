.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_example_grid_time.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_grid_time.py:


Grid time
=============


.. code-block:: default


    from datetime import timedelta
    import numpy as np
    from opendrift.readers import reader_global_landmask
    from opendrift.readers import reader_netCDF_CF_generic
    from opendrift.models.oceandrift import OceanDrift

    o = OceanDrift(loglevel=20)  # Set loglevel to 0 for debug information

    reader_norkyst = reader_netCDF_CF_generic.Reader(o.test_data_folder() +
        '16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    18:11:51 INFO: OpenDriftSimulation initialised (version 1.2.0)
    18:11:51 INFO: Opening dataset: /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
    18:11:51 INFO: Opening file with Dataset




Landmask


.. code-block:: default

    reader_landmask = reader_global_landmask.Reader(
                        llcrnrlon=4.0, llcrnrlat=59.9,
                        urcrnrlon=5.5, urcrnrlat=61.2)

    o.add_reader([reader_landmask, reader_norkyst])








Seeding some particles


.. code-block:: default

    lons = np.linspace(4.4, 4.6, 10)
    lats = np.linspace(60.0, 60.1, 10)
    lons, lats = np.meshgrid(lons, lats)
    lons = lons.ravel()
    lats = lats.ravel()








Seed oil elements on a grid at regular time interval


.. code-block:: default

    start_time = reader_norkyst.start_time
    time_step = timedelta(hours=6)
    num_steps = 10
    for i in range(num_steps+1):
        o.seed_elements(lons, lats, radius=0, number=100,
                        time=start_time + i*time_step)








Running model (until end of driver data)


.. code-block:: default

    o.run(steps=60*4, time_step=900, time_step_output=3600)








Print and plot results


.. code-block:: default

    print(o)
    o.animation(fast=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    global_landmask
     0:00:00.3  total
     0:00:00.0  preparing
     0:00:00.3  reading
     0:00:00.0  interpolation_time
     0:00:00.0  masking
    --------------------
    /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
     0:00:10.0  total
     0:00:00.0  preparing
     0:00:00.2  reading
     0:00:00.1  interpolation
     0:00:00.0  interpolation_time
     0:00:09.5  rotating vectors
     0:00:00.0  masking
    --------------------
    Performance:
       14.2 total time
        2.8 configuration
        0.0 preparing main loop
          0.0 moving elements to ocean
         10.8 readers
            0.3 global_landmask
            0.2 postprocessing
       11.3 main loop
           10.1 /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
          0.1 updating elements
        0.0 cleaning up
    --------------------
    ===========================
    Model:  OceanDrift     (OpenDrift version 1.2.0)
            872 active PassiveTracer particles  (128 deactivated, 100 scheduled)
    Projection: +proj=lonlat +ellps=WGS84
    -------------------
    Environment variables:
      -----
      land_binary_mask
         1) global_landmask
      -----
      x_sea_water_velocity
      y_sea_water_velocity
         1) /root/project/tests/test_data/16Nov2015_NorKyst_z_surface/norkyst800_subset_16Nov2015.nc
      -----
    Readers not added for the following variables:
      x_wind
      y_wind

    Time:
            Start: 2015-11-16 00:00:00
            Present: 2015-11-18 12:00:00
            Calculation steps: 240 * 0:15:00 - total time: 2 days, 12:00:00
            Output steps: 61 * 1:00:00
    -------------------
    "Missing variables: ['land_binary_mask']", "Missing variables: ['land_binary_mask']", "Missing variables: ['land_binary_mask']", "Missing variables: ['land_binary_mask']", "Missing variables: ['land_binary_mask']", "Missing variables: ['land_binary_mask']"
    ===========================

    /opt/conda/envs/opendrift/lib/python3.8/site-packages/cartopy/mpl/geoaxes.py:1437: MatplotlibDeprecationWarning: Using a string of single character colors as a color sequence is deprecated. Use an explicit list instead.
      result = matplotlib.axes.Axes.scatter(self, *args, **kwargs)
    /root/project/opendrift/models/basemodel.py:2839: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()




.. image:: /gallery/animations/example_grid_time_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  45.486 seconds)


.. _sphx_glr_download_gallery_example_grid_time.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_grid_time.py <example_grid_time.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_grid_time.ipynb <example_grid_time.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
