
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/example_double_gyre_LCS_particles.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_double_gyre_LCS_particles.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_double_gyre_LCS_particles.py:


Double gyre - LCS with particles
============================================

Drift of particles in an idealised (analytical) eddy current field, 
plotted on top of the LCS. This takes some minutes to calculate.

.. GENERATED FROM PYTHON SOURCE LINES 9-16

.. code-block:: default


    from datetime import datetime, timedelta
    import matplotlib.pyplot as plt

    from opendrift.readers import reader_double_gyre
    from opendrift.models.oceandrift import OceanDrift


.. GENERATED FROM PYTHON SOURCE LINES 17-18

Setting some parameters

.. GENERATED FROM PYTHON SOURCE LINES 18-27

.. code-block:: default

    duration = timedelta(seconds=12)  # T
    time_step=timedelta(seconds=.5)
    time_step_output=timedelta(seconds=.5)
    delta=.02  # spatial resolution
    steps = int(duration.total_seconds()/
                time_step_output.total_seconds() + 1)

    o = OceanDrift(loglevel=20)


.. GENERATED FROM PYTHON SOURCE LINES 28-29

Note that Runge-Kutta here makes a difference to Euler scheme

.. GENERATED FROM PYTHON SOURCE LINES 29-37

.. code-block:: default

    o.set_config('drift:advection_scheme', 'runge-kutta4')
    o.disable_vertical_motion()
    o.set_config('environment:fallback:land_binary_mask', 0)

    double_gyre = reader_double_gyre.Reader(epsilon=.25, omega=0.628, A=0.1)
    print(double_gyre)
    o.add_reader(double_gyre)


.. GENERATED FROM PYTHON SOURCE LINES 38-39

Calculate Lyapunov exponents

.. GENERATED FROM PYTHON SOURCE LINES 39-44

.. code-block:: default

    times = [double_gyre.initial_time +
             n*time_step_output for n in range(steps)]
    lcs = o.calculate_ftle(time=times, time_step=time_step,
                           duration=duration, delta=delta, RLCS=False)


.. GENERATED FROM PYTHON SOURCE LINES 45-46

Make run with particles for the same period

.. GENERATED FROM PYTHON SOURCE LINES 46-58

.. code-block:: default

    o.reset()
    x = [.9]
    y = [.5]
    lon, lat = double_gyre.xy2lonlat(x, y)

    o.seed_elements(lon, lat, radius=.15, number=2000,
                    time=double_gyre.initial_time)
    o.disable_vertical_motion()
    o.run(duration=duration, time_step=time_step,
          time_step_output=time_step_output)
    o.animation(buffer=0, lcs=lcs, hide_landmask=True)


.. GENERATED FROM PYTHON SOURCE LINES 59-60

.. image:: /gallery/animations/example_double_gyre_LCS_particles_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_gallery_example_double_gyre_LCS_particles.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_double_gyre_LCS_particles.py <example_double_gyre_LCS_particles.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_double_gyre_LCS_particles.ipynb <example_double_gyre_LCS_particles.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
