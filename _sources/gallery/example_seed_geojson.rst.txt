.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_seed_geojson.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_seed_geojson.py:


Seeding from GeoJSON string
===========================


.. code-block:: default


    from datetime import datetime, timedelta
    from opendrift.models.leeway import Leeway
    from opendrift.models.openoil import OpenOil








Polygon
========


.. code-block:: default


    o = OpenOil(loglevel=50)
    o.seed_from_geojson("""{
          "type": "Feature",
          "geometry": {
            "type": "Polygon",
            "coordinates": [
              [
                [4.0, 60.0], [4.5, 60.0], [4.7, 60.1],
                [4.2, 60.1], [4.0, 60.0]
              ]
            ]
          },
          "properties": {
            "time": "2020-11-06T12:30:00Z",
            "number": 1000,
            "oiltype": "*GENERIC DIESEL",
            "m3_per_hour": 50
          }
        }""")
    o.plot(fast=True)





.. image:: /gallery/images/sphx_glr_example_seed_geojson_001.png
    :alt: OpenDrift - OpenOil (*GENERIC DIESEL) 1000 elements seeded at 2020-11-06 12:30 UTC
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/conda/envs/opendrift/lib/python3.8/site-packages/scipy/optimize/minpack.py:828: OptimizeWarning: Covariance of the parameters could not be estimated
      warnings.warn('Covariance of the parameters could not be estimated',

    (<GeoAxesSubplot:title={'center':'OpenDrift - OpenOil (*GENERIC DIESEL)\n1000 elements seeded at 2020-11-06 12:30 UTC'}>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/pyplot.py'>)



Point release at seafloor
==========================


.. code-block:: default


    o = OpenOil(loglevel=50)
    o.set_config('environment:constant:sea_floor_depth_below_sea_level', 200)
    o.seed_from_geojson("""{
          "type": "Feature",
          "geometry": {
            "type": "Point",
            "coordinates": [ 4.0, 60.0 ]
          },
          "properties": {
            "time": ["2020-11-06T12:30:00Z", "2020-11-06T18:30:00Z"],
            "number": 3000,
            "z": "seafloor"
          }
        }""")

    for var in ['x_wind', 'y_wind', 'x_sea_water_velocity', 'y_sea_water_velocity']:
        o.set_config('environment:constant:' + var, 0)
    o.run(duration=timedelta(hours=6), time_step=300)
    o.animation_profile()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    08:57:33 DEBUG   root: Nothing to prepare for constant_reader
    08:57:47 INFO    matplotlib.animation: Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
    08:57:47 DEBUG   matplotlib.animation: frame size in pixels is 1000 x 600
    08:57:47 INFO    matplotlib.animation: MovieWriter._run: running command: convert -size 1000x600 -depth 8 -delay 5.0 -loop 0 rgba:- /root/project/docs/source/gallery/animations/example_seed_geojson_0.gif
    08:57:47 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:47 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:48 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:49 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:50 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:51 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:57:52 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.




.. image:: /gallery/animations/example_seed_geojson_0.gif

Cone 
=====
 from (position1, radius1, time1) to (position2, radius2, time2)


.. code-block:: default


    o = Leeway(loglevel=50)
    o.seed_from_geojson("""{
          "type": "Feature",
          "geometry": {
            "type": "LineString",
            "coordinates": [
                [4.0, 60.0], [4.5, 60.1]
            ]
          },
          "properties": {
            "time": ["2020-11-06T12:30:00Z", "2020-11-06T18:30:00Z"],
            "radius": [0, 2000],
            "number": 3000
          }
        }""")

    for var in ['x_wind', 'y_wind', 'x_sea_water_velocity', 'y_sea_water_velocity']:
        o.set_config('environment:constant:' + var, 0)
    o.run(duration=timedelta(hours=6))
    o.animation(fast=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    08:58:54 DEBUG   root: Nothing to prepare for constant_reader
    08:58:59 INFO    matplotlib.animation: Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
    08:58:59 INFO    matplotlib.animation: figure size in inches has been adjusted from 11.0 x 8.857990466588623 to 11.0 x 8.84
    08:58:59 DEBUG   matplotlib.animation: frame size in pixels is 1100 x 884
    08:58:59 INFO    matplotlib.animation: MovieWriter._run: running command: convert -size 1100x884 -depth 8 -delay 10.0 -loop 0 rgba:- /root/project/docs/source/gallery/animations/example_seed_geojson_1.gif
    08:58:59 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:59:00 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:59:00 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:59:00 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:59:00 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:59:01 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:59:01 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.




.. image:: /gallery/animations/example_seed_geojson_1.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  30.323 seconds)


.. _sphx_glr_download_gallery_example_seed_geojson.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_seed_geojson.py <example_seed_geojson.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_seed_geojson.ipynb <example_seed_geojson.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
