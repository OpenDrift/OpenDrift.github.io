.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_coastline_options.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_coastline_options.py:


Coastline interaction
======================

Example to illustrate stranding options using an artificial
east-west oscillating current field
Knut-Frode Dagestad, Feb 2017


.. code-block:: default


    from datetime import datetime
    from opendrift.readers import reader_oscillating
    from opendrift.models.oceandrift import OceanDrift

    o = OceanDrift(loglevel=50)  # Set loglevel to 0 for debug information

    reader_osc = reader_oscillating.Reader('x_sea_water_velocity', amplitude=1,
                                           zero_time=datetime.utcnow())
    o.add_reader([reader_osc])  # Oscillating east-west current component

    o.set_config('environment:fallback:y_sea_water_velocity', .2)  # Adding northwards drift








Try different options: 'previous', 'stranding', 'none'


.. code-block:: default

    o.set_config('general:coastline_action', 'previous')

    o.seed_elements(lon=12.2, lat=67.7, radius=5000, number=25, time=reader_osc.zero_time)

    o.run(steps=36*4, time_step=900, time_step_output=1800)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    08:47:11 DEBUG   root: Nothing to prepare for oscillating_reader




Print and plot results


.. code-block:: default

    print(o)
    o.animation()
    o.plot()




.. image:: /gallery/images/sphx_glr_example_coastline_options_001.png
    :alt: OpenDrift - OceanDrift 2020-12-01 08:47 to 2020-12-02 20:47 UTC (73 steps)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    oscillating_reader
     0:04:02.0  total time
     0:00:03.7  configuration
     0:00:32.5  preparing main loop
     0:00:31.6  preparing main loop:making dynamical landmask
     0:00:00.1  preparing main loop:moving elements to ocean
     0:03:10.8  main loop:readers
     0:00:01.8  main loop:readers:global_landmask
     0:02:29.0  total
     0:00:00.1  preparing
     0:02:06.8  reading
     0:00:00.0  masking
     0:00:03.1  main loop:readers:postprocessing
     0:03:25.0  main loop
     0:01:04.2  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
     0:00:18.0  interpolation
     0:00:00.0  interpolation_time
     0:00:03.6  rotating vectors
     0:00:08.3  main loop:updating elements
     0:00:00.7  cleaning up
     0:00:01.3  main loop:readers:roms native
     0:00:10.5  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:00:53.6  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
     0:00:17.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
     0:00:00.6  main loop:readers:/root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
     0:00:00.6  main loop:readers:double_gyre
     0:00:00.0  main loop:readers:oscillating_reader
    --------------------
    global_landmask
     0:04:02.0  total time
     0:00:03.7  configuration
     0:00:32.5  preparing main loop
     0:00:31.6  preparing main loop:making dynamical landmask
     0:00:00.1  preparing main loop:moving elements to ocean
     0:03:10.8  main loop:readers
     0:00:01.8  main loop:readers:global_landmask
     0:02:29.0  total
     0:00:00.1  preparing
     0:02:06.8  reading
     0:00:00.0  masking
     0:00:03.1  main loop:readers:postprocessing
     0:03:25.0  main loop
     0:01:04.2  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
     0:00:18.0  interpolation
     0:00:00.0  interpolation_time
     0:00:03.6  rotating vectors
     0:00:08.3  main loop:updating elements
     0:00:00.7  cleaning up
     0:00:01.3  main loop:readers:roms native
     0:00:10.5  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
     0:00:53.6  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
     0:00:17.0  main loop:readers:https<colon>//thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
     0:00:00.6  main loop:readers:/root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
     0:00:00.6  main loop:readers:double_gyre
     0:00:00.0  main loop:readers:oscillating_reader
    --------------------
    Performance:
     4:02.0 total time
        3.7 configuration
       32.5 preparing main loop
         31.6 making dynamical landmask
          0.1 moving elements to ocean
       3:10.8 readers
            1.8 global_landmask
     2:29.0 total
        0.1 preparing
     2:06.8 reading
        0.0 masking
            3.1 postprocessing
     3:25.0 main loop
         1:04.2 https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
       18.0 interpolation
        0.0 interpolation_time
        3.6 rotating vectors
          8.3 updating elements
        0.7 cleaning up
            1.3 roms native
           10.5 https://thredds.met.no/thredds/dodsC/sea/nordic4km/zdepths1h/aggregate_be
           53.6 https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc
           17.0 https://thredds.met.no/thredds/dodsC/sea/mywavewam4/mywavewam4_be
            0.6 /root/project/tests/test_data/2Feb2016_Nordic_sigma_3d/AROME_MetCoOp_00_DEF.nc_20160202_subset
            0.6 double_gyre
            0.0 oscillating_reader
    --------------------
    ===========================
    Model:  OceanDrift     (OpenDrift version 1.4.2)
            25 active Lagrangian3DArray particles  (0 deactivated, 0 scheduled)
    Projection: +proj=latlong +datum=WGS84
    -------------------
    Environment variables:
      -----
      x_sea_water_velocity
         1) oscillating_reader
      -----
      land_binary_mask
         1) global_landmask
      -----
    Readers not added for the following variables:
      ocean_vertical_diffusivity
      sea_floor_depth_below_sea_level
      sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment
      sea_surface_wave_period_at_variance_spectral_density_maximum
      sea_surface_wave_significant_height
      sea_surface_wave_stokes_drift_x_velocity
      sea_surface_wave_stokes_drift_y_velocity
      surface_downward_x_stress
      surface_downward_y_stress
      turbulent_generic_length_scale
      turbulent_kinetic_energy
      upward_sea_water_velocity
      x_wind
      y_sea_water_velocity
      y_wind

    Time:
            Start: 2020-12-01 08:47:11.910765
            Present: 2020-12-02 20:47:11.910765
            Calculation steps: 144 * 0:15:00 - total time: 1 day, 12:00:00
            Output steps: 73 * 0:30:00
    ===========================

    08:47:16 INFO    matplotlib.animation: Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
    08:47:16 INFO    matplotlib.animation: figure size in inches has been adjusted from 11.0 x 8.613842502577905 to 11.0 x 8.6
    08:47:16 DEBUG   matplotlib.animation: frame size in pixels is 1100 x 860
    08:47:16 INFO    matplotlib.animation: MovieWriter._run: running command: convert -size 1100x860 -depth 8 -delay 10.0 -loop 0 rgba:- /root/project/docs/source/gallery/animations/example_coastline_options_0.gif
    08:47:16 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:17 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:17 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:17 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:17 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:17 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:17 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:17 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:17 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:18 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:19 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:20 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:21 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:21 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:21 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:21 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:21 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:21 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:21 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:21 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:21 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:22 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:23 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:23 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:23 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:23 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:23 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:23 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:23 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:24 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:24 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:24 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:24 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:24 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:24 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:24 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:24 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:25 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:25 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:25 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:25 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:25 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    08:47:25 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.

    (<GeoAxesSubplot:title={'center':'OpenDrift - OceanDrift\n2020-12-01 08:47 to 2020-12-02 20:47 UTC (73 steps)'}>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/pyplot.py'>)



.. image:: /gallery/animations/example_coastline_options_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 3 minutes  13.746 seconds)


.. _sphx_glr_download_gallery_example_coastline_options.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_coastline_options.py <example_coastline_options.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_coastline_options.ipynb <example_coastline_options.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
