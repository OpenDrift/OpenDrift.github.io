.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_example_coastline_options.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_example_coastline_options.py:


Coastline with options
=============

Example to illustrate stranding options using an artificial
east-west oscillating current field
Knut-Frode Dagestad, Feb 2017


.. code-block:: default


    from datetime import datetime
    from opendrift.readers import reader_oscillating
    from opendrift.models.oceandrift import OceanDrift

    o = OceanDrift(loglevel=0)  # Set loglevel to 0 for debug information

    reader_osc = reader_oscillating.Reader('x_sea_water_velocity', amplitude=1,
                                           zero_time=datetime.now())
    o.add_reader([reader_osc])  # Oscillating east-west current component

    o.fallback_values['y_sea_water_velocity'] = .2  # Adding northwards drift





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    22:17:54 INFO: OpenDriftSimulation initialised (version 1.2.0)
    22:17:54 DEBUG: Adding new variable mappings
    22:17:54 DEBUG: Calculation SRS set to: +proj=longlat +datum=WGS84 +no_defs
    22:17:54 DEBUG: Using srs for common grid: +proj=latlong +datum=WGS84
    22:17:54 DEBUG: Added reader oscillating_reader




Try different options: 'previous', 'stranding', 'none'


.. code-block:: default

    o.set_config('general:coastline_action', 'previous')

    o.seed_elements(lon=12.2, lat=67.7, radius=5000, number=25, time=reader_osc.zero_time)

    o.run(steps=36*4, time_step=900, time_step_output=1800)








Print and plot results


.. code-block:: default

    print(o)
    o.animation()
    o.plot()




.. image:: /gallery/images/sphx_glr_example_coastline_options_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ===========================
    --------------------
    Reader performance:
    --------------------
    oscillating_reader
     0:00:00.0  total
     0:00:00.0  preparing
     0:00:00.0  reading
     0:00:00.0  interpolation_time
     0:00:00.0  masking
    --------------------
    global_landmask
     0:00:00.4  total
     0:00:00.0  preparing
     0:00:00.3  reading
     0:00:00.0  interpolation_time
     0:00:00.0  masking
    --------------------
    Performance:
        3.8 total time
        0.0 configuration
        2.6 preparing main loop
          2.6 making dynamical landmask
          0.0 moving elements to ocean
          0.9 readers
            0.4 global_landmask
            0.2 postprocessing
        1.2 main loop
            0.0 oscillating_reader
          0.0 updating elements
        0.0 cleaning up
    --------------------
    ===========================
    Model:  OceanDrift     (OpenDrift version 1.2.0)
            25 active PassiveTracer particles  (0 deactivated, 0 scheduled)
    Projection: +proj=latlong +datum=WGS84
    -------------------
    Environment variables:
      -----
      x_sea_water_velocity
         1) oscillating_reader
      -----
      land_binary_mask
         1) global_landmask
      -----
    Readers not added for the following variables:
      x_wind
      y_sea_water_velocity
      y_wind

    Time:
            Start: 2020-03-05 22:17:54.469997
            Present: 2020-03-07 10:17:54.469997
            Calculation steps: 144 * 0:15:00 - total time: 1 day, 12:00:00
            Output steps: 73 * 0:30:00
    ===========================

    /root/project/opendrift/models/basemodel.py:2841: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()
    /root/project/opendrift/models/basemodel.py:3260: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. 
      fig.canvas.draw()

    (<cartopy.mpl.geoaxes.GeoAxesSubplot object at 0x7f224e19c250>, <module 'matplotlib.pyplot' from '/opt/conda/envs/opendrift/lib/python3.8/site-packages/matplotlib/pyplot.py'>)



.. image:: /gallery/animations/example_coastline_options_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  16.125 seconds)


.. _sphx_glr_download_gallery_example_coastline_options.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: example_coastline_options.py <example_coastline_options.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_coastline_options.ipynb <example_coastline_options.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
