.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_example_plot.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_example_plot.py:


Example plot (for front page)
==================================


.. code-block:: default


    from datetime import datetime, timedelta
    from opendrift.models.oceandrift import OceanDrift

    o = OceanDrift()
    o.add_readers_from_list(
        ['https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be'])
    o.disable_vertical_motion()
    o.seed_elements(lon=4.85, lat=60, time=datetime.now(), number=10000, radius=1000)

    o.run(duration=timedelta(hours=24))
    o.animation(filename='animation.mp4')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    17:30:07 INFO    root: locking landmask for generation..
    17:30:07 INFO    root: decompressing memmap landmask to /tmp/landmask/mask.dat..
    17:30:18 INFO    root: landmask generated
    17:30:22 DEBUG   root: Could not apply NETRC credentials
    17:30:29 DEBUG   root: Nothing to prepare for https://thredds.met.no/thredds/dodsC/sea/norkyst800m/1h/aggregate_be
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/cartopy/io/__init__.py:260: DownloadWarning: Downloading: https://www.ngdc.noaa.gov/mgg/shorelines/data/gshhs/oldversions/version2.2.0/GSHHS_shp_2.2.0.zip
      warnings.warn('Downloading: {}'.format(url), DownloadWarning)
    /opt/conda/envs/opendrift/lib/python3.9/site-packages/shapefile.py:385: UserWarning: Shapefile shape has invalid polygon: no exterior rings found (must have clockwise orientation); interpreting holes as exteriors.
      warnings.warn('Shapefile shape has invalid polygon: no exterior rings found (must have clockwise orientation); interpreting holes as exteriors.')
    17:31:23 DEBUG   matplotlib.font_manager: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    17:31:23 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    17:31:23 DEBUG   matplotlib.font_manager: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/opt/conda/envs/opendrift/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
    17:31:26 INFO    matplotlib.animation: Animation.save using <class 'matplotlib.animation.ImageMagickWriter'>
    17:31:26 INFO    matplotlib.animation: figure size in inches has been adjusted from 7.066338247948246 x 11.0 to 7.06 x 11.0
    17:31:26 DEBUG   matplotlib.animation: frame size in pixels is 706 x 1100
    17:31:26 INFO    matplotlib.animation: MovieWriter._run: running command: convert -size 706x1100 -depth 8 -delay 10.0 -loop 0 rgba:- /root/project/docs/source/gallery/animations/example_plot_0.gif
    17:31:26 DEBUG   matplotlib.font_manager: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
    17:31:26 DEBUG   matplotlib.font_manager: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
    17:31:26 DEBUG   matplotlib.font_manager: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/opt/conda/envs/opendrift/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
    17:31:26 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:27 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:27 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:27 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:28 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:29 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:30 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:31 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:32 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:33 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.
    17:31:34 DEBUG   matplotlib.animation: MovieWriter.grab_frame: Grabbing frame.




.. image:: /gallery/animations/example_plot_0.gif


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  33.357 seconds)


.. _sphx_glr_download_gallery_example_plot.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_plot.py <example_plot.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_plot.ipynb <example_plot.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
