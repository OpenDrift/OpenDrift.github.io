:mod:`opendrift.readers.reader_netCDF_CF_generic`
=================================================

.. py:module:: opendrift.readers.reader_netCDF_CF_generic


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   opendrift.readers.reader_netCDF_CF_generic.Reader



Functions
~~~~~~~~~

.. autoapisummary::

   opendrift.readers.reader_netCDF_CF_generic.proj_from_CF_dict


.. data:: logger
   

   

.. function:: proj_from_CF_dict(c)


.. py:class:: Reader(filename=None, name=None, proj4=None, standard_name_mapping={})

   Bases: :class:`opendrift.readers.basereader.BaseReader`, :class:`opendrift.readers.basereader.StructuredReader`

   A reader for `CF-compliant <https://cfconventions.org/>`_ netCDF files. It can take a single file, or a file pattern.

   Args:
       :param filename: A single netCDF file, or a pattern of files. The
                        netCDF file can also be an URL to an OPeNDAP server.
       :type filename: string, requiered.

       :param name: Name of reader
       :type name: string, optional

       :param proj4: PROJ.4 string describing projection of data.
       :type proj4: string, optional

   Example:

   .. code::

      from opendrift.readers.reader_netCDF_CF_generic import Reader
      r = Reader("arome_subset_16Nov2015.nc")

   Several files can be specified by using a pattern:

   .. code::

      from opendrift.readers.reader_netCDF_CF_generic import Reader
      r = Reader("*.nc")

   or an OPeNDAP URL can be used:

   .. code::

      from opendrift.readers.reader_netCDF_CF_generic import Reader
      r = Reader('https://thredds.met.no/thredds/dodsC/mepslatest/meps_lagged_6_h_latest_2_5km_latest.nc')



   Common constructor for all readers

   .. method:: get_variables(self, requested_variables, time=None, x=None, y=None, z=None, indrealization=None)

      Method which must be implemented by all reader-subclasses.

      .. warning::

          Warning: In the future this method is likely to be a requirement of
          each reader, and it will be up to the reader-type how values are
          retrieved.

      Obtain and return values of the requested variables at all positions
      (x, y, z) closest to given time.

      Arguments:
          variables: string, or list of strings (standard_name) of
          requested variables. These must be provided by reader.

          time: datetime or None, time at which data are requested.
          Can be None (default) if reader/variable has no time
          dimension (e.g. climatology or landmask).

          x, y: float or ndarrays; coordinates of requested points in the
          Spatial Reference System (SRS) _of the reader (NB!!)_.

          z: float or ndarray; vertical position (in meters, positive up)
          of requested points. default: 0 m (unless otherwise documented by reader)

          block: bool, see return below

        Returns:
          data: Dictionary

          keywords: variables (string)

          values:

          - 1D ndarray of len(x) if StructuredReader. Nearest values
              (neighbour) of requested position are returned.

          - 3D ndarray encompassing all requested points in
              x,y,z domain if UnstructuredReader. It is task of invoking
              application (OpenDriftSimulation) to perform
              interpolation in space and time.



