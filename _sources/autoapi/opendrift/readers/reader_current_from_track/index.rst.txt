opendrift.readers.reader_current_from_track
===========================================

.. py:module:: opendrift.readers.reader_current_from_track


Classes
-------

.. autoapisummary::

   opendrift.readers.reader_current_from_track.Reader


Module Contents
---------------

.. py:class:: Reader(obslon, obslat, obstime, obsfile=None, wind_east=0, wind_north=0, windreader=None, wind_factor=0.018, name=None)

   Bases: :py:obj:`opendrift.readers.basereader.BaseReader`, :py:obj:`opendrift.readers.basereader.ContinuousReader`


   An abstract reader. Implementors provide a method to read data and specify how it is interpolated.

   This class inherits :class:`.variables.Variables` which inherits :class:`.variables.ReaderDomain`. `ReaderDomain` is responsible for the extent and domain of the reader, including checking for out-of-bounds and projection conversion. `Variables` is responsible for returning interpolated data at the requests positions or profiles. Apart from coercing the returned data into the right type for :py:mod:`opendrift.models.basemodel`, it defines the abstract interface to :meth:`.variables.Variables._get_variables_interpolated_` which reader-implementations must provide (_usually_ through one of the main reader-types, see: :py:mod:`opendrift.readers`).

   .. seealso::

       :py:mod:`opendrift.readers`.

       :py:mod:`.variables`.

   Reader which statistically extrapolate current forcing.
   It uses the residual track obtained by subtracting the wind forcing component
   from the past observed motion of a particle.


   .. py:attribute:: variables
      :value: ['x_sea_water_velocity', 'y_sea_water_velocity']



   .. py:attribute:: proj4
      :value: '+proj=latlong'



   .. py:attribute:: xmin


   .. py:attribute:: xmax
      :value: 180



   .. py:attribute:: ymin


   .. py:attribute:: ymax
      :value: 90



   .. py:attribute:: z


   .. py:attribute:: start_time


   .. py:attribute:: end_time


   .. py:attribute:: times

      Setting this to `True` overrides temporal and spatial bounds checks.
      Also useful for readers that are constant and do not have a temporal
      dimension.



   .. py:attribute:: time_step


   .. py:attribute:: time_delta_seconds


   .. py:attribute:: g


   .. py:attribute:: speed


   .. py:attribute:: x_sea_water_velocity


   .. py:attribute:: y_sea_water_velocity


   .. py:method:: get_variables(requested_variables, time=None, x=None, y=None, z=None)

      Obtain and return values of the requested variables at all positions
      (x, y, z) closest to given time.

      Returns:

          Dictionary with arrays of length len(x) with values at exact positions x, y and z.



