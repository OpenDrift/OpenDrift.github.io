:mod:`opendrift.readers`
========================

.. py:module:: opendrift.readers


Subpackages
-----------
.. toctree::
   :titlesonly:
   :maxdepth: 3

   roppy/index.rst


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   basereader/index.rst
   interpolation/index.rst
   reader_ArtificialOceanEddy/index.rst
   reader_FVCOM/index.rst
   reader_ROMS_native/index.rst
   reader_cmems/index.rst
   reader_constant/index.rst
   reader_current_from_drifter/index.rst
   reader_current_from_track/index.rst
   reader_double_gyre/index.rst
   reader_global_landmask/index.rst
   reader_grib/index.rst
   reader_lazy/index.rst
   reader_netCDF_CF_generic/index.rst
   reader_netCDF_CF_unstructured/index.rst
   reader_oscillating/index.rst


Package Contents
----------------

.. py:class:: Reader(filename=None, name=None, proj4=None)

   Bases: :class:`opendrift.readers.basereader.BaseReader`

   A reader for `CF-compliant <http://cfconventions.org/>`_ netCDF files. It can take a single file, or a file pattern.

   Args:
       :param filename: A single netCDF file, or a pattern of files. The
                        netCDF file can also be an URL to an OPeNDAP server.
       :type filename: string, requiered.

       :param name: Name of reader
       :type name: string, optional

       :param proj4: PROJ.4 string describing projection of data.
       :type proj4: string, optional

   Example:

   .. code::

      from opendrift.readers import Reader
      r = Reader("arome_subset_16Nov2015.nc")

   Several files can be specified by using a pattern:

   .. code::

      from opendrift.readers import Reader
      r = Reader("*.nc")

   or an OPeNDAP URL can be used:

   .. code::

      from opendrift.readers import Reader
      r = Reader('http://thredds.met.no/thredds/dodsC/meps25files/meps_det_extracted_2_5km_latest.nc')


   .. method:: get_variables(self, requested_variables, time=None, x=None, y=None, z=None, block=False, indrealization=None)




.. function:: reader_from_url(url, timeout=10)

   Make readers from URLs or paths to datasets


