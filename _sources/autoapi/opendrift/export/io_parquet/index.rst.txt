:py:mod:`opendrift.export.io_parquet`
=====================================

.. py:module:: opendrift.export.io_parquet


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   opendrift.export.io_parquet.init
   opendrift.export.io_parquet.write_buffer
   opendrift.export.io_parquet.close
   opendrift.export.io_parquet.import_file
   opendrift.export.io_parquet.import_file_xarray



Attributes
~~~~~~~~~~

.. autoapisummary::

   opendrift.export.io_parquet.logger


.. py:data:: logger

   

.. py:function:: init(self, filename)


.. py:function:: write_buffer(self)


.. py:function:: close(self)


.. py:function:: import_file(self, filename, times=None, elements=None, load_history=True)

   Create OpenDrift object from imported file.
   This reimport is potentially very costly anyway 


.. py:function:: import_file_xarray(self, filename, times=None, elements=None, load_history=True)

   Create OpenDrift object from file
   Odd if this I/O backend specific feature were required for all of opendrift to run


