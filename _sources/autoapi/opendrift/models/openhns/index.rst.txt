:py:mod:`opendrift.models.openhns`
==================================

.. py:module:: opendrift.models.openhns

.. autoapi-nested-parse::

   OpenHNS is a 3D HNS drift module bundled within the OpenDrift framework.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   opendrift.models.openhns.HNS
   opendrift.models.openhns.OpenHNS




Attributes
~~~~~~~~~~

.. autoapisummary::

   opendrift.models.openhns.logger


.. py:data:: logger

   

.. py:class:: HNS(**kwargs)

   Bases: :py:obj:`opendrift.models.oceandrift.Lagrangian3DArray`

   Extending LagrangianArray with variables relevant for HNS particles.

   Initialises a LagrangianArray with given properties.

   Args:
       Keyword arguments (kwargs) with names corresponding to the
       OrderedDict 'variables' of the class, and corresponding values.
       The values must be ndarrays of equal length, or scalars.
       All (or none) variables must be given, unless a default value
       is specified in the OrderedDict 'variables'
       An empty object may be created by giving no input.

   .. py:attribute:: variables

      


.. py:class:: OpenHNS(*args, **kwargs)

   Bases: :py:obj:`opendrift.models.oceandrift.OceanDrift`

   Open source HNS drift model based on the OpenDrift framework.

   Developed at MET Norway based on parameterisations
   found in open/published litterature.

   Under construction.

   Initialise OpenDriftSimulation

   Args:
       seed: integer or None. A given integer will yield identical
           random numbers drawn each simulation. Random numbers are
           e.g. used to distribute particles spatially when seeding,
           and may be used by modules (subclasses) for e.g. diffusion.
           Specifying a fixed value (default: 0) is useful for sensitivity
           tests. With seed = None, different random numbers will be drawn
           for subsequent runs, even with identical configuration/input.
       iomodule: name of module used to export data
           default: netcdf, see :py:mod:`opendrift.io` for more alternatives.
           `iomodule` is module/filename without preceeding `io_`
       loglevel: set to 0 (default) to retrieve all debug information.
           Provide a higher value (e.g. 20) to receive less output.
           Use the string 'custom' to configure logging from outside.
       logtime: if True, a time stamp is given for each logging line.
                logtime can also be given as a python time specifier
                (e.g. '%H:%M:%S')

   .. py:attribute:: ElementType

      

   .. py:attribute:: required_variables

      

   .. py:attribute:: required_profiles_z_range

      

   .. py:attribute:: max_speed
      :value: 1.3

      

   .. py:attribute:: hnstypes
      :value: ['chem1', 'chem2']

      

   .. py:attribute:: status_colors

      

   .. py:method:: evaporation()


   .. py:method:: update()

      Update positions and properties of elements.



