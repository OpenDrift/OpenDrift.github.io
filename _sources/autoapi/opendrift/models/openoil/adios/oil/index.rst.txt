opendrift.models.openoil.adios.oil
==================================

.. py:module:: opendrift.models.openoil.adios.oil

.. autoapi-nested-parse::

   Interface to the ADIOS oil database.



Attributes
----------

.. autoapisummary::

   opendrift.models.openoil.adios.oil.logger


Exceptions
----------

.. autoapisummary::

   opendrift.models.openoil.adios.oil.NotFullOil


Classes
-------

.. autoapisummary::

   opendrift.models.openoil.adios.oil.OpendriftOil


Functions
---------

.. autoapisummary::

   opendrift.models.openoil.adios.oil.__require_gnome_oil__


Module Contents
---------------

.. py:data:: logger

.. py:exception:: NotFullOil

   Bases: :py:obj:`Exception`


   Common base class for all non-exit exceptions.

   Initialize self.  See help(type(self)) for accurate signature.


.. py:function:: __require_gnome_oil__(f)

.. py:class:: OpendriftOil(o)

   .. py:attribute:: id
      :type:  str


   .. py:attribute:: type
      :type:  str


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: API
      :type:  float


   .. py:attribute:: gnome_suitable
      :type:  bool


   .. py:attribute:: labels
      :type:  List[str]


   .. py:attribute:: location
      :type:  str


   .. py:attribute:: model_completeness
      :type:  float


   .. py:attribute:: product_type
      :type:  str


   .. py:attribute:: sample_date
      :type:  str


   .. py:attribute:: data
      :type:  dict


   .. py:attribute:: oil
      :type:  adios_db.models.oil.oil.Oil


   .. py:attribute:: gnome_oil
      :type:  dict


   .. py:attribute:: meta


   .. py:method:: __repr__()

      Return repr(self).



   .. py:method:: json()


   .. py:method:: make_full()


   .. py:method:: valid()

      Check whether this oil can be used in Opendrift simulations.



   .. py:method:: density_at_temp(t, unit='K')

      Return density at temperature (in Kelvin by default).



   .. py:method:: kvis_at_temp(t, unit='K')


   .. py:property:: mass_fraction
      :type: numpy.ndarray



   .. py:method:: oil_water_surface_tension()


   .. py:property:: bulltime
      :type: float



   .. py:property:: bullwinkle
      :type: float



   .. py:property:: emulsion_water_fraction_max
      :type: float



   .. py:method:: vapor_pressure(temp)

      Calculate vapor pressure. This method is taken from the old oil_library.

      Args:

          temp: temperature in Kelvin.

      Returns:

          Array of vapor pressures for each component. Pascal.



   .. py:property:: molecular_weight


   .. py:property:: k0y
      :type: float



