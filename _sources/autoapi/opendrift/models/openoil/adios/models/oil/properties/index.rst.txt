:py:mod:`opendrift.models.openoil.adios.models.oil.properties`
==============================================================

.. py:module:: opendrift.models.openoil.adios.models.oil.properties

.. autoapi-nested-parse::

   Classes for storing measured values within an Oil record



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   opendrift.models.openoil.adios.models.oil.properties.InterfacialTensionPoint
   opendrift.models.openoil.adios.models.oil.properties.InterfacialTensionList
   opendrift.models.openoil.adios.models.oil.properties.Dispersibility
   opendrift.models.openoil.adios.models.oil.properties.DispersibilityList
   opendrift.models.openoil.adios.models.oil.properties.Emulsion
   opendrift.models.openoil.adios.models.oil.properties.EmulsionList
   opendrift.models.openoil.adios.models.oil.properties.ESTSEvaporationTest




.. py:class:: InterfacialTensionPoint

   .. py:attribute:: tension
      :annotation: :opendrift.models.openoil.adios.models.common.measurement.InterfacialTension

      

   .. py:attribute:: ref_temp
      :annotation: :opendrift.models.openoil.adios.models.common.measurement.Temperature

      

   .. py:attribute:: interface
      :annotation: :str

      

   .. py:attribute:: method
      :annotation: :str

      


.. py:class:: InterfacialTensionList

   Bases: :py:obj:`opendrift.models.openoil.adios.models.common.utilities.JSON_List`

   just like a list, but with the ability to turn it into JSON

   A regular list can only be converted to JSON if it has
   JSON-able objects in it.

   Note: must be subclassed, and the item_type attribute set

   Initialize self.  See help(type(self)) for accurate signature.

   .. py:attribute:: item_type
      

      


.. py:class:: Dispersibility

   .. py:attribute:: dispersant
      :annotation: :str

      

   .. py:attribute:: effectiveness
      :annotation: :opendrift.models.openoil.adios.models.common.measurement.MassFraction

      

   .. py:attribute:: method
      :annotation: :str

      


.. py:class:: DispersibilityList

   Bases: :py:obj:`opendrift.models.openoil.adios.models.common.utilities.JSON_List`

   just like a list, but with the ability to turn it into JSON

   A regular list can only be converted to JSON if it has
   JSON-able objects in it.

   Note: must be subclassed, and the item_type attribute set

   Initialize self.  See help(type(self)) for accurate signature.

   .. py:attribute:: item_type
      

      


.. py:class:: Emulsion

   There is no use for an empty Emulsion object

   But there is a use for one that has an arbitrary subset of fields,

   so making them all optional

   .. py:attribute:: age
      :annotation: :opendrift.models.openoil.adios.models.common.measurement.Time

      

   .. py:attribute:: water_content
      :annotation: :opendrift.models.openoil.adios.models.common.measurement.MassFraction

      

   .. py:attribute:: ref_temp
      :annotation: :opendrift.models.openoil.adios.models.common.measurement.Temperature

      

   .. py:attribute:: complex_modulus
      :annotation: :opendrift.models.openoil.adios.models.common.measurement.Pressure

      

   .. py:attribute:: storage_modulus
      :annotation: :opendrift.models.openoil.adios.models.common.measurement.Pressure

      

   .. py:attribute:: loss_modulus
      :annotation: :opendrift.models.openoil.adios.models.common.measurement.Pressure

      

   .. py:attribute:: tan_delta_v_e
      :annotation: :opendrift.models.openoil.adios.models.common.measurement.Unitless

      

   .. py:attribute:: complex_viscosity
      :annotation: :opendrift.models.openoil.adios.models.common.measurement.DynamicViscosity

      

   .. py:attribute:: method
      :annotation: :str

      

   .. py:attribute:: visual_stability
      :annotation: :str

      


.. py:class:: EmulsionList

   Bases: :py:obj:`opendrift.models.openoil.adios.models.common.utilities.JSON_List`

   just like a list, but with the ability to turn it into JSON

   A regular list can only be converted to JSON if it has
   JSON-able objects in it.

   Note: must be subclassed, and the item_type attribute set

   Initialize self.  See help(type(self)) for accurate signature.

   .. py:attribute:: item_type
      

      


.. py:class:: ESTSEvaporationTest

   .. py:attribute:: a_for_ev_a_b_ln_t_c
      :annotation: :float

      

   .. py:attribute:: a_for_ev_a_b_ln_t
      :annotation: :float

      

   .. py:attribute:: a_for_ev_a_b_sqrt_t
      :annotation: :float

      

   .. py:attribute:: b_for_ev_a_b_ln_t_c
      :annotation: :float

      

   .. py:attribute:: b_for_ev_a_b_ln_t
      :annotation: :float

      

   .. py:attribute:: b_for_ev_a_b_sqrt_t
      :annotation: :float

      

   .. py:attribute:: c_for_ev_a_b_ln_t_c
      :annotation: :float

      

   .. py:attribute:: method
      :annotation: :str

      


