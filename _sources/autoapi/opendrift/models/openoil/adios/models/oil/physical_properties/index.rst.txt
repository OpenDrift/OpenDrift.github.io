:py:mod:`opendrift.models.openoil.adios.models.oil.physical_properties`
=======================================================================

.. py:module:: opendrift.models.openoil.adios.models.oil.physical_properties

.. autoapi-nested-parse::

   Main class that represents an oil record.

   This maps to the JSON used in the DB

   Having a Python class makes it easier to write importing, validating etc, code.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   opendrift.models.openoil.adios.models.oil.physical_properties.RefTempList
   opendrift.models.openoil.adios.models.oil.physical_properties.DensityPoint
   opendrift.models.openoil.adios.models.oil.physical_properties.DensityList
   opendrift.models.openoil.adios.models.oil.physical_properties.DynamicViscosityPoint
   opendrift.models.openoil.adios.models.oil.physical_properties.DynamicViscosityList
   opendrift.models.openoil.adios.models.oil.physical_properties.KinematicViscosityPoint
   opendrift.models.openoil.adios.models.oil.physical_properties.KinematicViscosityList
   opendrift.models.openoil.adios.models.oil.physical_properties.PourPoint
   opendrift.models.openoil.adios.models.oil.physical_properties.FlashPoint
   opendrift.models.openoil.adios.models.oil.physical_properties.InterfacialTensionPoint
   opendrift.models.openoil.adios.models.oil.physical_properties.InterfacialTensionList
   opendrift.models.openoil.adios.models.oil.physical_properties.PhysicalProperties




.. py:class:: RefTempList


   mixin for all classes that are a list of points with
   reference temperatures

   .. py:method:: validate()

      validater for anything that has a list of reference temps

      e.g. density and viscosity

      For viscosity it checks for shear rate as well.



.. py:class:: DensityPoint


   .. py:attribute:: density
      :type: opendrift.models.openoil.adios.models.common.measurement.Density

      

   .. py:attribute:: ref_temp
      :type: opendrift.models.openoil.adios.models.common.measurement.Temperature

      

   .. py:attribute:: method
      :type: str

      


.. py:class:: DensityList


   Bases: :py:obj:`opendrift.models.openoil.adios.models.common.utilities.JSON_List`, :py:obj:`RefTempList`

   just like a list, but with the ability to turn it into JSON

   A regular list can only be converted to JSON if it has
   JSON-able objects in it.

   Note: must be subclassed, and the item_type attribute set

   Initialize self.  See help(type(self)) for accurate signature.

   .. py:attribute:: item_type

      


.. py:class:: DynamicViscosityPoint


   .. py:attribute:: viscosity
      :type: opendrift.models.openoil.adios.models.common.measurement.DynamicViscosity

      

   .. py:attribute:: ref_temp
      :type: opendrift.models.openoil.adios.models.common.measurement.Temperature

      

   .. py:attribute:: shear_rate
      :type: opendrift.models.openoil.adios.models.common.measurement.AngularVelocity

      

   .. py:attribute:: method
      :type: str

      


.. py:class:: DynamicViscosityList


   Bases: :py:obj:`opendrift.models.openoil.adios.models.common.utilities.JSON_List`, :py:obj:`RefTempList`

   just like a list, but with the ability to turn it into JSON

   A regular list can only be converted to JSON if it has
   JSON-able objects in it.

   Note: must be subclassed, and the item_type attribute set

   Initialize self.  See help(type(self)) for accurate signature.

   .. py:attribute:: item_type

      


.. py:class:: KinematicViscosityPoint


   .. py:attribute:: viscosity
      :type: opendrift.models.openoil.adios.models.common.measurement.KinematicViscosity

      

   .. py:attribute:: ref_temp
      :type: opendrift.models.openoil.adios.models.common.measurement.Temperature

      

   .. py:attribute:: shear_rate
      :type: opendrift.models.openoil.adios.models.common.measurement.AngularVelocity

      

   .. py:attribute:: method
      :type: str

      


.. py:class:: KinematicViscosityList


   Bases: :py:obj:`opendrift.models.openoil.adios.models.common.utilities.JSON_List`, :py:obj:`RefTempList`

   just like a list, but with the ability to turn it into JSON

   A regular list can only be converted to JSON if it has
   JSON-able objects in it.

   Note: must be subclassed, and the item_type attribute set

   Initialize self.  See help(type(self)) for accurate signature.

   .. py:attribute:: item_type

      


.. py:class:: PourPoint


   .. py:attribute:: measurement
      :type: opendrift.models.openoil.adios.models.common.measurement.Temperature

      

   .. py:attribute:: method
      :type: str

      


.. py:class:: FlashPoint


   .. py:attribute:: measurement
      :type: opendrift.models.openoil.adios.models.common.measurement.Temperature

      

   .. py:attribute:: method
      :type: str

      


.. py:class:: InterfacialTensionPoint


   .. py:attribute:: tension
      :type: opendrift.models.openoil.adios.models.common.measurement.InterfacialTension

      

   .. py:attribute:: ref_temp
      :type: opendrift.models.openoil.adios.models.common.measurement.Temperature

      

   .. py:attribute:: method
      :type: str

      


.. py:class:: InterfacialTensionList


   Bases: :py:obj:`opendrift.models.openoil.adios.models.common.utilities.JSON_List`, :py:obj:`RefTempList`

   just like a list, but with the ability to turn it into JSON

   A regular list can only be converted to JSON if it has
   JSON-able objects in it.

   Note: must be subclassed, and the item_type attribute set

   Initialize self.  See help(type(self)) for accurate signature.

   .. py:attribute:: item_type

      


.. py:class:: PhysicalProperties


   .. py:attribute:: pour_point
      :type: PourPoint

      

   .. py:attribute:: flash_point
      :type: FlashPoint

      

   .. py:attribute:: densities
      :type: DensityList

      

   .. py:attribute:: kinematic_viscosities
      :type: KinematicViscosityList

      

   .. py:attribute:: dynamic_viscosities
      :type: DynamicViscosityList

      

   .. py:attribute:: interfacial_tension_air
      :type: InterfacialTensionList

      

   .. py:attribute:: interfacial_tension_water
      :type: InterfacialTensionList

      

   .. py:attribute:: interfacial_tension_seawater
      :type: InterfacialTensionList

      


