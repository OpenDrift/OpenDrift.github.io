:mod:`opendrift.models.shipdrift`
=================================

.. py:module:: opendrift.models.shipdrift


Module Contents
---------------

.. py:class:: ShipObject

   Bases: :class:`opendrift.elements.LagrangianArray`

   Extending LagrangianArray with variables relevant for leeway objects.

       

   .. attribute:: variables
      

      


.. py:class:: ShipDrift(*args, **kwargs)

   Bases: :class:`opendrift.models.basemodel.OpenDriftSimulation`

   Demonstration trajectory model based on OpenDrift framework.

   Simply advects a particle (passive tracer with
   no properties except for position) with the ambient wind.

   .. attribute:: ElementType
      

      

   .. attribute:: required_variables
      :annotation: = ['x_wind', 'y_wind', 'land_binary_mask', 'x_sea_water_velocity', 'y_sea_water_velocity', 'sea_surface_wave_stokes_drift_x_velocity', 'sea_surface_wave_stokes_drift_y_velocity', 'sea_surface_wave_significant_height', 'sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment']

      

   .. attribute:: fallback_values
      

      

   .. attribute:: max_speed
      :annotation: = 2

      

   .. attribute:: winwav_angle
      :annotation: = 20

      

   .. attribute:: configspec
      :annotation: = 
           [seed]
               length = float(min=1, max=500, default=80)
               height = float(min=1, max=50, default=12)
               draft = float(min=1, max=20, default=4)
               beam = float(min=1, max=30, default=10)
           [drift]
               current_uncertainty = float(min=0, max=5, default=0.05)
               wind_uncertainty = float(min=0, max=5, default=.5)
           

      

   .. method:: seed_elements(self, *args, **kwargs)



   .. method:: update(self)



   .. method:: import_ascii_format(self, filename)




