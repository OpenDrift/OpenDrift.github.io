:mod:`opendrift.models.openberg`
================================

.. py:module:: opendrift.models.openberg


Module Contents
---------------

.. py:class:: IcebergObj

   Bases: :class:`opendrift.elements.elements.LagrangianArray`

   Extending LagrangianArray with variables relevant for iceberg objects.

       

   .. attribute:: variables
      

      


.. py:class:: OpenBerg(d=None, label=None, *args, **kwargs)

   Bases: :class:`opendrift.models.basemodel.OpenDriftSimulation`

   The Deterministic iceberg model in the OpenDrift framework.

   Advects an iceberg with the current at all available depths and
   as a function of the wind vector according to the above and below
   water cross-sectional profile of the object.

   .. attribute:: ElementType
      

      

   .. attribute:: required_variables
      :annotation: = ['x_wind', 'y_wind', 'x_sea_water_velocity', 'y_sea_water_velocity', 'land_binary_mask']

      

   .. attribute:: fallback_values
      

      

   .. attribute:: status_colors
      

      

   .. method:: update(self)


      Update positions and properties of icebergs.


   .. method:: prepare_run(self)


      Model spesific preparations.
      Set the weighting for modelled current depths as per Table 5 of Barker 2004,
      'Determination of Iceberg Draft, Mass and Cross-Sectional Areas',
      Proceedings of The Fourteenth (2004) International Offshore and 
      Polar Engineering Conference.

      NB! This version of OpenBerg does not allow for seeding of iceberg elements
      of different sizes.

      Also controles that the model handles readers without block data correctly.


   .. method:: composite_iceberg(self, water_line_length=90.5, depth=60)


      This function creates a weigthing array for the current across the keel of an
      iceberg based on waterline length and keel depth. The function uses the parameters
      in table 5 from Barker et. al.(2004).


   .. method:: lin_func(self, a, b, L)


      Returns value of linear function A=aL+b.



