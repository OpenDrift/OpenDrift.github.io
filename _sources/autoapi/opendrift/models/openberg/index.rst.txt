:mod:`opendrift.models.openberg`
================================

.. py:module:: opendrift.models.openberg

.. autoapi-nested-parse::

   OpenBerg is an iceberg drift module bundled within the OpenDrift framework. It is a 2D- driftmodel, but utilizes 3D current data. The latest verion of the module is an improved version of a model initially created by Ron Saper at the Carleton University as a part of a larger project funded by the MITACS Organization.

   See :doc:`gallery/example_long_openberg_det` for an example of a deterministic simulation.

   Statistical modeling of current velocity
   ########################################
   The reader :mod:`opendrift.readers.reader_current_from_track` is designed specifically for iceberg drift modeling. The reader uses observed positions and (if available) wind data to extrapolate the current velocity. The reader creates a uniform current field equal to the average residual speed (after subtracting wind component) of the iceberg between two observations.

   This reader allows for a statistical or partly statistical modeling of iceberg drift when used with the OpenBerg module. An example script utilizing this reader can be found :doc:`here <gallery/example_long_openberg_stat>`.

   Parameters and iceberg properties affecting drift
   #################################################
   Icebergs are advected at a constant fraction of the wind velocity, default setting is ``wind_drift_factor = 0.018``

   The module accounts for Iceberg geometry by creating a compostite iceberg using the method described by `Barker et. al. (2004) <https://www.researchgate.net/publication/44062061_Determination_of_Iceberg_Draft_Mass_and_Cross-Sectional_Areas>`_, where the geometry is described as a function of the waterline length and the keel depth of the iceberg. For further reading the article is available on this link.

   Default setting: ``water_line_length = 90.5`` and ``keel_depth = 60``. The composite iceberg is used to calculate a weighted average of the current velocity across the iceberg keel.

   The values of wind_drift_factor, water_line_length and keel_depth may explicitly be altered during seeding, e.g.::

       o.seed_elements(4, 62, time=datetime.now(),
                       water_line_length=100, keel_depth=90, wind_drift_factor=0.02)


   Ref: Barker, A., Sayed, M., Carrieres, T., et al. (2004). Determination of iceberg draft, mass and cross-sectional areas.



Module Contents
---------------


.. py:class:: IcebergObj(**kwargs)

   Bases: :class:`opendrift.elements.elements.LagrangianArray`

   Extending LagrangianArray with variables relevant for iceberg objects.

       

   .. attribute:: variables
      

      


.. py:class:: OpenBerg(d=None, label=None, *args, **kwargs)

   Bases: :class:`opendrift.models.basemodel.OpenDriftSimulation`

   The Deterministic iceberg model in the OpenDrift framework.

   Advects an iceberg with the current at all available depths and
   as a function of the wind vector according to the above and below
   water cross-sectional profile of the object.

   .. attribute:: ElementType
      

      

   .. attribute:: required_variables
      :annotation: = ['x_wind', 'y_wind', 'x_sea_water_velocity', 'y_sea_water_velocity', 'land_binary_mask']

      

   .. attribute:: fallback_values
      

      

   .. attribute:: status_colors
      

      

   .. method:: update(self)


      Update positions and properties of icebergs.


   .. method:: prepare_run(self)


      Model spesific preparations.
      Set the weighting for modelled current depths as per Table 5 of Barker 2004,
      'Determination of Iceberg Draft, Mass and Cross-Sectional Areas',
      Proceedings of The Fourteenth (2004) International Offshore and
      Polar Engineering Conference.

      NB! This version of OpenBerg does not allow for seeding of iceberg elements
      of different sizes.

      Also controles that the model handles readers without block data correctly.


   .. method:: composite_iceberg(self, water_line_length=90.5, depth=60)


      This function creates a weigthing array for the current across the keel of an
      iceberg based on waterline length and keel depth. The function uses the parameters
      in table 5 from Barker et. al.(2004).


   .. method:: lin_func(self, a, b, L)


      Returns value of linear function A=aL+b.



