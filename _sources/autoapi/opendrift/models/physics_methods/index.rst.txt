:mod:`opendrift.models.physics_methods`
=======================================

.. py:module:: opendrift.models.physics_methods


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   opendrift.models.physics_methods.PhysicsMethods



Functions
~~~~~~~~~

.. autoapisummary::

   opendrift.models.physics_methods.oil_wave_entrainment_rate_li2017
   opendrift.models.physics_methods.significant_wave_height_from_wind_neumann_pierson
   opendrift.models.physics_methods.wave_breaking_fraction_from_wind
   opendrift.models.physics_methods.wave_period_from_wind
   opendrift.models.physics_methods.verticaldiffusivity_Sundby1983
   opendrift.models.physics_methods.verticaldiffusivity_Large1994
   opendrift.models.physics_methods.verticaldiffusivity_stepfunction
   opendrift.models.physics_methods.gls_tke
   opendrift.models.physics_methods.stokes_drift_profile_breivik
   opendrift.models.physics_methods.ftle
   opendrift.models.physics_methods.wind_drag_coefficient
   opendrift.models.physics_methods.windspeed_from_stress_polyfit
   opendrift.models.physics_methods.declination
   opendrift.models.physics_methods.equation_of_time
   opendrift.models.physics_methods.hour_angle
   opendrift.models.physics_methods.solar_elevation


.. data:: logger
   

   

.. function:: oil_wave_entrainment_rate_li2017(dynamic_viscosity, oil_density, interfacial_tension, significant_wave_height=None, wave_breaking_fraction=None, wind_speed=None, sea_water_density=1028.0)


.. function:: significant_wave_height_from_wind_neumann_pierson(wind_speed)


.. function:: wave_breaking_fraction_from_wind(wind_speed, wave_period=None)


.. function:: wave_period_from_wind(wind_speed)


.. function:: verticaldiffusivity_Sundby1983(windspeed)

   Vertical diffusivity from Sundby (1983)

   S. Sundby (1983): A one-dimensional model for the vertical
       distribution of pelagic fish eggs in the mixed layer
       Deep Sea Research (30) pp. 645-661


.. function:: verticaldiffusivity_Large1994(windspeed, depth, mixedlayerdepth=50)

   Vertical diffusivity from Large et al. (1994)

   Depending on windspeed, depth and mixed layer depth (default 50m).


.. function:: verticaldiffusivity_stepfunction(depth, MLD=20, k_above=0.1, k_below=0.02)

   eddy diffusivity with discontinuity for testing of mixing scheme


.. function:: gls_tke(windstress, depth, sea_water_density, tke, generic_length_scale, gls_parameters=None)

   From LADIM model.


.. function:: stokes_drift_profile_breivik(stokes_u_surface, stokes_v_surface, significant_wave_height, mean_wave_period, z)

   Calculate vertical Stokes drift profile from
   Breivik et al. 2016, A Stokes drift approximation
   based on the Phillips spectrum, Ocean Mod. 100


.. function:: ftle(X, Y, delta, duration)

   Calculate Finite Time Lyapunov Exponents


.. py:class:: PhysicsMethods

   Physics methods to be inherited by OpenDriftSimulation class

   .. method:: sea_water_density(T=10.0, S=35.0)
      :staticmethod:

      The function gives the density of seawater at one atmosphere
      pressure as given in :

      N.P. Fofonoff and R.C. Millard Jr.,1983,
      Unesco technical papers in marine science no. 44.

      S   = Salinity in promille of the seawater
      T   = Temperature of the seawater in degrees Celsius


   .. method:: advect_ocean_current(self, factor=1)


   .. method:: advect_with_sea_ice(self, factor=1)


   .. method:: advect_wind(self, factor=1)


   .. method:: stokes_drift(self, factor=1)


   .. method:: wave_stokes_drift_parameterised(self, wind, fetch)

      Parameterise stokes drift based on pre calculated tables and fetch.


   .. method:: wave_significant_height_parameterised(self, wind, fetch)

      Parameterise significant wave height based on pre calculated tables and fetch.


   .. method:: resurface_elements(self, minimum_depth)


   .. method:: calculate_missing_environment_variables(self)


   .. method:: wind_speed(self)


   .. method:: current_speed(self)


   .. method:: significant_wave_height(self)


   .. method:: _wave_frequency(self)


   .. method:: wave_period(self)


   .. method:: wave_energy(self)


   .. method:: wave_energy_dissipation(self)


   .. method:: wave_damping_coefficient(self)


   .. method:: sea_surface_wave_breaking_fraction(self)


   .. method:: air_density(self)


   .. method:: windspeed_from_stress(self)


   .. method:: solar_elevation(self)

      Solar elevation at present time and position of active elements.


   .. method:: sea_floor_depth(self)

      Sea floor depth (positive) for presently active elements


   .. method:: lift_elements_to_seafloor(self)

      Lift any elements which are below seafloor



.. function:: wind_drag_coefficient(windspeed)

   Large and Pond (1981), J. Phys. Oceanog., 11, 324-336.


.. function:: windspeed_from_stress_polyfit(wind_stress)

   Inverting Large and Pond (1981) using polyfit


.. function:: declination(time)

   Solar declination in degrees.


.. function:: equation_of_time(time)

   Equation of time in minutes.


.. function:: hour_angle(time, longitude)

   Solar hour angle in degrees.


.. function:: solar_elevation(time, longitude, latitude)

   Solar elevation in degrees.


