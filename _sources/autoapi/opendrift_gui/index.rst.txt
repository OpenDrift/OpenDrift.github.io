opendrift_gui
=============

.. py:module:: opendrift_gui


Classes
-------

.. autoapisummary::

   opendrift_gui.TextRedirector
   opendrift_gui.ToolTip
   opendrift_gui.OpenDriftGUI


Functions
---------

.. autoapisummary::

   opendrift_gui.CreateToolTip
   opendrift_gui.main


Module Contents
---------------

.. py:class:: TextRedirector(widget, tag='stdout')

   .. py:attribute:: defstdout


   .. py:attribute:: widget


   .. py:attribute:: tag
      :value: 'stdout'



   .. py:method:: write(str)


   .. py:method:: flush()


.. py:class:: ToolTip(widget)

   Bases: :py:obj:`object`


   .. py:attribute:: widget


   .. py:attribute:: tipwindow
      :value: None



   .. py:attribute:: id
      :value: None



   .. py:method:: showtip(text)

      Display text in tooltip window



   .. py:method:: hidetip()


.. py:function:: CreateToolTip(widget, text)

.. py:class:: OpenDriftGUI(forcing_files)

   Bases: :py:obj:`tkinter.Tk`


   Toplevel widget of Tk which represents mostly the main window
   of an application. It has an associated Tcl interpreter.

   Return a new top level widget on screen SCREENNAME. A new Tcl interpreter will
   be created. BASENAME will be used for the identification of the profile file (see
   readprofile).
   It is constructed from sys.argv[0] without extensions if None is given. CLASSNAME
   is the name of the widget class.


   .. py:attribute:: opendrift_models


   .. py:attribute:: extra_args


   .. py:attribute:: GUI_config


   .. py:attribute:: n


   .. py:attribute:: seed


   .. py:attribute:: confignotebook


   .. py:attribute:: config


   .. py:attribute:: forcing


   .. py:attribute:: top


   .. py:attribute:: start_t


   .. py:attribute:: end_t


   .. py:attribute:: start


   .. py:attribute:: end


   .. py:attribute:: coastline


   .. py:attribute:: duration


   .. py:attribute:: output


   .. py:attribute:: results


   .. py:attribute:: model


   .. py:attribute:: modeldrop


   .. py:attribute:: latvar


   .. py:attribute:: lonvar


   .. py:attribute:: radiusvar


   .. py:attribute:: lat


   .. py:attribute:: lon


   .. py:attribute:: radius


   .. py:attribute:: datevar


   .. py:attribute:: dates


   .. py:attribute:: date


   .. py:attribute:: monthvar


   .. py:attribute:: months
      :value: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',...



   .. py:attribute:: month


   .. py:attribute:: yearvar


   .. py:attribute:: years


   .. py:attribute:: year


   .. py:attribute:: hourvar


   .. py:attribute:: hours


   .. py:attribute:: hour


   .. py:attribute:: minutevar


   .. py:attribute:: minutes


   .. py:attribute:: minute


   .. py:attribute:: timezonevar


   .. py:attribute:: timezone
      :value: ['UTC', 'CET']



   .. py:attribute:: elat


   .. py:attribute:: elon


   .. py:attribute:: eradius


   .. py:attribute:: edatevar


   .. py:attribute:: edates


   .. py:attribute:: edate


   .. py:attribute:: emonthvar


   .. py:attribute:: emonth


   .. py:attribute:: eyearvar


   .. py:attribute:: eyears


   .. py:attribute:: eyear


   .. py:attribute:: ehourvar


   .. py:attribute:: ehours


   .. py:attribute:: ehour


   .. py:attribute:: eminutevar


   .. py:attribute:: eminutes


   .. py:attribute:: eminute


   .. py:attribute:: durationhours


   .. py:attribute:: directionvar


   .. py:attribute:: direction


   .. py:attribute:: text


   .. py:attribute:: dianadir
      :value: '/vol/vvfelles/opendrift/output/'



   .. py:method:: copy_position(a, b, c)


   .. py:method:: handle_result(command)


   .. py:method:: validate_config(value_if_allowed, prior_value, key)

      From config menu selection.



   .. py:method:: set_model(model, rebuild_gui=True, logfile=None)


   .. py:method:: set_config_checkbox(key, i)


   .. py:method:: set_config_enum(event, key, i)


   .. py:method:: show_help()


   .. py:method:: convert_lonlat()


   .. py:method:: check_seeding()


   .. py:method:: run_opendrift()


.. py:function:: main()

